{
  "version": 3,
  "sources": ["build/ts/toArr.ts", "build/ts/theme.ts"],
  "sourcesContent": ["export const toArr = (input: any): any[] => Array.from(input);\r\nexport default toArr;", "import toArr from \"./toArr\";\r\n\r\n// Based on [joshwcomeau.com/gatsby/dark-mode/]\r\nexport let getTheme = (): string | null => {\r\n    let theme = window.localStorage.getItem(\"theme\");\r\n    // If the user has explicitly chosen light or dark,\r\n    // let's use it. Otherwise, this value will be null.\r\n    if (typeof theme === \"string\") return theme;\r\n\r\n    // If they are using a browser/OS that doesn't support\r\n    // color themes, let's default to 'light'.\r\n    return null;\r\n};\r\n\r\nexport let setTheme = (theme: string): void => {\r\n    // If the user has explicitly chosen light or dark, store the default theme\r\n    if (typeof theme === \"string\") window.localStorage.setItem(\"theme\", theme);\r\n};\r\n\r\nexport let mediaTheme = (): string | null => {\r\n    // If they haven't been explicitly set, let's check the media query\r\n    let mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    let hasMediaQueryPreference = typeof mql.matches === \"boolean\";\r\n    if (hasMediaQueryPreference) return mql.matches ? \"dark\" : \"light\";\r\n    return null;\r\n};\r\n\r\nlet html = document.querySelector(\"html\");\r\n// Get theme from html tag, if it has a theme or get it from localStorage\r\nexport let themeGet = () => {\r\n    let themeAttr = html.getAttribute(\"data-theme\");\r\n    if (typeof themeAttr === \"string\" && themeAttr.length) {\r\n        return themeAttr;\r\n    }\r\n\r\n    return getTheme();\r\n};\r\n\r\n// Set theme in localStorage, as well as in the html tag\r\nexport let themeSet = (theme: string) => {\r\n    html.setAttribute(\"data-theme\", theme);\r\n    html.classList.toggle(\"dark\", theme == \"dark\");\r\n    setTheme(theme);\r\n};\r\n\r\nexport let runTheme = () => {\r\n    try {\r\n        let theme = getTheme();\r\n        if (theme === null) theme = mediaTheme();\r\n        theme && themeSet(theme);\r\n\r\n        window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", (e) => {\r\n            themeSet(e.matches ? \"dark\" : \"light\");\r\n        });\r\n\r\n        window.matchMedia(\"(prefers-color-scheme: light)\").addEventListener(\"change\", (e) => {\r\n            themeSet(e.matches ? \"light\" : \"dark\");\r\n        });\r\n\r\n    } catch (e) {\r\n        console.warn(\"Theming isn't available on this browser.\", e);\r\n    }\r\n};\r\n\r\nlet handler = (() => {\r\n    document.removeEventListener(\"DOMContentLoaded\", handler);\r\n    window.removeEventListener(\"load\", handler);\r\n\r\n    try {\r\n        // On theme switcher button click (mouseup is a tiny bit more efficient) toggle the theme between dark and light mode\r\n        let themeSwitch = toArr(document.querySelectorAll(\".theme-toggle\"));\r\n        if (themeSwitch[0]) {\r\n            for (let el of themeSwitch)\r\n                el.addEventListener(\"click\", () => {\r\n                    themeSet(themeGet() === \"dark\" ? \"light\" : \"dark\");\r\n                });\r\n        }\r\n    } catch (e) {\r\n        console.warn(\"Theming seems to break on this browser.\", e);\r\n    }\r\n}).bind(this);\r\n\r\nrunTheme();\r\ndocument.addEventListener(\"DOMContentLoaded\", handler);\r\nwindow.addEventListener(\"load\", handler);"],
  "mappings": "AAAO,GAAM,GAAQ,AAAC,GAAsB,MAAM,KAAK,GAChD,EAAQ,ECER,GAAI,GAAW,IAAqB,CACvC,GAAI,GAAQ,OAAO,aAAa,QAAQ,SAGxC,MAAI,OAAO,IAAU,SAAiB,EAI/B,MAGA,EAAW,AAAC,GAAwB,CAE3C,AAAI,MAAO,IAAU,UAAU,OAAO,aAAa,QAAQ,QAAS,IAG7D,EAAa,IAAqB,CAEzC,GAAI,GAAM,OAAO,WAAW,gCAE5B,MAD8B,OAAO,GAAI,SAAY,UACjB,EAAI,QAAU,OAAS,QACpD,MAGP,EAAO,SAAS,cAAc,QAEvB,EAAW,IAAM,CACxB,GAAI,GAAY,EAAK,aAAa,cAClC,MAAI,OAAO,IAAc,UAAY,EAAU,OACpC,EAGJ,KAIA,EAAW,AAAC,GAAkB,CACrC,EAAK,aAAa,aAAc,GAChC,EAAK,UAAU,OAAO,OAAQ,GAAS,QACvC,EAAS,IAGF,EAAW,IAAM,CACxB,GAAI,CACA,GAAI,GAAQ,IACZ,AAAI,IAAU,MAAM,GAAQ,KAC5B,GAAS,EAAS,GAElB,OAAO,WAAW,gCAAgC,iBAAiB,SAAU,AAAC,GAAM,CAChF,EAAS,EAAE,QAAU,OAAS,WAGlC,OAAO,WAAW,iCAAiC,iBAAiB,SAAU,AAAC,GAAM,CACjF,EAAS,EAAE,QAAU,QAAU,gBAG9B,EAAP,CACE,QAAQ,KAAK,2CAA4C,KAI7D,EAAW,KAAM,CACjB,SAAS,oBAAoB,mBAAoB,GACjD,OAAO,oBAAoB,OAAQ,GAEnC,GAAI,CAEA,GAAI,GAAc,EAAM,SAAS,iBAAiB,kBAClD,GAAI,EAAY,GACZ,OAAS,KAAM,GACX,EAAG,iBAAiB,QAAS,IAAM,CAC/B,EAAS,MAAe,OAAS,QAAU,gBAGlD,EAAP,CACE,QAAQ,KAAK,0CAA2C,MAE7D,KAAK,QAER,IACA,SAAS,iBAAiB,mBAAoB,GAC9C,OAAO,iBAAiB,OAAQ",
  "names": []
}
