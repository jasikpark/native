{"version":3,"file":"api.es.js","sources":["../node_modules/managerjs/lib/api.umd.js","../src/api.ts"],"sourcesContent":["!function(n,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(n=n||self).managerjs=t()}(this,function(){function n(n){var t;if(\"undefined\"!=typeof Symbol){if(Symbol.asyncIterator&&null!=(t=n[Symbol.asyncIterator]))return t.call(n);if(Symbol.iterator&&null!=(t=n[Symbol.iterator]))return t.call(n)}throw new TypeError(\"Object is not async iterable\")}function t(n,e,i){if(!n.s){if(i instanceof r){if(!i.s)return void(i.o=t.bind(null,n,e));1&e&&(e=i.s),i=i.v}if(i&&i.then)return void i.then(t.bind(null,n,e),t.bind(null,n,2));n.s=e,n.v=i;var o=n.o;o&&o(n)}}var e=function(){function t(n){this.map=new Map(n)}var e,r=t.prototype;return r.getMap=function(){return this.map},r.get=function(n){return this.map.get(n)},r.keys=function(){return[].concat(this.map.keys())},r.values=function(){return[].concat(this.map.values())},r.set=function(n,t){return this.map.set(n,t),this},r.add=function(n){return this.set(this.size,n),this},r.last=function(n){void 0===n&&(n=1);var t=this.keys()[this.size-n];return this.get(t)},r.prev=function(){return this.last(2)},r.delete=function(n){return this.map.delete(n),this},r.clear=function(){return this.map.clear(),this},r.has=function(n){return this.map.has(n)},r.entries=function(){return this.map.entries()},r.forEach=function(n,t){return void 0===n&&(n=function(){}),this.map.forEach(n,t),this},r[Symbol.iterator]=function(){return this.entries()},r.methodCall=function(n){var t=arguments;return this.forEach(function(e){e[n].apply(e,[].slice.call(t,1))}),this},r.asyncMethodCall=function(t){try{var e,r,i,c,h,a=this,s=arguments,l=!0,v=!1,d=f(function(){return u(function(){r=n(a.map);var e=o(function(){return!!Promise.resolve(r.next()).then(function(n){return l=i.done,i=n,Promise.resolve(i.value).then(function(n){return c=n,!l})})},function(){return!!(l=!0)},function(){var n=c[1];return Promise.resolve(n[t].apply(n,[].slice.call(s,1))).then(function(){})});if(e&&e.then)return e.then(function(){})},function(n){v=!0,h=n})},function(n,t){function i(r){if(e)return r;if(n)throw t;return t}var o=f(function(){var n=function(){if(!l&&null!=r.return)return Promise.resolve(r.return()).then(function(){})}();if(n&&n.then)return n.then(function(){})},function(n,t){if(v)throw h;if(n)throw t;return t});return o&&o.then?o.then(i):i(o)});return Promise.resolve(d&&d.then?d.then(function(n){return e?n:a}):e?d:a)}catch(n){return Promise.reject(n)}},(e=[{key:\"size\",get:function(){return this.map.size}}])&&function(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}(t.prototype,e),t}(),r=function(){function n(){}return n.prototype.then=function(e,r){var i=new n,o=this.s;if(o){var u=1&o?e:r;if(u){try{t(i,1,u(this.v))}catch(n){t(i,2,n)}return i}return this}return this.o=function(n){try{var o=n.v;1&n.s?t(i,1,e?e(o):o):r?t(i,1,r(o)):t(i,2,o)}catch(n){t(i,2,n)}},i},n}();function i(n){return n instanceof r&&1&n.s}function o(n,e,o){for(var u;;){var f=n();if(i(f)&&(f=f.v),!f)return c;if(f.then){u=0;break}var c=o();if(c&&c.then){if(!i(c)){u=1;break}c=c.s}if(e){var h=e();if(h&&h.then&&!i(h)){u=2;break}}}var a=new r,s=t.bind(null,a,2);return(0===u?f.then(v):1===u?c.then(l):h.then(d)).then(void 0,s),a;function l(r){c=r;do{if(e&&(h=e())&&h.then&&!i(h))return void h.then(d).then(void 0,s);if(!(f=n())||i(f)&&!f.v)return void t(a,1,c);if(f.then)return void f.then(v).then(void 0,s);i(c=o())&&(c=c.v)}while(!c||!c.then);c.then(l).then(void 0,s)}function v(n){n?(c=o())&&c.then?c.then(l).then(void 0,s):l(c):t(a,1,c)}function d(){(f=n())?f.then?f.then(v).then(void 0,s):v(f):t(a,1,c)}}function u(n,t){try{var e=n()}catch(n){return t(n)}return e&&e.then?e.then(void 0,t):e}function f(n,t){try{var e=n()}catch(n){return t(!0,n)}return e&&e.then?e.then(t.bind(null,!1),t.bind(null,!0)):t(!1,e)}return e});\n//# sourceMappingURL=api.umd.js.map\n","import Manager from \"managerjs\";\r\n\r\nexport type ListenerCallback = (...args: any) => void;\r\nexport interface IListener {\r\n    readonly callback: ListenerCallback;\r\n    readonly scope: object;\r\n    readonly name: string;\r\n}\r\n\r\n/**\r\n * Represents a new event listener consisting of properties like: callback, scope, name\r\n *\r\n * @export\r\n * @class Listener\r\n */\r\nexport class Listener {\r\n\t/**\r\n\t * The current listener data\r\n\t *\r\n\t * @private\r\n\t * @type IListener\r\n\t * @memberof Listener\r\n\t */\r\n    private listener: IListener;\r\n\r\n\t/**\r\n\t * Creates an instance of Listener.\r\n\t *\r\n\t * @param {IListener} { callback = () => { }, scope = null, name = \"event\" }\r\n\t * @memberof Listener\r\n\t */\r\n    constructor({\r\n        callback = () => { },\r\n        scope = null,\r\n        name = \"event\",\r\n    }: IListener) {\r\n        this.listener = { callback, scope, name };\r\n    }\r\n\r\n\t/**\r\n\t * Returns the callback Function of the Listener\r\n\t *\r\n\t * @returns ListenerCallback\r\n\t * @memberof Listener\r\n\t */\r\n    public getCallback(): ListenerCallback {\r\n        return this.listener.callback;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the scope as an Object, from the Listener\r\n\t *\r\n\t * @returns object\r\n\t * @memberof Listener\r\n\t */\r\n    public getScope(): object {\r\n        return this.listener.scope;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the event as a String, from the Listener\r\n\t *\r\n\t * @returns string\r\n\t * @memberof Listener\r\n\t */\r\n    public getEventName(): string {\r\n        return this.listener.name;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the listener as an Object\r\n\t *\r\n\t * @returns IListener\r\n\t * @memberof Listener\r\n\t */\r\n    public toJSON(): IListener {\r\n        return this.listener;\r\n    }\r\n}\r\n\r\n/**\r\n * Represents a new event listener consisting of properties like: callback, scope, name\r\n *\r\n * @export\r\n * @class Event\r\n * @extends {Manager<number, Listener>}\r\n */\r\nexport class Event extends Manager<number, Listener> {\r\n\t/**\r\n\t * The name of the event\r\n\t *\r\n\t * @private\r\n\t * @type string\r\n\t * @memberof Event\r\n\t */\r\n    private name: string;\r\n\r\n\t/**\r\n\t * Creates an instance of Event.\r\n\t *\r\n\t * @param {string} [name=\"event\"]\r\n\t * @memberof Event\r\n\t */\r\n    constructor(name: string = \"event\") {\r\n        super();\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport type EventInput = string | object | Array<string>;\r\n\r\n/**\r\n * An event emitter\r\n *\r\n * @export\r\n * @class EventEmitter\r\n * @extends {Manager<string, Event>}\r\n */\r\nexport class EventEmitter extends Manager<string, Event> {\r\n\t/**\r\n\t * Creates an instance of EventEmitter.\r\n\t *\r\n\t * @memberof EventEmitter\r\n\t */\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n\t * Gets events, if event doesn't exist create a new Event\r\n     *\r\n     * @param {string} name\r\n     * @returns Event\r\n     * @memberof EventEmitter\r\n     */\r\n    public getEvent(name: string): Event {\r\n        let event = this.get(name);\r\n        if (!(event instanceof Event)) {\r\n            this.set(name, new Event(name));\r\n            return this.get(name);\r\n        }\r\n\r\n        return event;\r\n    }\r\n\t/**\r\n\t * Creates a new listener and adds it to the event\r\n\t *\r\n\t * @param {string} name\r\n\t * @param {ListenerCallback} callback\r\n\t * @param {object} scope\r\n\t * @returns Event\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public newListener(\r\n        name: string,\r\n        callback: ListenerCallback,\r\n        scope: object\r\n    ): Event {\r\n        let event = this.getEvent(name);\r\n        event.add(new Listener({ name, callback, scope }));\r\n        return event;\r\n    }\r\n\r\n\t/**\r\n\t * Adds a listener for a given event\r\n\t *\r\n\t * @param {EventInput} events\r\n\t * @param {ListenerCallback} callback\r\n\t * @param {object} scope\r\n\t * @returns\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public on(\r\n        events: EventInput,\r\n        callback?: ListenerCallback,\r\n        scope?: object\r\n    ): EventEmitter {\r\n        // If there is no event break\r\n        if (typeof events == \"undefined\") return this;\r\n\r\n        // Create a new event every space\r\n        if (typeof events == \"string\") events = events.split(/\\s/g);\r\n\r\n        let _name: string;\r\n        let _callback: ListenerCallback;\r\n        let _scope: object;\r\n\r\n        // Loop through the list of events\r\n        Object.keys(events).forEach(key => {\r\n            // Select the name of the event from the list\r\n            // Remember events can be {String | Object | Array<string>}\r\n\r\n            // Check If events is an Object (JSON like Object, and not an Array)\r\n            if (typeof events == \"object\" && !Array.isArray(events)) {\r\n                _name = key;\r\n                _callback = events[key];\r\n                _scope = callback;\r\n            } else {\r\n                _name = events[key];\r\n                _callback = callback;\r\n                _scope = scope;\r\n            }\r\n\r\n            this.newListener(_name, _callback, _scope);\r\n        }, this);\r\n        return this;\r\n    }\r\n\r\n\t/**\r\n\t * Removes a listener from an event\r\n\t *\r\n\t * @param {string} name\r\n\t * @param {ListenerCallback} [callback]\r\n\t * @param {object} [scope]\r\n\t * @returns Event\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public removeListener(\r\n        name: string,\r\n        callback: ListenerCallback,\r\n        scope: object\r\n    ): Event {\r\n        let event: Event = this.getEvent(name);\r\n\r\n        if (callback) {\r\n            let i = 0,\r\n                len: number = event.size,\r\n                value: Listener;\r\n            let listener = new Listener({ name, callback, scope });\r\n            for (; i < len; i++) {\r\n                value = event.get(i);\r\n                console.log(value);\r\n                if (\r\n                    value.getCallback() === listener.getCallback() &&\r\n                    value.getScope() === listener.getScope()\r\n                )\r\n                    break;\r\n            }\r\n\r\n            event.delete(i);\r\n        }\r\n        return event;\r\n    }\r\n\r\n\t/**\r\n\t * Removes a listener from a given event, or it just completely removes an event\r\n\t *\r\n\t * @param {EventInput} events\r\n\t * @param {ListenerCallback} [callback]\r\n\t * @param {object} [scope]\r\n\t * @returns EventEmitter\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public off(\r\n        events: EventInput,\r\n        callback?: ListenerCallback,\r\n        scope?: object\r\n    ): EventEmitter {\r\n        // If there is no event break\r\n        if (typeof events == \"undefined\") return this;\r\n\r\n        // Create a new event every space\r\n        if (typeof events == \"string\") events = events.split(/\\s/g);\r\n\r\n        let _name: string;\r\n        let _callback: ListenerCallback;\r\n        let _scope: object;\r\n\r\n        // Loop through the list of events\r\n        Object.keys(events).forEach((key) => {\r\n            // Select the name of the event from the list\r\n            // Remember events can be {String | Object | Array<any>}\r\n\r\n            // Check If events is an Object (JSON like Object, and not an Array)\r\n            if (typeof events == \"object\" && !Array.isArray(events)) {\r\n                _name = key;\r\n                _callback = events[key];\r\n                _scope = callback;\r\n            } else {\r\n                _name = events[key];\r\n                _callback = callback;\r\n                _scope = scope;\r\n            }\r\n\r\n            if (_callback) {\r\n                this.removeListener(_name, _callback, _scope);\r\n            } else this.delete(_name);\r\n        }, this);\r\n        return this;\r\n    }\r\n\r\n\t/**\r\n\t * Adds a one time event listener for an event\r\n\t *\r\n\t * @param {EventInput} events\r\n\t * @param {ListenerCallback} callback\r\n\t * @param {object} scope\r\n\t * @returns EventEmitter\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public once(\r\n        events: EventInput,\r\n        callback: ListenerCallback,\r\n        scope: object\r\n    ): EventEmitter {\r\n        // If there is no event break\r\n        if (typeof events == \"undefined\") return this;\r\n\r\n        // Create a new event every space\r\n        if (typeof events == \"string\") events = events.split(/\\s/g);\r\n\r\n        let onceFn: ListenerCallback = (...args) => {\r\n            this.off(events, onceFn, scope);\r\n            callback.apply(scope, args);\r\n        };\r\n\r\n        this.on(events, onceFn, scope);\r\n        return this;\r\n    }\r\n\r\n\t/**\r\n\t * Call all listeners within an event\r\n\t *\r\n\t * @param {(string | Array<any>)} events\r\n     * @param {...any} args\r\n\t * @returns EventEmitter\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public emit(\r\n        events: string | Array<any>,\r\n        ...args: any\r\n    ): EventEmitter {\r\n        // If there is no event break\r\n        if (typeof events == \"undefined\") return this;\r\n\r\n        // Create a new event every space\r\n        if (typeof events == \"string\") events = events.split(/\\s/g);\r\n\r\n        // Loop through the list of events\r\n        events.forEach((event: string) => {\r\n            let listeners: Event = this.getEvent(event);\r\n\r\n            const customEvent: CustomEvent<any> = new CustomEvent(event, { detail: args })\r\n            window.dispatchEvent(customEvent);\r\n\r\n            listeners.forEach((listener: Listener) => {\r\n                let { callback, scope }: IListener = listener.toJSON();\r\n                callback.apply(scope, args);\r\n            });\r\n        }, this);\r\n        return this;\r\n    }\r\n}"],"names":["module","n","t","Symbol","asyncIterator","call","iterator","TypeError","e","i","s","r","o","bind","v","then","this","map","Map","prototype","getMap","get","keys","concat","values","set","add","size","last","prev","delete","clear","has","entries","forEach","methodCall","arguments","apply","slice","asyncMethodCall","c","h","a","l","d","f","u","Promise","resolve","next","done","value","return","reject","key","length","enumerable","configurable","writable","Object","defineProperty","Listener","callback","scope","name","listener","getCallback","getScope","getEventName","toJSON","Event","_this2","Manager","EventEmitter","getEvent","event","newListener","on","events","_name","_callback","_scope","split","Array","isArray","_this3","removeListener","len","console","log","off","_this4","once","onceFn","_this","emit","args","listeners","_this5","customEvent","CustomEvent","detail","window","dispatchEvent"],"mappings":"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"}