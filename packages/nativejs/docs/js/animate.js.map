{"version":3,"sources":["../../ts/animate.ts"],"names":[],"mappings":"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","file":"animate.js","sourcesContent":["import { EventEmitter } from \"./api.js\";\r\n\r\n// Based on animate-plus.js\r\n// DOM\r\nexport type AnimationTarget = string | Node | NodeList;\r\nexport const getElements = (selector: string | Node): Node[] => {\r\n    return typeof selector === \"string\" ? [...document.querySelectorAll(selector as string)] : [selector];\r\n};\r\n\r\nexport const getTargets = (targets: AnimationTarget): Node[] => {\r\n    if (Array.isArray(targets)) return targets;\r\n    if (typeof targets == \"string\" || targets instanceof Node)\r\n        return getElements(targets);\r\n    if (targets instanceof NodeList) return [...targets];\r\n    return null;\r\n};\r\n\r\nconst accelerate = ({ style }, keyframes) =>\r\n    style.willChange = keyframes\r\n        ? keyframes.map(({ property }) => property).join()\r\n        : \"auto\";\r\n\r\n// Compute Value\r\nexport const computeValue = (value: any, input: any) =>\r\n    typeof value == \"function\" ? value(input) : value;\r\n\r\n// Convert all hex color to rgba\r\nexport const parseColor = (value: string): string => {\r\n    let strValue = String(value);\r\n    if (!strValue.startsWith(\"#\")) return strValue;\r\n    let hex = strValue.slice(1);\r\n    let [r, g, b, a = 255] = hex.length < 5 ?\r\n        hex.match(/\\w/g).map(x => parseInt(x + x, 16)) :\r\n        hex.match(/\\w\\w/g).map(x => parseInt(x, 16));\r\n    return `rgba(${r}, ${g}, ${b}, ${a / 255})`;\r\n};\r\n\r\n// Easing Equations \r\nconst pi2 = Math.PI * 2;\r\nconst getOffset = (strength, period) =>\r\n    period / pi2 * Math.asin(1 / strength);\r\n\r\nexport const easings = {\r\n    \"linear\": progress => progress,\r\n\r\n    \"in-cubic\": progress => progress ** 3,\r\n    \"in-quartic\": progress => progress ** 4,\r\n    \"in-quintic\": progress => progress ** 5,\r\n    \"in-exponential\": progress => 1024 ** (progress - 1),\r\n    \"in-circular\": progress => 1 - Math.sqrt(1 - progress ** 2),\r\n    \"in-elastic\": (progress, amplitude, period) => {\r\n        const strength = Math.max(amplitude, 1);\r\n        const offset = getOffset(strength, period);\r\n        return -(strength * 2 ** (10 * (progress -= 1)) * Math.sin((progress - offset) * pi2 / period));\r\n    },\r\n\r\n    \"out-cubic\": progress => --progress ** 3 + 1,\r\n    \"out-quartic\": progress => 1 - --progress ** 4,\r\n    \"out-quintic\": progress => --progress ** 5 + 1,\r\n    \"out-exponential\": progress => 1 - 2 ** (-10 * progress),\r\n    \"out-circular\": progress => Math.sqrt(1 - --progress ** 2),\r\n    \"out-elastic\": (progress, amplitude, period) => {\r\n        const strength = Math.max(amplitude, 1);\r\n        const offset = getOffset(strength, period);\r\n        return strength * 2 ** (-10 * progress) * Math.sin((progress - offset) * pi2 / period) + 1;\r\n    },\r\n\r\n    \"in-out-cubic\": progress =>\r\n        (progress *= 2) < 1\r\n            ? .5 * progress ** 3\r\n            : .5 * ((progress -= 2) * progress ** 2 + 2),\r\n    \"in-out-quartic\": progress =>\r\n        (progress *= 2) < 1\r\n            ? .5 * progress ** 4\r\n            : -.5 * ((progress -= 2) * progress ** 3 - 2),\r\n    \"in-out-quintic\": progress =>\r\n        (progress *= 2) < 1\r\n            ? .5 * progress ** 5\r\n            : .5 * ((progress -= 2) * progress ** 4 + 2),\r\n    \"in-out-exponential\": progress =>\r\n        (progress *= 2) < 1\r\n            ? .5 * 1024 ** (progress - 1)\r\n            : .5 * (-(2 ** (-10 * (progress - 1))) + 2),\r\n    \"in-out-circular\": progress =>\r\n        (progress *= 2) < 1\r\n            ? -.5 * (Math.sqrt(1 - progress ** 2) - 1)\r\n            : .5 * (Math.sqrt(1 - (progress -= 2) * progress) + 1),\r\n    \"in-out-elastic\": (progress, amplitude, period) => {\r\n        const strength = Math.max(amplitude, 1);\r\n        const offset = getOffset(strength, period);\r\n        return (progress *= 2) < 1\r\n            ? -.5 * (strength * 2 ** (10 * (progress -= 1)) * Math.sin((progress - offset) * pi2 / period))\r\n            : strength * 2 ** (-10 * (progress -= 1)) * Math.sin((progress - offset) * pi2 / period) * .5 + 1;\r\n    }\r\n};\r\n\r\nconst decomposeEasing = (value: string) => {\r\n    const [easing, amplitude = 1, period = .4] = value.trim().split(\" \");\r\n    return { easing, amplitude, period };\r\n};\r\n\r\nconst ease = ({ easing, amplitude, period }, progress: number): number =>\r\n    easings[easing](progress, amplitude, period);\r\n\r\n\r\n// keyframes composition\r\n// =====================\r\n\r\n/*\r\nconst extractRegExp = /-?\\d*\\.?\\d+/g;\r\nconst extractStrings = (value: string): string[] =>\r\n    value.split(extractRegExp);\r\nconst extractNumbers = (value: string): number[] =>\r\n    value.match(extractRegExp).map(Number);\r\nconst sanitize = (values: any[]) => values.map(parseColor);\r\n\r\nexport interface keyframes {\r\n    property: string,\r\n    numbers: number[][],\r\n    strings: string[],\r\n    round: boolean\r\n};\r\n\r\nconst propertyKeyframes = (property: string, values: any): keyframes => {\r\n    const animatable = sanitize(values);\r\n    const strings = extractStrings(animatable[0]);\r\n    const numbers = animatable.map(extractNumbers);\r\n    const round = strings[0].startsWith(\"rgb\");\r\n    return { property, strings, numbers, round };\r\n};\r\n\r\nconst createAnimationKeyframes = (animationProperties: object, index: number) =>\r\n    Object.entries(animationProperties)\r\n        .map(([property, values]: [string, any[]]) => {\r\n            return propertyKeyframes(property, computeValue(values, index))\r\n        });\r\n\r\nconst getCurrentValue = (from: number, to: number, easing: number) =>\r\n    from + (to - from) * easing;\r\n\r\nconst recomposeValue = ([from, to]: number[][], strings: string[], round: boolean, easing: number) =>\r\n    strings.reduce((style, string, index) => {\r\n        const previous = index - 1;\r\n        const value = getCurrentValue(from[previous], to[previous], easing);\r\n        return style + (round && index < 4 ? Math.round(value) : value) + string;\r\n    });\r\n\r\nconst createStyles = (keyframes: keyframes[], easing: number) =>\r\n    keyframes.reduce((styles, { property, numbers, strings, round }: keyframes) => {\r\n        styles[property] = recomposeValue(numbers, strings, round, easing);\r\n        return styles;\r\n    }, {});\r\n\r\nconst reverseKeyframes = keyframes =>\r\n    keyframes.forEach(({ numbers }) => numbers.reverse());\r\n\r\n\r\n// animation tracking\r\n// ==================\r\n\r\nconst rAF = {\r\n    all: new Set,\r\n    add(object) {\r\n        if (this.all.add(object).size < 2) requestAnimationFrame(tick);\r\n    }\r\n};\r\n\r\nconst paused = {};\r\nconst trackTime = (timing, now) => {\r\n    if (!timing.startTime) timing.startTime = now;\r\n    timing.elapsed = now - timing.startTime;\r\n};\r\n\r\nconst resetTime = object =>\r\n    object.startTime = 0;\r\n\r\nconst getProgress = ({ elapsed, duration }) =>\r\n    duration > 0 ? Math.min(elapsed / duration, 1) : 1;\r\n\r\nconst setSpeed = (speed, value, index) =>\r\n    speed > 0 ? computeValue(value, index) / speed : 0;\r\n\r\nconst addAnimations = (options, resolve) => {\r\n    const {\r\n        elements = null,\r\n        easing = \"out-elastic\",\r\n        duration = 1000,\r\n        delay: timeout = 0,\r\n        speed = 1,\r\n        loop = false,\r\n        optimize = false,\r\n        direction = \"normal\",\r\n        blur = null,\r\n        change = null,\r\n        ...rest\r\n    } = options;\r\n\r\n    const last = {\r\n        totalDuration: -1\r\n    };\r\n\r\n    getElements(elements).forEach(async (element, index) => {\r\n        const keyframes = createAnimationKeyframes(rest, index);\r\n        const animation = {\r\n            element,\r\n            keyframes,\r\n            loop,\r\n            optimize,\r\n            direction,\r\n            change,\r\n            easing: decomposeEasing(easing),\r\n            duration: setSpeed(speed, duration, index)\r\n        };\r\n\r\n        const animationTimeout = setSpeed(speed, timeout, index);\r\n        const totalDuration = animationTimeout + animation.duration;\r\n\r\n        if (direction != \"normal\")\r\n            reverseKeyframes(keyframes);\r\n\r\n        if (element) {\r\n            if (optimize)\r\n                accelerate(element, keyframes);\r\n        }\r\n\r\n        if (totalDuration > last.totalDuration) {\r\n            last.animation = animation;\r\n            last.totalDuration = totalDuration;\r\n        }\r\n\r\n        if (animationTimeout) await delay(animationTimeout);\r\n        rAF.add(animation);\r\n    });\r\n\r\n    const { animation } = last;\r\n    if (!animation) return;\r\n    animation.end = resolve;\r\n    animation.options = options;\r\n};\r\n\r\nconst tick = now => {\r\n    const { all } = rAF;\r\n    all.forEach(object => {\r\n        trackTime(object, now);\r\n        const progress = getProgress(object);\r\n        const {\r\n            element,\r\n            keyframes,\r\n            loop,\r\n            optimize,\r\n            direction,\r\n            change,\r\n            easing,\r\n            duration,\r\n            end,\r\n            options\r\n        } = object;\r\n\r\n        // object is an animation\r\n        if (direction) {\r\n            let curve = progress;\r\n            switch (progress) {\r\n                case 0:\r\n                    if (direction == \"alternate\") reverseKeyframes(keyframes);\r\n                    break;\r\n                case 1:\r\n                    if (loop)\r\n                        resetTime(object);\r\n                    else {\r\n                        all.delete(object);\r\n                        if (optimize && element) accelerate(element);\r\n                    }\r\n                    if (end) end(options);\r\n                    break;\r\n                default:\r\n                    curve = ease(easing, progress);\r\n            }\r\n            if (change && end) change(curve);\r\n            if (element) Object.assign(element.style, createStyles(keyframes, curve));\r\n            return;\r\n        }\r\n\r\n        // object is a delay\r\n        if (progress < 1) return;\r\n        all.delete(object);\r\n        end(duration);\r\n    });\r\n\r\n    if (all.size) requestAnimationFrame(tick);\r\n};\r\n\r\ndocument.addEventListener(\"visibilitychange\", () => {\r\n    const now = performance.now();\r\n\r\n    if (document.hidden) {\r\n        const { all } = rAF;\r\n        paused.time = now;\r\n        paused.all = new Set(all);\r\n        all.clear();\r\n        return;\r\n    }\r\n\r\n    const { all, time } = paused;\r\n    if (!all) return;\r\n    const elapsed = now - time;\r\n    requestAnimationFrame(() =>\r\n        all.forEach(object => {\r\n            object.startTime += elapsed;\r\n            rAF.add(object);\r\n        }));\r\n});\r\n*/\r\n\r\n// blur = null,\r\n// change = null,\r\n// Animation Engine\r\nexport interface AnimationOptions {\r\n    target?: AnimationTarget,\r\n\r\n    delay?: number,\r\n    easing?: string,\r\n    endDelay?: number,\r\n    duration?: number,\r\n    keyframes?: object[],\r\n    loop?: number | boolean, // iterations: number,\r\n    animation?: AnimationOptions,\r\n    fill?: \"none\" | \"forwards\" | \"backwards\" | \"both\" | \"auto\",\r\n    direction?: \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\",\r\n};\r\nexport const DefaultAnimationOptions: AnimationOptions = {\r\n    animation: {},\r\n    keyframes: [],\r\n\r\n    loop: 1, // iterations: number,\r\n    delay: 0,\r\n    easing: \"ease\",\r\n    endDelay: 0,\r\n    duration: 1000,\r\n    direction: \"normal\",\r\n    fill: \"forwards\",\r\n};\r\n\r\nexport class Animation extends Promise<Animation> {\r\n\r\n    /**\r\n     * Creates an instance of Animation.\r\n     * @param {object} options\r\n     * @memberof Animation\r\n     */\r\n    constructor(\r\n        /**\r\n         * Stores the options for the current animation\r\n         *\r\n         * @protected\r\n         * @type AnimationOptions\r\n         * @memberof Animation\r\n         */\r\n        protected options: AnimationOptions = DefaultAnimationOptions,\r\n    ) {\r\n        super(resolve => {\r\n\r\n\r\n            resolve();\r\n        });\r\n        let { animation = {}, ...rest } = options;\r\n        this.options = { ...DefaultAnimationOptions, ...options, ...animation };\r\n        // const { \r\n\r\n        // }\r\n        // this.animationProperties = \r\n    }\r\n\r\n}\r\n\r\nexport const animate = (targets: AnimationTarget, properties: object, options: AnimationOptions) => { };\r\nexport default animate;"]}