{"version":3,"sources":["../../ts/framework.ts"],"names":[],"mappings":"AACA,OAAO,IAAI,MAAM,WAAW,CAAC;AAC7B,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAErF,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;AACtB,GAAG;KACE,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC;KAC1B,GAAG,CAAC,SAAS,EAAE,IAAI,YAAY,EAAE,CAAC;KAClC,GAAG,CAAC,SAAS,EAAE,IAAI,cAAc,EAAE,CAAC;KACpC,GAAG,CAAC,OAAO,EAAE,iBAAiB,CAAC;IAChC,gCAAgC;KAC/B,GAAG,CAAC,YAAY,EAAE,IAAI,IAAI,EAAE,CAAC;KAC7B,GAAG,CAAC,YAAY,EAAE,IAAI,aAAa,EAAE,CAAC;KACtC,GAAG,CAAC,YAAY,EAAE,IAAI,KAAK,EAAE,CAAC;KAC9B,GAAG,CAAC,YAAY,EAAE,IAAI,SAAS,EAAE,CAAC;KAClC,GAAG,CAAC,YAAY,EAAE,IAAI,UAAU,EAAE,CAAC,CAAC;AAEzC,CAAC,KAAK,IAAI,EAAE;IACR,IAAI,WAAW,GAAG,GAAG,EAAE;QACnB,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC/B,IAAI,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;QAE7D,KAAK,IAAI,IAAI,IAAI,OAAO,EAAE;YACtB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAE,IAA0B,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAClE,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;aACzD;SACJ;IACL,CAAC,CAAC;IAEF,IAAI;QACA,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;KACpB;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;KACxC;IAED,GAAG,CAAC,EAAE,CAAC;QACH,OAAO,EAAE,WAAW;QACpB,IAAI,EAAE,WAAW;KACpB,CAAC,CAAC;AACP,CAAC,CAAC,EAAE,CAAC","file":"framework.js","sourcesContent":["\r\nimport PJAX from \"./pjax.js\";\r\nimport { App, _URL } from \"./api.js\";\r\nimport { InViewBlockIntent } from \"./blocks.js\";\r\nimport { Splashscreen, IntroAnimation } from \"./services.js\";\r\nimport { Fade, Slide, SlideLeft, SlideRight, BigTransition } from \"./transitions.js\";\r\n\r\nconst app = new App();\r\napp\r\n    .add(\"service\", new PJAX())\r\n    .add(\"service\", new Splashscreen())\r\n    .add(\"service\", new IntroAnimation())\r\n    .add(\"block\", InViewBlockIntent)\r\n    // .add(\"service\", new InView())\r\n    .add(\"transition\", new Fade())\r\n    .add(\"transition\", new BigTransition())\r\n    .add(\"transition\", new Slide())\r\n    .add(\"transition\", new SlideLeft())\r\n    .add(\"transition\", new SlideRight());\r\n\r\n(async () => {\r\n    let navbarLinks = () => {\r\n        let { href } = window.location;\r\n        let navLink = document.querySelectorAll(\".navbar .nav-link\");\r\n\r\n        for (let item of navLink) {\r\n            let URLmatch = _URL.equal((item as HTMLAnchorElement).href, href);\r\n            let isActive = item.classList.contains(\"active\");\r\n            if (!(URLmatch && isActive)) {\r\n                item.classList[URLmatch ? \"add\" : \"remove\"](\"active\");\r\n            }\r\n        }\r\n    };\r\n\r\n    try {\r\n        await app.boot();\r\n    } catch (err) {\r\n        console.warn(\"App boot failed\", err);\r\n    }\r\n\r\n    app.on({\r\n        \"ready\": navbarLinks,\r\n        \"go\": navbarLinks\r\n    });\r\n})();"]}