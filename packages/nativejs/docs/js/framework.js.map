{"version":3,"file":"framework.js","sources":["../../src/config.ts","../../node_modules/.pnpm/managerjs@1.1.8/node_modules/managerjs/src/api.ts","../../src/manager.ts","../../src/url.ts","../../src/history.ts","../../src/page.ts","../../node_modules/.pnpm/@okikio/event-emitter@1.1.3/node_modules/@okikio/event-emitter/src/api.ts","../../src/service.ts","../../src/transition.ts","../../src/block.ts","../../src/app.ts","../../src/pjax.ts","../../src/router.ts","../../node_modules/.pnpm/walijs@1.0.10/node_modules/walijs/src/api.ts","../../build/ts/blocks.ts","../../build/ts/theme.ts","../../build/ts/services.ts","../../build/ts/transitions.ts","../../build/ts/framework.ts"],"sourcesContent":["// The config variables\r\nexport interface ICONFIG {\r\n    prefix?: string;\r\n    wrapperAttr?: string;\r\n    noAjaxLinkAttr?: string;\r\n    noPrefetchAttr?: \"no-prefetch\";\r\n    headers?: string[][];\r\n    preventSelfAttr?: string;\r\n    preventAllAttr?: string;\r\n    transitionAttr?: string;\r\n    blockAttr?: string;\r\n    timeout?: number\r\n}\r\n\r\nexport const CONFIG_DEFAULTS: ICONFIG = {\r\n    wrapperAttr: \"wrapper\",\r\n    noAjaxLinkAttr: \"no-ajax-link\",\r\n    noPrefetchAttr: \"no-prefetch\",\r\n    headers: [\r\n        [\"x-partial\", \"true\"]\r\n    ],\r\n    preventSelfAttr: `prevent=\"self\"`,\r\n    preventAllAttr: `prevent=\"all\"`,\r\n    transitionAttr: \"transition\",\r\n    blockAttr: `block`,\r\n    timeout: 30000\r\n};\r\n\r\nexport type ConfigKeys = keyof ICONFIG;\r\n\r\n/**\r\n * The Config class\r\n *\r\n * @export\r\n * @class CONFIG\r\n */\r\nexport class CONFIG {\r\n    /**\r\n     * The current Configuration\r\n     *\r\n     * @protected\r\n     * @type ICONFIG\r\n     * @memberof CONFIG\r\n     */\r\n    protected config: ICONFIG;\r\n\r\n    /**\r\n     * Creates an instance of CONFIG.\r\n     *\r\n     * @param {ICONFIG} config\r\n     * @memberof CONFIG\r\n     */\r\n    constructor(config: ICONFIG) {\r\n        this.config = Object.assign({ ...CONFIG_DEFAULTS }, config);\r\n    }\r\n\r\n    /**\r\n     * Converts string into data attributes\r\n     *\r\n     * @param {string} value\r\n     * @param {boolean} brackets [brackets=true]\r\n     * @returns string\r\n     * @memberof CONFIG\r\n     */\r\n    public toAttr(value: string, brackets: boolean = true): string {\r\n        let { prefix } = this.config;\r\n        let attr = `data${prefix ? \"-\" + prefix : \"\"}-${value}`;\r\n        return brackets ? `[${attr}]` : attr;\r\n    }\r\n\r\n    /**\r\n     * Selects config vars, and formats them for use, or simply returns the current configurations for the framework\r\n     *\r\n     * @param {ConfigKeys} value\r\n     * @param {boolean} [brackets=true]\r\n     * @returns any\r\n     * @memberof CONFIG\r\n     */\r\n    public getConfig(value?: ConfigKeys, brackets: boolean = true): any {\r\n        if (typeof value !== \"string\")\r\n            return this.config;\r\n\r\n        let config = this.config[value];\r\n        if (typeof config === \"string\")\r\n            return this.toAttr(config, brackets);\r\n        return config;\r\n    }\r\n}","\r\n/**\r\n * Manages complex lists of named data, eg. A page can be stored in a list by of other pages with the url being how the page is stored in the list. Managers use Maps to store data.\r\n *\r\n * @export\r\n * @class Manager\r\n * @template K\r\n * @template V\r\n */\r\nexport class Manager<K, V> {\r\n\t/**\r\n\t * The complex list of named data, to which the Manager controls\r\n\t *\r\n\t * @protected\r\n\t * @type Map<K, V>\r\n\t * @memberof Manager\r\n\t */\r\n\tprotected map: Map<K, V>;\r\n\r\n    /**\r\n     * Creates an instance of Manager.\r\n     * \r\n     * @param {Array<[K, V]>} [value]\r\n     * @memberof Manager\r\n     */\r\n\tconstructor(value?: Array<[K, V]>) {\r\n\t\tthis.map = new Map(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the Manager class's list\r\n\t *\r\n\t * @returns Map<K, V>\r\n\t * @memberof Manager\r\n\t */\r\n\tpublic getMap(): Map<K, V> {\r\n\t\treturn this.map;\r\n\t}\r\n\r\n\t/**\r\n\t * Get a value stored in the Manager\r\n\t *\r\n\t * @public\r\n\t * @param  {K} key - The key to find in the Manager's list\r\n\t * @returns V\r\n\t */\r\n\tpublic get(key: K): V {\r\n\t\treturn this.map.get(key);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the keys of all items stored in the Manager as an Array\r\n\t *\r\n\t * @returns Array<K>\r\n     * @memberof Manager\r\n     */\r\n\tpublic keys(): Array<K> {\r\n\t\treturn [...this.map.keys()];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the values of all items stored in the Manager as an Array\r\n\t *\r\n\t * @returns Array<V>\r\n     * @memberof Manager\r\n\t */\r\n\tpublic values(): Array<V> {\r\n\t\treturn [...this.map.values()];\r\n\t}\r\n\r\n\t/**\r\n\t * Set a value stored in the Manager\r\n\t *\r\n\t * @public\r\n\t * @param  {K} key - The key where the value will be stored\r\n\t * @param  {V} value - The value to store\r\n\t * @returns Manager<K, V>\r\n\t */\r\n\tpublic set(key: K, value: V): Manager<K, V> {\r\n\t\tthis.map.set(key, value);\r\n\t\treturn this;\r\n\t}\r\n\r\n    /**\r\n     * Adds a value to Manager, and uses the current size of the Manager as it's key, it works best when all the key in the Manager are numbers\r\n     *\r\n     * @public\r\n     * @param  {V} value\r\n     * @returns Manager<K, V>\r\n     */\r\n\tpublic add(value: V): Manager<K, V> {\r\n\t\t// @ts-ignore\r\n\t\tthis.set(this.size as K, value);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the total number of items stored in the Manager\r\n\t *\r\n\t * @public\r\n\t * @returns Number\r\n\t */\r\n\tpublic get size(): number {\r\n\t\treturn this.map.size;\r\n\t}\r\n\r\n    /**\r\n\t * Returns the last item in the Manager who's index is a certain distance from the last item in the Manager\r\n     *\r\n     * @param {number} [distance=1]\r\n     * @returns V | undefined\r\n     * @memberof Manager\r\n     */\r\n\tpublic last(distance: number = 1): V | undefined {\r\n\t\tlet key = this.keys()[this.size - distance];\r\n\t\treturn this.get(key);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the second last item in the Manager\r\n\t *\r\n\t * @public\r\n\t * @returns V | undefined\r\n\t */\r\n\tpublic prev(): V | undefined {\r\n\t\treturn this.last(2);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a value stored in the Manager, via the key\r\n\t *\r\n\t * @public\r\n\t * @param  {K} key - The key for the key value pair to be removed\r\n\t * @returns Manager<K, V>\r\n\t */\r\n\tpublic delete(key: K): Manager<K, V> {\r\n\t\tthis.map.delete(key);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Clear the Manager of all its contents\r\n\t *\r\n\t * @public\r\n\t * @returns Manager<K, V>\r\n\t */\r\n\tpublic clear(): Manager<K, V> {\r\n\t\tthis.map.clear();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the Manager contains a certain key\r\n\t *\r\n\t * @public\r\n\t * @param {K} key\r\n\t * @returns boolean\r\n\t */\r\n\tpublic has(key: K): boolean {\r\n\t\treturn this.map.has(key);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Iterator object that contains an array of [key, value] for each element in the Map object in insertion order.\r\n\t *\r\n\t * @public\r\n\t * @returns IterableIterator<[K, V]>\r\n\t */\r\n\tpublic entries(): IterableIterator<[K, V]> {\r\n\t\treturn this.map.entries();\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates through the Managers contents, calling a callback function every iteration\r\n\t *\r\n\t * @param {*} [callback=(...args: any): void => { }]\r\n\t * @param {object} context\r\n\t * @returns Manager<K, V>\r\n\t * @memberof Manager\r\n\t */\r\n\tpublic forEach(\r\n\t\tcallback: any = (...args: any): void => { },\r\n\t\tcontext?: object\r\n\t): Manager<K, V> {\r\n\t\tthis.map.forEach(callback, context);\r\n\t\treturn this;\r\n\t}\r\n\r\n    /**\r\n     * Allows iteration via the for..of, learn more: [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators]\r\n     *\r\n     * @returns\r\n     * @memberof Manager\r\n     */\r\n\tpublic [Symbol.iterator]() {\r\n\t\treturn this.entries();\r\n\t}\r\n\r\n\t/**\r\n\t * Calls the method of a certain name for all items that are currently installed\r\n\t *\r\n\t * @param {string} method\r\n\t * @param {Array<any>} [args=[]]\r\n\t * @returns Manager<K, V>\r\n\t * @memberof Manager\r\n\t */\r\n\tpublic methodCall(method: string, ...args: any): Manager<K, V> {\r\n\t\tthis.forEach((item: V) => {\r\n\t\t\titem[method](...args);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Asynchronously calls the method of a certain name for all items that are currently installed, similar to methodCall\r\n\t *\r\n\t * @param {string} method\r\n\t * @param {Array<any>} [args=[]]\r\n\t * @returns Promise<Manager<K, V>>\r\n\t * @memberof Manager\r\n\t */\r\n\tpublic async asyncMethodCall(method: string, ...args: any): Promise<Manager<K, V>> {\r\n\t\tfor await (let [, item] of this.map) {\r\n\t\t\tawait item[method](...args);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n}\r\n","import { Manager } from \"managerjs/src/api\";\r\nimport { ConfigKeys } from \"./config\";\r\nimport { App } from \"./app\";\r\n\r\nexport type IAdvancedManager = AdvancedManager<any, ManagerItem>;\r\n\r\n/**\r\n * The base class for all AdvancedManager and AdvancedStorage items\r\n *\r\n * @export\r\n * @class ManagerItem\r\n */\r\nexport class ManagerItem {\r\n    /**\r\n     * The AdvancedManager or AdvancedStorage the ManagerItem is attached to\r\n     *\r\n     * @protected\r\n     * @type IAdvancedManager\r\n     * @memberof ManagerItem\r\n     */\r\n    protected manager: IAdvancedManager;\r\n\r\n    /**\r\n     * Creates an instance of ManagerItem.\r\n     * \r\n     * @memberof ManagerItem\r\n     */\r\n    constructor() { }\r\n\r\n    /**\r\n     * The getConfig method for accessing the Configuration of the current App\r\n     *\r\n     * @param {ConfigKeys} [value]\r\n     * @param {boolean} [brackets]\r\n     * @returns any\r\n     * @memberof ManagerItem\r\n     */\r\n    protected getConfig(value?: ConfigKeys, brackets?: boolean): any {\r\n        return this.manager.getConfig(value, brackets);\r\n    };\r\n\r\n    /**\r\n     * Run after the Manager Item has been registered\r\n     *\r\n     * @returns any\r\n     * @memberof ManagerItem\r\n     */\r\n    public install(): any { }\r\n\r\n    /**\r\n     * Register the current Manager Item's manager\r\n     *\r\n     * @param {IAdvancedManager} manager\r\n     * @returns ManagerItem\r\n     * @memberof ManagerItem\r\n     */\r\n    public register(manager: IAdvancedManager): ManagerItem {\r\n        this.manager = manager;\r\n        this.install();\r\n        return this;\r\n    }\r\n}\r\n\r\n/**\r\n * A tweak to the Manager class that makes it self aware of the App class it's instantiated in\r\n *\r\n * @export\r\n * @class AdvancedManager\r\n * @extends {Manager<K, V>}\r\n * @template K\r\n * @template V\r\n */\r\nexport class AdvancedManager<K, V extends ManagerItem> extends Manager<K, V> {\r\n\t/**\r\n\t * The instance of the App class, the Manager is instantiated in\r\n\t *\r\n\t * @private\r\n\t * @type App\r\n\t * @memberof AdvancedManager\r\n\t */\r\n    private app: App;\r\n\r\n\t/**\r\n\t * Creates an instance of AdvancedManager.\r\n\t *\r\n\t * @param {App} app - The instance of the App class, the Manager is instantiated in\r\n\t * @memberof AdvancedManager\r\n\t */\r\n    constructor(app: App) {\r\n        super();\r\n        this.app = app;\r\n    }\r\n\r\n\t/**\r\n\t * Set a value stored in the Manager\r\n\t *\r\n\t * @public\r\n\t * @param  {K} key - The key where the value will be stored\r\n\t * @param  {V} value - The value to store\r\n\t * @returns AdvancedManager<K, V>\r\n\t */\r\n    public set(key: K, value: V) {\r\n        super.set(key, value);\r\n        typeof value.register === \"function\" && value.register(this);\r\n        return this;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the instance the App class\r\n\t *\r\n\t * @returns App\r\n\t * @memberof AdvancedManager\r\n\t */\r\n    public getApp(): App {\r\n        return this.app;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the App config\r\n\t *\r\n     * @param {...any} args\r\n     * @returns any\r\n\t * @memberof AdvancedManager\r\n\t */\r\n    public getConfig(...args: any): any {\r\n        return this.app.getConfig(...args);\r\n    }\r\n}\r\n\r\nexport { Manager };","/**\r\n * Adds new methods to the native URL Object; it seemed cleaner than using a custom method or editing the prototype.\r\n *\r\n * This doesn't extend the **Class** object because it's meant to be a small extension of the native URL class.\r\n *\r\n * @export\r\n * @class _URL\r\n * @extends {URL}\r\n */\r\nexport class _URL extends URL {\r\n    // Read up on the native URL class [devdocs.io/dom/url]\r\n\t/**\r\n\t * Creates an instance of _URL.\r\n\t *\r\n     * @param {(string | _URL | URL | Location)} [url=window.location.pathname]\r\n\t * @memberof _URL\r\n\t */\r\n    constructor(url: any = window.location.href) {\r\n        super(url instanceof URL ? url.href : url, window.location.origin);\r\n    }\r\n\r\n    /**\r\n     * Returns the pathname with the hash\r\n     *\r\n     * @returns string\r\n     * @memberof _URL\r\n     */\r\n    public getFullPath(): string {\r\n        return `${this.pathname}${this.hash}`;\r\n    }\r\n\r\n    /**\r\n     * Returns the actual hash without the hashtag\r\n     *\r\n     * @returns string\r\n     * @memberof _URL\r\n     */\r\n    public getHash(): string {\r\n        return this.hash.slice(1);\r\n    }\r\n\r\n    /**\r\n\t * Removes the hash from the full URL for a clean URL string\r\n\t *\r\n\t * @returns string\r\n\t * @memberof _URL\r\n\t */\r\n    public clean(): string {\r\n        return this.toString().replace(/(\\/#.*|\\/|#.*)$/, '');\r\n    }\r\n\r\n\t/**\r\n\t * Returns the pathname of a URL\r\n\t *\r\n\t * @returns string\r\n\t * @memberof _URL\r\n\t */\r\n    public getPathname(): string {\r\n        return this.pathname;\r\n    }\r\n\r\n\t/**\r\n\t * Compares this **_URL** to another **_URL**\r\n\t *\r\n\t * @param {_URL} url\r\n\t * @returns boolean\r\n\t * @memberof _URL\r\n\t */\r\n    public equalTo(url: _URL): boolean {\r\n        return this.clean() == url.clean();\r\n    }\r\n\r\n\t/**\r\n\t * Compares the pathname of two URLs to each other\r\n\t *\r\n\t * @static\r\n\t * @param {_URL} a\r\n\t * @param {_URL} b\r\n\t * @returns boolean\r\n\t * @memberof _URL\r\n\t */\r\n    static equal(a: _URL | string, b: _URL | string): boolean {\r\n        let urlA = a instanceof _URL ? a : new _URL(a);\r\n        let urlB = b instanceof _URL ? b : new _URL(b);\r\n        return urlA.equalTo(urlB);\r\n    }\r\n}\r\n\r\n/**\r\n * This is the default starting URL, to avoid needless instances of the same class that produce the same value, I defined the default value\r\n */\r\nexport const newURL = new _URL();\r\nexport const URLString = newURL.getPathname();","import { Manager } from \"./manager\";\r\nimport { _URL } from \"./url\";\r\n\r\nexport type Trigger = HTMLAnchorElement | \"HistoryManager\" | \"popstate\" | \"back\" | \"forward\";\r\n\r\nexport interface ICoords {\r\n\treadonly x: number;\r\n\treadonly y: number;\r\n}\r\n\r\nexport interface IStateData {\r\n\tscroll: ICoords;\r\n\t[key: string]: any;\r\n}\r\n\r\nexport interface IState {\r\n\turl: _URL;\r\n\tindex?: number;\r\n\ttransition: string;\r\n\tdata: IStateData;\r\n}\r\n\r\n/**\r\n * A quick snapshot of page coordinates, e.g. scroll positions\r\n *\r\n * @export\r\n * @class Coords\r\n * @implements {ICoords}\r\n */\r\nexport class Coords implements ICoords {\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\r\n\t/**\r\n\t * Creates an instance of Coords.\r\n\t *\r\n\t * @param {number} [x=window.scrollX]\r\n\t * @param {number} [y=window.scrollY]\r\n\t * @memberof Coords\r\n\t */\r\n\tconstructor(x: number = window.scrollX, y: number = window.scrollY) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n}\r\n\r\n/**\r\n * Represents the current status of the page consisting of properties like: url, transition, and data\r\n *\r\n * @export\r\n * @class State\r\n */\r\nexport class State {\r\n\t/**\r\n\t * The current state data\r\n\t *\r\n\t * @private\r\n\t * @type IState\r\n\t * @memberof State\r\n\t */\r\n\tprivate state: IState;\r\n\r\n\t/**\r\n\t * Creates an instance of State.\r\n\t * @param {IState} {\r\n     *         url = new _URL(),\r\n\t *         index = 0,\r\n\t *         transition = \"default\",\r\n\t *         data = {\r\n\t *             scroll: new StateCoords(),\r\n\t *             trigger: \"HistoryManager\"\r\n\t *         }\r\n\t *     }\r\n\t * @memberof State\r\n\t */\r\n\tconstructor(state: IState = {\r\n\t\turl: new _URL(),\r\n\t\tindex: 0,\r\n\t\ttransition: \"default\",\r\n\t\tdata: {\r\n\t\t\tscroll: new Coords(),\r\n\t\t\ttrigger: \"HistoryManager\"\r\n\t\t}\r\n\t}) {\r\n\t\tthis.state = state;\r\n\t}\r\n\r\n\t/**\r\n\t * Get state index\r\n\t *\r\n\t * @returns number\r\n\t * @memberof State\r\n\t */\r\n\tpublic getIndex(): number {\r\n\t\treturn this.state.index;\r\n\t}\r\n\r\n\t/**\r\n\t * Set state index\r\n\t *\r\n\t * @param {number} index\r\n\t * @returns State\r\n\t * @memberof State\r\n\t */\r\n\tpublic setIndex(index: number): State {\r\n\t\tthis.state.index = index;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Get state URL\r\n\t *\r\n\t * @returns _URL\r\n\t * @memberof State\r\n\t */\r\n\tpublic getURL(): _URL {\r\n\t\treturn this.state.url;\r\n\t}\r\n\r\n\t/**\r\n\t * Get state URL as a string\r\n\t *\r\n\t * @returns string\r\n\t * @memberof State\r\n\t */\r\n\tpublic getURLPathname(): string {\r\n\t\treturn this.state.url.getPathname();\r\n\t}\r\n\r\n\t/**\r\n\t * Get state transition\r\n\t *\r\n\t * @returns string\r\n\t * @memberof State\r\n\t */\r\n\tpublic getTransition(): string {\r\n\t\treturn this.state.transition;\r\n\t}\r\n\r\n\t/**\r\n\t * Get state data\r\n\t *\r\n\t * @returns IStateData\r\n\t * @memberof State\r\n\t */\r\n\tpublic getData(): IStateData {\r\n\t\treturn this.state.data;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the State as an Object\r\n\t *\r\n\t * @returns object\r\n\t * @memberof State\r\n\t */\r\n\tpublic toJSON(): object {\r\n\t\tconst { url, index, transition, data }: IState = this.state;\r\n\t\treturn {\r\n\t\t\turl: url.getFullPath(), index, transition, data\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * History of the site, stores only the State class\r\n *\r\n * @export\r\n * @class HistoryManager\r\n * @extends {Manager<number, State>}\r\n */\r\nexport class HistoryManager extends Manager<number, State> {\r\n\t/**\r\n\t * Creates an instance of the HistoryManager class, which inherits properties and methods from the Storage class.\r\n\t *\r\n\t * @memberof HistoryManager\r\n\t * @constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the index of the state before adding to HistoryManager\r\n\t *\r\n\t * @param {State} value\r\n\t * @returns HistoryManager\r\n\t * @memberof HistoryManager\r\n\t */\r\n\tpublic add(value: State): HistoryManager {\r\n\t\tlet state = value;\r\n\t\tlet index = this.size;\r\n\t\tsuper.add(state);\r\n\t\tstate.setIndex(index);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Quick way to add a State to the HistoryManager\r\n\t *\r\n\t * @param {IState} value\r\n\t * @returns HistoryManager\r\n\t * @memberof HistoryManager\r\n\t */\r\n\tpublic addState(value: IState | State): HistoryManager {\r\n\t\tlet state = value instanceof State ? value : new State(value);\r\n\t\tthis.add(state);\r\n\t\treturn this;\r\n\t}\r\n}\r\n","import { Manager, ManagerItem, AdvancedManager } from \"./manager\";\r\nimport { _URL, URLString } from \"./url\";\r\nimport { App } from \"./app\";\r\n\r\n/**\r\n * Parses strings to DOM\r\n */\r\nexport const PARSER: DOMParser = new DOMParser();\r\n\r\n/**\r\n * A page represents the DOM elements that create each page\r\n *\r\n * @export\r\n * @class Page\r\n */\r\nexport class Page extends ManagerItem {\r\n\t/**\r\n\t * Holds the DOM of the current page\r\n\t *\r\n\t * @private\r\n\t * @type Document\r\n\t * @memberof Page\r\n\t */\r\n    private dom: Document;\r\n\r\n\t/**\r\n\t * Holds the wrapper element to be swapped out of each Page\r\n\t *\r\n\t * @private\r\n\t * @type HTMLElement\r\n\t * @memberof Page\r\n\t */\r\n    private wrapper: HTMLElement;\r\n\r\n\t/**\r\n\t * Holds the title of each page\r\n\t *\r\n\t * @private\r\n\t * @type string\r\n\t * @memberof Page\r\n\t */\r\n    private title: string;\r\n\r\n\t/**\r\n\t * Holds the head element of each page\r\n\t *\r\n\t * @private\r\n\t * @type Element\r\n\t * @memberof Page\r\n\t */\r\n    private head: Element;\r\n\r\n\t/**\r\n\t * Holds the body element of each page\r\n\t *\r\n\t * @private\r\n\t * @type Element\r\n\t * @memberof Page\r\n\t */\r\n    private body: Element;\r\n\r\n\t/**\r\n\t * The URL of the current page\r\n\t *\r\n\t * @private\r\n\t * @type _URL\r\n\t * @memberof Page\r\n\t */\r\n    private url: _URL;\r\n\r\n\t/**\r\n\t * Creates an instance of Page, it also creates a new page from response text, or a Document Object\r\n\t *\r\n\t * @param {_URL} [url=new _URL()]\r\n\t * @param {(string | Document)} [dom=document]\r\n\t * @memberof Page\r\n\t */\r\n    constructor(url: _URL = new _URL(), dom: string | Document = document) {\r\n        super();\r\n        this.url = url;\r\n        if (typeof dom === \"string\") {\r\n            this.dom = PARSER.parseFromString(dom, \"text/html\");\r\n        } else this.dom = dom || document;\r\n\r\n        const { title, head, body } = this.dom;\r\n        this.title = title;\r\n        this.head = head;\r\n        this.body = body;\r\n    }\r\n\r\n    /**\r\n     * Runs once the the manager and config have been registered\r\n     *\r\n     * @returns void\r\n     * @memberof Page\r\n     */\r\n    public install(): void {\r\n        this.wrapper = this.body.querySelector(this.getConfig(\"wrapperAttr\"));\r\n    }\r\n\r\n\t/**\r\n\t * Returns the current page's URL\r\n\t *\r\n\t * @returns _URL\r\n\t * @memberof Page\r\n\t */\r\n    public getURL(): _URL {\r\n        return this.url;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the current page's URL\r\n\t *\r\n\t * @returns string\r\n\t * @memberof Page\r\n\t */\r\n    public getPathname(): string {\r\n        return this.url.pathname;\r\n    }\r\n\r\n\t/**\r\n\t * The page title\r\n\t *\r\n\t * @returns string\r\n\t * @memberof Page\r\n\t */\r\n    public getTitle(): string {\r\n        return this.title;\r\n    }\r\n\r\n\t/**\r\n\t * The page's head element\r\n\t *\r\n\t * @returns Element\r\n\t * @memberof Page\r\n\t */\r\n    public getHead(): Element {\r\n        return this.head;\r\n    }\r\n\r\n\t/**\r\n\t * The page's body element\r\n\t *\r\n\t * @returns Element\r\n\t * @memberof Page\r\n\t */\r\n    public getBody(): Element {\r\n        return this.body;\r\n    }\r\n\r\n\t/**\r\n\t * The page's wrapper element\r\n\t *\r\n\t * @returns HTMLElement\r\n\t * @memberof Page\r\n\t */\r\n    public getWrapper(): HTMLElement {\r\n        return this.wrapper;\r\n    }\r\n\r\n\t/**\r\n\t * The page's document\r\n\t *\r\n\t * @returns Document\r\n\t * @memberof Page\r\n\t */\r\n    public getDOM(): Document {\r\n        return this.dom;\r\n    }\r\n}\r\n\r\n/**\r\n * Controls which page to be load\r\n *\r\n * @export\r\n * @class PageManager\r\n * @extends {AdvancedManager<string, Page>}\r\n */\r\nexport class PageManager extends AdvancedManager<string, Page> {\r\n    /**\r\n     * Stores all URLs that are currently loading\r\n     *\r\n     * @protected\r\n     * @type Manager<string, Promise<string>>\r\n     * @memberof PageManager\r\n     */\r\n    protected loading: Manager<string, Promise<string>> = new Manager();\r\n\r\n\t/**\r\n\t * Creates an instance of the PageManager\r\n\t *\r\n     * @param {App} app\r\n\t * @memberof PageManager\r\n\t */\r\n    constructor(app: App) {\r\n        super(app);\r\n        this.set(URLString, new Page());\r\n    }\r\n\r\n    /**\r\n     * Returns the loading Manager\r\n     *\r\n     * @returns Manager<string, Promise<string>>\r\n     * @memberof PageManager\r\n     */\r\n    public getLoading(): Manager<string, Promise<string>> {\r\n        return this.loading;\r\n    }\r\n\r\n    /**\r\n     * Load from cache or by requesting URL via a fetch request, avoid requesting for the same thing twice by storing the fetch request in \"this.loading\"\r\n     *\r\n     * @param {(_URL | string)} [_url=new _URL()]\r\n     * @returns Promise<Page>\r\n     * @memberof PageManager\r\n     */\r\n    public async load(_url: _URL | string = new _URL()): Promise<Page> {\r\n        let url: _URL = _url instanceof URL ? _url : new _URL(_url);\r\n        let urlString: string = url.getPathname();\r\n        let page: Page, request: Promise<string>;\r\n        if (this.has(urlString)) {\r\n            page = this.get(urlString);\r\n            return Promise.resolve(page);\r\n        }\r\n\r\n        if (!this.loading.has(urlString)) {\r\n            request = this.request(urlString);\r\n            this.loading.set(urlString, request);\r\n        } else request = this.loading.get(urlString);\r\n\r\n        let response = await request;\r\n        this.loading.delete(urlString);\r\n\r\n        page = new Page(url, response);\r\n        this.set(urlString, page);\r\n        return page;\r\n    }\r\n\r\n    /**\r\n     * Starts a fetch request\r\n     *\r\n     * @param {string} url\r\n     * @returns Promise<string>\r\n     * @memberof PageManager\r\n     */\r\n    public async request(url: string): Promise<string> {\r\n        const headers = new Headers(this.getConfig(\"headers\"));\r\n        const timeout = window.setTimeout(() => {\r\n            window.clearTimeout(timeout);\r\n            throw \"Request Timed Out!\";\r\n        }, this.getConfig(\"timeout\"));\r\n\r\n        try {\r\n            let response = await fetch(url, {\r\n                mode: 'same-origin',\r\n                method: \"GET\",\r\n                headers: headers,\r\n                cache: \"default\",\r\n                credentials: \"same-origin\",\r\n            });\r\n\r\n            window.clearTimeout(timeout);\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return await response.text();\r\n            }\r\n\r\n            const err = new Error(response.statusText || \"\" + response.status);\r\n            throw err;\r\n        } catch (err) {\r\n            window.clearTimeout(timeout);\r\n            throw err;\r\n        }\r\n    }\r\n}","import { Manager } from \"managerjs/src/api\";\r\n\r\nexport type ListenerCallback = (...args: any) => void;\r\nexport interface IListener {\r\n    readonly callback: ListenerCallback;\r\n    readonly scope: object;\r\n    readonly name: string;\r\n}\r\n\r\n/**\r\n * Represents a new event listener consisting of properties like: callback, scope, name\r\n *\r\n * @export\r\n * @class Listener\r\n */\r\nexport class Listener {\r\n\t/**\r\n\t * The current listener data\r\n\t *\r\n\t * @private\r\n\t * @type IListener\r\n\t * @memberof Listener\r\n\t */\r\n    private listener: IListener;\r\n\r\n\t/**\r\n\t * Creates an instance of Listener.\r\n\t *\r\n\t * @param {IListener} { callback = () => { }, scope = null, name = \"event\" }\r\n\t * @memberof Listener\r\n\t */\r\n    constructor({\r\n        callback = () => { },\r\n        scope = null,\r\n        name = \"event\",\r\n    }: IListener) {\r\n        this.listener = { callback, scope, name };\r\n    }\r\n\r\n\t/**\r\n\t * Returns the callback Function of the Listener\r\n\t *\r\n\t * @returns ListenerCallback\r\n\t * @memberof Listener\r\n\t */\r\n    public getCallback(): ListenerCallback {\r\n        return this.listener.callback;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the scope as an Object, from the Listener\r\n\t *\r\n\t * @returns object\r\n\t * @memberof Listener\r\n\t */\r\n    public getScope(): object {\r\n        return this.listener.scope;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the event as a String, from the Listener\r\n\t *\r\n\t * @returns string\r\n\t * @memberof Listener\r\n\t */\r\n    public getEventName(): string {\r\n        return this.listener.name;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the listener as an Object\r\n\t *\r\n\t * @returns IListener\r\n\t * @memberof Listener\r\n\t */\r\n    public toJSON(): IListener {\r\n        return this.listener;\r\n    }\r\n}\r\n\r\n/**\r\n * Represents a new event listener consisting of properties like: callback, scope, name\r\n *\r\n * @export\r\n * @class Event\r\n * @extends {Manager<number, Listener>}\r\n */\r\nexport class Event extends Manager<number, Listener> {\r\n\t/**\r\n\t * The name of the event\r\n\t *\r\n\t * @private\r\n\t * @type string\r\n\t * @memberof Event\r\n\t */\r\n    private name: string;\r\n\r\n\t/**\r\n\t * Creates an instance of Event.\r\n\t *\r\n\t * @param {string} [name=\"event\"]\r\n\t * @memberof Event\r\n\t */\r\n    constructor(name: string = \"event\") {\r\n        super();\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport type EventInput = string | object | Array<string>;\r\n\r\n/**\r\n * An event emitter\r\n *\r\n * @export\r\n * @class EventEmitter\r\n * @extends {Manager<string, Event>}\r\n */\r\nexport class EventEmitter extends Manager<string, Event> {\r\n\t/**\r\n\t * Creates an instance of EventEmitter.\r\n\t *\r\n\t * @memberof EventEmitter\r\n\t */\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n\t * Gets events, if event doesn't exist create a new Event\r\n     *\r\n     * @param {string} name\r\n     * @returns Event\r\n     * @memberof EventEmitter\r\n     */\r\n    public getEvent(name: string): Event {\r\n        let event = this.get(name);\r\n        if (!(event instanceof Event)) {\r\n            this.set(name, new Event(name));\r\n            return this.get(name);\r\n        }\r\n\r\n        return event;\r\n    }\r\n\t/**\r\n\t * Creates a new listener and adds it to the event\r\n\t *\r\n\t * @param {string} name\r\n\t * @param {ListenerCallback} callback\r\n\t * @param {object} scope\r\n\t * @returns Event\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public newListener(\r\n        name: string,\r\n        callback: ListenerCallback,\r\n        scope: object\r\n    ): Event {\r\n        let event = this.getEvent(name);\r\n        event.add(new Listener({ name, callback, scope }));\r\n        return event;\r\n    }\r\n\r\n\t/**\r\n\t * Adds a listener for a given event\r\n\t *\r\n\t * @param {EventInput} events\r\n\t * @param {ListenerCallback} callback\r\n\t * @param {object} scope\r\n\t * @returns\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public on(\r\n        events: EventInput,\r\n        callback?: ListenerCallback,\r\n        scope?: object\r\n    ): EventEmitter {\r\n        // If there is no event break\r\n        if (typeof events == \"undefined\") return this;\r\n\r\n        // Create a new event every space\r\n        if (typeof events == \"string\") events = events.split(/\\s/g);\r\n\r\n        let _name: string;\r\n        let _callback: ListenerCallback;\r\n        let _scope: object;\r\n\r\n        // Loop through the list of events\r\n        Object.keys(events).forEach(key => {\r\n            // Select the name of the event from the list\r\n            // Remember events can be {String | Object | Array<string>}\r\n\r\n            // Check If events is an Object (JSON like Object, and not an Array)\r\n            if (typeof events == \"object\" && !Array.isArray(events)) {\r\n                _name = key;\r\n                _callback = events[key];\r\n                _scope = callback;\r\n            } else {\r\n                _name = events[key];\r\n                _callback = callback;\r\n                _scope = scope;\r\n            }\r\n\r\n            this.newListener(_name, _callback, _scope);\r\n        }, this);\r\n        return this;\r\n    }\r\n\r\n\t/**\r\n\t * Removes a listener from an event\r\n\t *\r\n\t * @param {string} name\r\n\t * @param {ListenerCallback} [callback]\r\n\t * @param {object} [scope]\r\n\t * @returns Event\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public removeListener(\r\n        name: string,\r\n        callback: ListenerCallback,\r\n        scope: object\r\n    ): Event {\r\n        let event: Event = this.getEvent(name);\r\n\r\n        if (callback) {\r\n            let i = 0,\r\n                len: number = event.size,\r\n                value: Listener;\r\n            let listener = new Listener({ name, callback, scope });\r\n            for (; i < len; i++) {\r\n                value = event.get(i);\r\n                console.log(value);\r\n                if (\r\n                    value.getCallback() === listener.getCallback() &&\r\n                    value.getScope() === listener.getScope()\r\n                )\r\n                    break;\r\n            }\r\n\r\n            event.delete(i);\r\n        }\r\n        return event;\r\n    }\r\n\r\n\t/**\r\n\t * Removes a listener from a given event, or it just completely removes an event\r\n\t *\r\n\t * @param {EventInput} events\r\n\t * @param {ListenerCallback} [callback]\r\n\t * @param {object} [scope]\r\n\t * @returns EventEmitter\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public off(\r\n        events: EventInput,\r\n        callback?: ListenerCallback,\r\n        scope?: object\r\n    ): EventEmitter {\r\n        // If there is no event break\r\n        if (typeof events == \"undefined\") return this;\r\n\r\n        // Create a new event every space\r\n        if (typeof events == \"string\") events = events.split(/\\s/g);\r\n\r\n        let _name: string;\r\n        let _callback: ListenerCallback;\r\n        let _scope: object;\r\n\r\n        // Loop through the list of events\r\n        Object.keys(events).forEach((key) => {\r\n            // Select the name of the event from the list\r\n            // Remember events can be {String | Object | Array<any>}\r\n\r\n            // Check If events is an Object (JSON like Object, and not an Array)\r\n            if (typeof events == \"object\" && !Array.isArray(events)) {\r\n                _name = key;\r\n                _callback = events[key];\r\n                _scope = callback;\r\n            } else {\r\n                _name = events[key];\r\n                _callback = callback;\r\n                _scope = scope;\r\n            }\r\n\r\n            if (_callback) {\r\n                this.removeListener(_name, _callback, _scope);\r\n            } else this.delete(_name);\r\n        }, this);\r\n        return this;\r\n    }\r\n\r\n\t/**\r\n\t * Adds a one time event listener for an event\r\n\t *\r\n\t * @param {EventInput} events\r\n\t * @param {ListenerCallback} callback\r\n\t * @param {object} scope\r\n\t * @returns EventEmitter\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public once(\r\n        events: EventInput,\r\n        callback: ListenerCallback,\r\n        scope: object\r\n    ): EventEmitter {\r\n        // If there is no event break\r\n        if (typeof events == \"undefined\") return this;\r\n\r\n        // Create a new event every space\r\n        if (typeof events == \"string\") events = events.split(/\\s/g);\r\n\r\n        let onceFn: ListenerCallback = (...args) => {\r\n            this.off(events, onceFn, scope);\r\n            callback.apply(scope, args);\r\n        };\r\n\r\n        this.on(events, onceFn, scope);\r\n        return this;\r\n    }\r\n\r\n\t/**\r\n\t * Call all listeners within an event\r\n\t *\r\n\t * @param {(string | Array<any>)} events\r\n     * @param {...any} args\r\n\t * @returns EventEmitter\r\n\t * @memberof EventEmitter\r\n\t */\r\n    public emit(\r\n        events: string | Array<any>,\r\n        ...args: any\r\n    ): EventEmitter {\r\n        // If there is no event break\r\n        if (typeof events == \"undefined\") return this;\r\n\r\n        // Create a new event every space\r\n        if (typeof events == \"string\") events = events.split(/\\s/g);\r\n\r\n        // Loop through the list of events\r\n        events.forEach((event: string) => {\r\n            let listeners: Event = this.getEvent(event);\r\n\r\n            const customEvent: CustomEvent<any> = new CustomEvent(event, { detail: args })\r\n            window.dispatchEvent(customEvent);\r\n\r\n            listeners.forEach((listener: Listener) => {\r\n                let { callback, scope }: IListener = listener.toJSON();\r\n                callback.apply(scope, args);\r\n            });\r\n        }, this);\r\n        return this;\r\n    }\r\n}","import { EventEmitter } from \"@okikio/event-emitter/src/api\";\r\nimport { AdvancedManager, ManagerItem } from \"./manager\";\r\nimport { TransitionManager } from \"./transition\";\r\nimport { HistoryManager } from \"./history\";\r\nimport { PageManager } from \"./page\";\r\nimport { App } from \"./app\";\r\n\r\n/**\r\n * Controls specific kinds of actions that require JS\r\n *\r\n * @export\r\n * @class Service\r\n */\r\nexport class Service extends ManagerItem {\r\n\t/**\r\n\t * Stores access to the App class's EventEmitter\r\n\t *\r\n\t * @protected\r\n\t * @type EventEmitter\r\n\t * @memberof Service\r\n\t */\r\n\tprotected EventEmitter: EventEmitter;\r\n\r\n\t/**\r\n\t * Stores access to the App class's PageManager\r\n\t *\r\n\t * @protected\r\n\t * @type PageManager\r\n\t * @memberof Service\r\n\t */\r\n\tprotected PageManager: PageManager;\r\n\r\n\t/**\r\n\t * Stores access to the App class's HistoryManager\r\n\t *\r\n\t * @protected\r\n\t * @type HistoryManager\r\n\t * @memberof Service\r\n\t */\r\n\tprotected HistoryManager: HistoryManager;\r\n\r\n\t/**\r\n\t * Stores the ServiceManager the service is install on\r\n\t *\r\n\t * @protected\r\n\t * @type ServiceManager\r\n\t * @memberof Service\r\n\t */\r\n\tprotected ServiceManager: ServiceManager;\r\n\r\n\t/**\r\n\t * Stores access to the App's TransitionManager\r\n\t *\r\n\t * @protected\r\n\t * @type TransitionManager\r\n\t * @memberof Service\r\n\t */\r\n\tprotected TransitionManager: TransitionManager;\r\n\r\n\t/**\r\n\t * Method is run once when Service is installed on a ServiceManager\r\n     *\r\n\t * @memberof Service\r\n\t */\r\n\tpublic install(): void {\r\n\t\tlet app = this.manager.getApp();\r\n\t\tthis.PageManager = app.getPages();\r\n\t\tthis.EventEmitter = app.getEmitter();\r\n\t\tthis.HistoryManager = app.getHistory();\r\n\t\tthis.ServiceManager = app.getServices();\r\n\t\tthis.TransitionManager = app.getTransitions();\r\n\t}\r\n\r\n\t// Called on start of Service\r\n\tpublic boot(): void { }\r\n\r\n\t// Initialize events\r\n\tpublic initEvents(): void { }\r\n\r\n\t// Stop events\r\n\tpublic stopEvents(): void { }\r\n\r\n\t// Stop services\r\n\tpublic stop(): void {\r\n\t\tthis.stopEvents();\r\n\t}\r\n}\r\n\r\n/**\r\n * The Service Manager controls the lifecycle of all services in an App\r\n *\r\n * @export\r\n * @class ServiceManager\r\n * @extends {AdvancedManager<number, Service>}\r\n */\r\nexport class ServiceManager extends AdvancedManager<number, Service> {\r\n    /**\r\n     * Creates an instance of ServiceManager.\r\n     *\r\n     * @param {App} app\r\n     * @memberof ServiceManager\r\n     */\r\n\tconstructor(app: App) {\r\n\t\tsuper(app);\r\n\t}\r\n\r\n\t/**\r\n\t * Call the boot method for all Services\r\n\t *\r\n\t * @returns Promise<void>\r\n\t * @memberof ServiceManager\r\n\t */\r\n\tpublic async boot(): Promise<void> {\r\n\t\tawait this.asyncMethodCall(\"boot\");\r\n\t}\r\n\r\n\t/**\r\n\t * Call the initEvents method for all Services\r\n\t *\r\n\t * @returns ServiceManager\r\n\t * @memberof ServiceManager\r\n\t */\r\n\tpublic initEvents(): ServiceManager {\r\n\t\tthis.methodCall(\"initEvents\");\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Call the stopEvents method for all Services\r\n\t *\r\n\t * @returns ServiceManager\r\n\t * @memberof ServiceManager\r\n\t */\r\n\tpublic stopEvents(): ServiceManager {\r\n\t\tthis.methodCall(\"stopEvents\");\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Call the stop method for all Services\r\n\t *\r\n\t * @returns ServiceManager\r\n\t * @memberof ServiceManager\r\n\t */\r\n\tpublic stop(): ServiceManager {\r\n\t\tthis.methodCall(\"stop\");\r\n\t\treturn this;\r\n\t}\r\n}","import { EventEmitter } from \"@okikio/event-emitter/src/api\";\r\nimport { AdvancedManager, ManagerItem } from \"./manager\";\r\nimport { Trigger } from \"./history\";\r\nimport { Page } from \"./page\";\r\nimport { App } from \"./app\";\r\n\r\n/**\r\n * The async function type, allows for smooth transition between Promises\r\n */\r\nexport type asyncFn = (err?: any, value?: any) => void;\r\nexport interface ITransition {\r\n    oldPage: Page,\r\n    newPage: Page,\r\n    trigger: Trigger\r\n}\r\nexport interface ITransitionData {\r\n    from?: Page,\r\n    to?: Page,\r\n    trigger?: Trigger,\r\n    done: asyncFn\r\n}\r\n\r\n/**\r\n * Controls the animation between pages\r\n *\r\n * @export\r\n * @class Transition\r\n */\r\nexport class Transition extends ManagerItem {\r\n\t/**\r\n\t * Transition name\r\n\t *\r\n\t * @protected\r\n\t * @type string\r\n\t * @memberof Transition\r\n\t */\r\n    protected name: string = \"Transition\";\r\n\r\n\t/**\r\n\t * The page to transition from\r\n\t *\r\n\t * @protected\r\n\t * @type Page\r\n\t * @memberof Transition\r\n\t */\r\n    protected oldPage: Page;\r\n\r\n\t/**\r\n\t * Page to transition to\r\n\t *\r\n\t * @protected\r\n\t * @type Page\r\n\t * @memberof Transition\r\n\t */\r\n    protected newPage: Page;\r\n\r\n\t/**\r\n\t * What triggered the transition to occur\r\n\t *\r\n\t * @protected\r\n\t * @type Trigger\r\n\t * @memberof Transition\r\n\t */\r\n    protected trigger: Trigger;\r\n\r\n    /**\r\n     * Creates an instance of Transition.\r\n     *\r\n     * @memberof Transition\r\n     */\r\n    constructor() { super(); }\r\n\r\n\t/**\r\n\t * Initialize the transition\r\n\t *\r\n\t * @param {ITransition} {\r\n\t * \t\toldPage,\r\n\t * \t\tnewPage,\r\n\t * \t\ttrigger\r\n\t * \t}\r\n     * @returns Transition\r\n\t * @memberof Transition\r\n\t */\r\n    public init({\r\n        oldPage,\r\n        newPage,\r\n        trigger\r\n    }: ITransition): Transition {\r\n        this.oldPage = oldPage;\r\n        this.newPage = newPage;\r\n        this.trigger = trigger;\r\n        this.boot();\r\n        return this;\r\n    }\r\n\r\n    // Called on start of Transition\r\n    public boot(): void { }\r\n\r\n    // Initialize events\r\n    public initEvents(): void { }\r\n\r\n    // Stop events\r\n    public stopEvents(): void { }\r\n\r\n    // Stop services\r\n    public stop(): void {\r\n        this.stopEvents();\r\n    }\r\n\r\n\t/**\r\n\t * Returns the Transition's name\r\n\t *\r\n\t * @returns string\r\n\t * @memberof Transition\r\n\t */\r\n    public getName(): string {\r\n        return this.name;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the Transition's old page\r\n\t *\r\n\t * @returns Page\r\n\t * @memberof Transition\r\n\t */\r\n    public getOldPage(): Page {\r\n        return this.oldPage;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the Transition's new page\r\n\t *\r\n\t * @returns Page\r\n\t * @memberof Transition\r\n\t */\r\n    public getNewPage(): Page {\r\n        return this.newPage;\r\n    }\r\n\r\n\t/**\r\n\t * Returns the Transition's trigger\r\n\t *\r\n\t * @returns Trigger\r\n\t * @memberof Transition\r\n\t */\r\n    public getTrigger(): Trigger {\r\n        return this.trigger;\r\n    }\r\n\r\n    // Based off the highwayjs Transition class\r\n\t/**\r\n\t * Transition from current page\r\n\t *\r\n\t * @param {ITransitionData} { from, trigger, done }\r\n\t * @memberof Transition\r\n\t */\r\n    public out({ done }: ITransitionData): any {\r\n        done();\r\n    }\r\n\r\n\t/**\r\n\t * Transition into the next page\r\n\t *\r\n\t * @param {ITransitionData} { from, to, trigger, done }\r\n\t * @memberof Transition\r\n\t */\r\n    public in({ done }: ITransitionData): any {\r\n        done();\r\n    }\r\n\r\n    /**\r\n     * Starts the transition\r\n     *\r\n     * @returns Promise<Transition>\r\n     * @memberof Transition\r\n     */\r\n    public async start(EventEmitter: EventEmitter): Promise<Transition> {\r\n        let fromWrapper = this.oldPage.getWrapper();\r\n        let toWrapper = this.newPage.getWrapper();\r\n        document.title = this.newPage.getTitle();\r\n\r\n        return new Promise(async finish => {\r\n            EventEmitter.emit(\"BEFORE-TRANSITION-OUT\");\r\n            await new Promise(done => {\r\n                let outMethod: Promise<any> = this.out({\r\n                    from: this.oldPage,\r\n                    trigger: this.trigger,\r\n                    done\r\n                });\r\n\r\n                if (outMethod.then)\r\n                    outMethod.then(done);\r\n            });\r\n\r\n            EventEmitter.emit(\"AFTER-TRANSITION-OUT\");\r\n\r\n            await new Promise(done => {\r\n                fromWrapper.insertAdjacentElement('beforebegin', toWrapper);\r\n                fromWrapper.remove();\r\n                done();\r\n            });\r\n\r\n            EventEmitter.emit(\"BEFORE-TRANSITION-IN\");\r\n\r\n            await new Promise(done => {\r\n                let inMethod: Promise<any> = this.in({\r\n                    from: this.oldPage,\r\n                    to: this.newPage,\r\n                    trigger: this.trigger,\r\n                    done\r\n                });\r\n\r\n                if (inMethod.then)\r\n                    inMethod.then(done);\r\n            });\r\n\r\n            EventEmitter.emit(\"AFTER_TRANSITION_IN\");\r\n            finish();\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Controls which animation between pages to use\r\n *\r\n * @export\r\n * @class TransitionManager\r\n * @extends {AdvancedManager<string, Transition>}\r\n */\r\nexport class TransitionManager extends AdvancedManager<string, Transition> {\r\n\t/**\r\n\t * Creates an instance of the TransitionManager\r\n\t *\r\n     * @param {App} app\r\n\t * @memberof TransitionManager\r\n\t */\r\n    constructor(app: App) { super(app); }\r\n\r\n\t/**\r\n\t * Quick way to add a Transition to the TransitionManager\r\n\t *\r\n\t * @param {Transition} value\r\n\t * @returns TransitionManager\r\n\t * @memberof TransitionManager\r\n\t */\r\n    public add(value: Transition): TransitionManager {\r\n        let name = value.getName();\r\n        this.set(name, value);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Runs a transition\r\n     *\r\n     * @param {{ name: string, oldPage: Page, newPage: Page, trigger: Trigger }} { name, oldPage, newPage, trigger }\r\n     * @returns Promise<void>\r\n     * @memberof TransitionManager\r\n     */\r\n    public async boot({ name, oldPage, newPage, trigger }: { name: string, oldPage: Page, newPage: Page, trigger: Trigger }): Promise<Transition> {\r\n        let transition: Transition = this.get(name);\r\n        transition.init({\r\n            oldPage,\r\n            newPage,\r\n            trigger\r\n        });\r\n\r\n        let EventEmitter = this.getApp().getEmitter();\r\n        return await transition.start(EventEmitter);\r\n    }\r\n\r\n\t/**\r\n\t * Call the initEvents method for all Transitions\r\n\t *\r\n\t * @returns TransitionManager\r\n\t * @memberof TransitionManager\r\n\t */\r\n    public initEvents(): TransitionManager {\r\n        this.methodCall(\"initEvents\");\r\n        return this;\r\n    }\r\n\r\n\t/**\r\n\t * Call the stopEvents method for all Transitions\r\n\t *\r\n\t * @returns TransitionManager\r\n\t * @memberof TransitionManager\r\n\t */\r\n    public stopEvents(): TransitionManager {\r\n        this.methodCall(\"stopEvents\");\r\n        return this;\r\n    }\r\n}","import { ManagerItem, AdvancedManager } from \"./manager\";\r\nimport { Service } from \"./service\";\r\nimport { App } from \"./app\";\r\n\r\n/**\r\n * Services that interact with specific Components to achieve certain actions\r\n *\r\n * @export\r\n * @class Block\r\n * @extends {Service}\r\n */\r\nexport class Block extends Service {\r\n    /**\r\n     * The name of the Block\r\n     *\r\n     * @protected\r\n     * @type string\r\n     * @memberof Block\r\n     */\r\n    protected name: string;\r\n\r\n    /**\r\n     * Query selector string \r\n     *\r\n     * @protected\r\n     * @type string\r\n     * @memberof Block\r\n     */\r\n    protected selector: string;\r\n\r\n    /**\r\n     * Index of Block in a BlockManager \r\n     *\r\n     * @protected\r\n     * @type number\r\n     * @memberof Block\r\n     */\r\n    protected index: number;\r\n\r\n    /**\r\n     * The Root Element of a Block\r\n     *\r\n     * @protected\r\n     * @type HTMLElement\r\n     * @memberof Block\r\n     */\r\n    protected rootElement: HTMLElement;\r\n\r\n    /**\r\n     * It initializes the Block\r\n     *\r\n     * @param {string} [name]\r\n     * @param {HTMLElement} [rootElement]\r\n     * @param {string} [selector]\r\n     * @param {number} [index]\r\n     * @memberof Block\r\n     */\r\n    public init(name?: string, rootElement?: HTMLElement, selector?: string, index?: number) {\r\n        this.rootElement = rootElement;\r\n        this.name = name;\r\n        this.selector = selector;\r\n        this.index = index;\r\n    }\r\n\r\n    /**\r\n     * Get Root Element\r\n     *\r\n     * @returns HTMLElement\r\n     * @memberof Block\r\n     */\r\n    public getRootElement(): HTMLElement {\r\n        return this.rootElement;\r\n    }\r\n\r\n    /**\r\n     * Get Selector\r\n     *\r\n     * @returns string\r\n     * @memberof Block\r\n     */\r\n    public getSelector(): string {\r\n        return this.selector;\r\n    }\r\n\r\n    /**\r\n     * Get Index\r\n     *\r\n     * @returns number\r\n     * @memberof Block\r\n     */\r\n    public getIndex(): number {\r\n        return this.index;\r\n    }\r\n\r\n    /**\r\n     * Get the name of the Block\r\n     *\r\n     * @returns string\r\n     * @memberof Block\r\n     */\r\n    public getName(): string {\r\n        return this.name;\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a new Block Intent Class\r\n *\r\n * @export\r\n * @class BlockIntent\r\n * @extends {ManagerItem}\r\n */\r\nexport class BlockIntent extends ManagerItem {\r\n    /**\r\n     * The name of the Block\r\n     *\r\n     * @protected\r\n     * @type string\r\n     * @memberof BlockIntent\r\n     */\r\n    protected name: string;\r\n\r\n    /**\r\n     * The Block Class\r\n     *\r\n     * @protected\r\n     * @type {typeof Block}\r\n     * @memberof BlockIntent\r\n     */\r\n    protected block: typeof Block;\r\n\r\n    /**\r\n     * Creates an instance of BlockIntent.\r\n     *\r\n     * @param {string} name\r\n     * @param {typeof Block} block\r\n     * @memberof BlockIntent\r\n     */\r\n    constructor(name: string, block: typeof Block) {\r\n        super();\r\n        this.name = name;\r\n        this.block = block;\r\n    }\r\n\r\n    /**\r\n     * Getter for name of Block Intent\r\n     *\r\n     * @returns string\r\n     * @memberof BlockIntent\r\n     */\r\n    public getName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    /**\r\n     * Getter for the Block of the Block Intent\r\n     *\r\n     * @returns {typeof Block}\r\n     * @memberof BlockIntent\r\n     */\r\n    public getBlock(): typeof Block {\r\n        return this.block;\r\n    }\r\n}\r\n\r\n/**\r\n * A Service Manager designed to handle only Block Services, it refreshes on Page Change\r\n *\r\n * @export\r\n * @class BlockManager\r\n * @extends {AdvancedManager<number, BlockIntent>}\r\n */\r\nexport class BlockManager extends AdvancedManager<number, BlockIntent> {\r\n    /**\r\n     * A list of Active Blocks \r\n     *\r\n     * @protected\r\n     * @type {AdvancedManager<number, Block>}\r\n     * @memberof BlockManager\r\n     */\r\n    protected activeBlocks: AdvancedManager<number, Block>;\r\n\r\n    /**\r\n     * Creates an instance of BlockManager.\r\n     *\r\n     * @param {App} app\r\n     * @memberof BlockManager\r\n     */\r\n    constructor(app: App) {\r\n        super(app);\r\n        this.activeBlocks = new AdvancedManager(app);\r\n    }\r\n\r\n\t/**\r\n\t * Initialize all Blocks\r\n\t *\r\n\t * @memberof BlockManager\r\n\t */\r\n    public init() {\r\n        this.forEach((intent: BlockIntent) => {\r\n            let name: string = intent.getName();\r\n            let block: typeof Block = intent.getBlock();\r\n            let selector: string = `[${this.getConfig(\"blockAttr\", false)}=\"${name}\"]`;\r\n            let rootElements: Node[] = [...document.querySelectorAll(selector)];\r\n\r\n            for (let i = 0, len = rootElements.length; i < len; i++) {\r\n                let newInstance: Block = new block();\r\n                newInstance.init(name, rootElements[i] as HTMLElement, selector, i);\r\n                this.activeBlocks.set(i, newInstance);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Getter for activeBlocks in BlockManager\r\n     *\r\n     * @returns\r\n     * @memberof BlockManager\r\n     */\r\n    public getActiveBlocks() {\r\n        return this.activeBlocks;\r\n    }\r\n\r\n\t/**\r\n\t * Call the boot method for all Blocks\r\n\t *\r\n\t * @returns Promise<void>\r\n\t * @memberof BlockManager\r\n\t */\r\n    public async boot(): Promise<void> {\r\n        await this.activeBlocks.asyncMethodCall(\"boot\");\r\n    }\r\n\r\n    /**\r\n     * Refreshes DOM Elements\r\n     *\r\n     * @memberof BlockManager\r\n     */\r\n    public refresh() {\r\n        const EventEmitter = this.getApp().getEmitter();\r\n        EventEmitter.on(\"BEFORE_TRANSITION_OUT\", () => {\r\n            this.stop();\r\n        });\r\n\r\n        EventEmitter.on(\"AFTER_TRANSITION_IN\", () => {\r\n            this.init();\r\n            this.boot();\r\n            // this.activeBlocks.methodCall(\"initEvents\");\r\n        });\r\n    }\r\n\r\n\t/**\r\n\t * Call the initEvents method for all Blocks\r\n\t *\r\n\t * @returns BlockManager\r\n\t * @memberof BlockManager\r\n\t */\r\n    public initEvents(): BlockManager {\r\n        this.activeBlocks.methodCall(\"initEvents\");\r\n        this.refresh();\r\n        return this;\r\n    }\r\n\r\n\t/**\r\n\t * Call the stopEvents method for all Blocks\r\n\t *\r\n\t * @returns BlockManager\r\n\t * @memberof BlockManager\r\n\t */\r\n    public stopEvents(): BlockManager {\r\n        this.activeBlocks.methodCall(\"stopEvents\");\r\n        return this;\r\n    }\r\n\r\n\t/**\r\n\t * Call the stop method for all Blocks\r\n\t *\r\n\t * @returns BlockManager\r\n\t * @memberof BlockManager\r\n\t */\r\n    public stop(): BlockManager {\r\n        this.activeBlocks.methodCall(\"stop\");\r\n        this.activeBlocks.clear();\r\n        return this;\r\n    }\r\n}","import { EventEmitter, ListenerCallback, EventInput } from \"@okikio/event-emitter/src/api\";\r\nimport { TransitionManager, Transition } from \"./transition\";\r\nimport { BlockManager, BlockIntent, Block } from \"./block\";\r\nimport { HistoryManager, State, IState } from \"./history\";\r\nimport { ServiceManager, Service } from \"./service\";\r\nimport { PageManager, Page } from \"./page\";\r\nimport { CONFIG, ICONFIG } from \"./config\";\r\n\r\n/**\r\n * The App class starts the entire process, it controls all managers and all services\r\n *\r\n * @export\r\n * @class App\r\n */\r\nexport class App {\r\n    /**\r\n     * A new instance of the HistoryManager\r\n     *\r\n     * @protected\r\n     * @type HistoryManager\r\n     * @memberof App\r\n     */\r\n    protected history: HistoryManager;\r\n\r\n    /**\r\n     * A new instance of the TransitionManager\r\n     *\r\n     * @protected\r\n     * @type TransitionManager\r\n     * @memberof App\r\n     */\r\n    protected transitions: TransitionManager;\r\n\r\n    /**\r\n     * A new instance of the ServiceManager\r\n     *\r\n     * @protected\r\n     * @type ServiceManager\r\n     * @memberof App\r\n     */\r\n    protected services: ServiceManager;\r\n\r\n    /**\r\n     * A new instance of the BlockManager\r\n     *\r\n     * @protected\r\n     * @type BlockManager\r\n     * @memberof App\r\n     */\r\n    protected blocks: BlockManager;\r\n\r\n    /**\r\n     * A new instance of an EventEmitter\r\n     *\r\n     * @protected\r\n     * @type EventEmitter\r\n     * @memberof App\r\n     */\r\n    protected emitter: EventEmitter;\r\n\r\n    /**\r\n     * A new instance of the PageManager\r\n     *\r\n     * @protected\r\n     * @type PageManager\r\n     * @memberof App\r\n     */\r\n    protected pages: PageManager;\r\n\r\n    /**\r\n     * The current Configuration's for the framework\r\n     *\r\n     * @protected\r\n     * @type CONFIG\r\n     * @memberof App\r\n     */\r\n    protected config: CONFIG;\r\n\r\n    /**\r\n     * Creates an instance of App.\r\n     *\r\n     * @param {(ICONFIG | CONFIG)} [config={}]\r\n     * @memberof App\r\n     */\r\n    constructor(config: object = {}) {\r\n        this.register(config);\r\n    }\r\n\r\n    /**\r\n     * For registering all managers and the configurations\r\n     *\r\n     * @param {(ICONFIG | CONFIG)} [config={}]\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public register(config: ICONFIG | CONFIG = {}): App {\r\n        this.config = config instanceof CONFIG ? config : new CONFIG(config);\r\n        this.transitions = new TransitionManager(this);\r\n        this.services = new ServiceManager(this);\r\n        this.blocks = new BlockManager(this);\r\n        this.history = new HistoryManager();\r\n        this.pages = new PageManager(this);\r\n        this.emitter = new EventEmitter();\r\n\r\n        let handler = (() => {\r\n            document.removeEventListener(\"DOMContentLoaded\", handler);\r\n            window.removeEventListener(\"load\", handler);\r\n            this.emitter.emit(\"READY ready\");\r\n        }).bind(this);\r\n\r\n        document.addEventListener(\"DOMContentLoaded\", handler);\r\n        window.addEventListener(\"load\", handler);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the current configurations for the framework\r\n     *\r\n     * @param {...any} args\r\n     * @returns any\r\n     * @memberof App\r\n     */\r\n    public getConfig(...args: any): any {\r\n        return this.config.getConfig(...args);\r\n    }\r\n\r\n    /**\r\n     * Return the App's EventEmitter\r\n     *\r\n     * @returns EventEmitter\r\n     * @memberof App\r\n     */\r\n    public getEmitter(): EventEmitter {\r\n        return this.emitter;\r\n    }\r\n\r\n    /**\r\n     * Returns the App's BlockManager\r\n     *\r\n     * @returns BlockManager\r\n     * @memberof App\r\n     */\r\n    public getBlocks(): BlockManager {\r\n        return this.blocks;\r\n    }\r\n\r\n    /**\r\n     * Return the App's ServiceManager\r\n     *\r\n     * @returns ServiceManager\r\n     * @memberof App\r\n     */\r\n    public getServices(): ServiceManager {\r\n        return this.services;\r\n    }\r\n\r\n    /**\r\n     * Return the App's PageManager\r\n     *\r\n     * @returns PageManager\r\n     * @memberof App\r\n     */\r\n    public getPages(): PageManager {\r\n        return this.pages;\r\n    }\r\n\r\n    /**\r\n     * Return the App's TransitionManager\r\n     *\r\n     * @returns TransitionManager\r\n     * @memberof App\r\n     */\r\n    public getTransitions(): TransitionManager {\r\n        return this.transitions;\r\n    }\r\n\r\n    /**\r\n     * Return the App's HistoryManager\r\n     *\r\n     * @returns HistoryManager\r\n     * @memberof App\r\n     */\r\n    public getHistory(): HistoryManager {\r\n        return this.history;\r\n    }\r\n\r\n    /**\r\n     * Returns a Block Intent Object from the App's instance of the BlockManager\r\n     *\r\n     * @param {number} key\r\n     * @returns IBlockIntent\r\n     * @memberof App\r\n     */\r\n    public getBlock(key: number): BlockIntent {\r\n        return this.blocks.get(key);\r\n    }\r\n\r\n    /**\r\n     * Returns an instance of a Block from the App's instance of the BlockManager\r\n     *\r\n     * @param {number} key\r\n     * @returns Block\r\n     * @memberof App\r\n     */\r\n    public getActiveBlock(key: number): Block {\r\n        return this.blocks.getActiveBlocks().get(key);\r\n    }\r\n\r\n    /**\r\n     * Returns a Service from the App's instance of the ServiceManager\r\n     *\r\n     * @param {number} key\r\n     * @returns Service\r\n     * @memberof App\r\n     */\r\n    public getService(key: number): Service {\r\n        return this.services.get(key);\r\n    }\r\n\r\n    /**\r\n     * Returns a Transition from the App's instance of the TransitionManager\r\n     *\r\n     * @param {string} key\r\n     * @returns Transition\r\n     * @memberof App\r\n     */\r\n    public getTransition(key: string): Transition {\r\n        return this.transitions.get(key);\r\n    }\r\n\r\n    /**\r\n     * Returns a State from the App's instance of the HistoryManager\r\n     *\r\n     * @param {number} key\r\n     * @returns State\r\n     * @memberof App\r\n     */\r\n    public getState(key: number): State {\r\n        return this.history.get(key);\r\n    }\r\n\r\n    /**\r\n     * Based on the type, it will return either a Transition, a Service, or a State from their respective Managers\r\n     *\r\n     * @param {(\"service\" | \"transition\" | \"state\" | \"block\" | string)} type\r\n     * @param {any} key\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public get(type: \"service\" | \"transition\" | \"state\" | \"block\" | string, key: any): App {\r\n        switch (type.toLowerCase()) {\r\n            case \"service\":\r\n                this.getService(key);\r\n                break;\r\n            case \"transition\":\r\n                this.getTransition(key);\r\n                break;\r\n            case \"state\":\r\n                this.getState(key);\r\n                break;\r\n            case \"block\":\r\n                this.getActiveBlock(key);\r\n                break;\r\n            default:\r\n                throw `Error: can't get type '${type}', it is not a recognized type. Did you spell it correctly.`;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns a Page\r\n     *\r\n     * @param {string} url\r\n     * @returns Promise<Page>\r\n     * @memberof App\r\n     */\r\n    public async loadPage(url: string): Promise<Page> {\r\n        return await this.pages.load(url);\r\n    }\r\n\r\n    /**\r\n     * Based on the type, it will return load a Transition, a Service, a State, or a Page from their respective Managers\r\n     *\r\n     * @param {(\"page\" | string)} type\r\n     * @param {any} key\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public async load(type: \"page\" | string, key: any): Promise<any> {\r\n        switch (type.toLowerCase()) {\r\n            case \"page\":\r\n                return await this.loadPage(key);\r\n            default:\r\n                return Promise.resolve(this.get(type, key));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a Block Intent to the App's instance of the BlockManager\r\n     *\r\n     * @param {BlockIntent} blockIntent\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public addBlock(blockIntent: BlockIntent): App {\r\n        this.blocks.add(blockIntent);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds a Service to the App's instance of the ServiceManager\r\n     *\r\n     * @param {Service} service\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public addService(service: Service): App {\r\n        this.services.add(service);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds a Transition to the App's instance of the TransitionManager\r\n     *\r\n     * @param {Transition} transition\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public addTransition(transition: Transition): App {\r\n        this.transitions.add(transition);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds a State to the App's instance of the HistoryManager\r\n     *\r\n     * @param {(IState | State)} state\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public addState(state: IState | State): App {\r\n        this.history.addState(state);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Based on the type, it will add either a Transition, a Service, or a State to their respective Managers\r\n     *\r\n     * @param {(\"service\" | \"transition\" | \"state\")} type\r\n     * @param {any} value\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public add(type: \"service\" | \"transition\" | \"state\" | \"block\", value: any): App {\r\n        switch (type.toLowerCase()) {\r\n            case \"service\":\r\n                this.addService(value);\r\n                break;\r\n            case \"transition\":\r\n                this.addTransition(value);\r\n                break;\r\n            case \"state\":\r\n                this.addState(value);\r\n                break;\r\n            case \"block\":\r\n                this.addBlock(value);\r\n                break;\r\n            default:\r\n                throw `Error: can't add type '${type}', it is not a recognized type. Did you spell it correctly.`;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Start the App and the ServiceManager\r\n     *\r\n     * @returns Promise<App>\r\n     * @memberof App\r\n     */\r\n    public async boot(): Promise<App> {\r\n        this.blocks.init();\r\n        await this.services.boot();\r\n        await this.blocks.boot();\r\n        this.services.initEvents();\r\n        this.blocks.initEvents();\r\n        this.transitions.initEvents();\r\n        return Promise.resolve(this);\r\n    }\r\n\r\n    /**\r\n     * Stop the App and the ServiceManager\r\n     *\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public stop(): App {\r\n        this.services.stop();\r\n        this.blocks.stop();\r\n        this.transitions.stopEvents();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the current page in the PageManager\r\n     *\r\n     * @returns Page\r\n     * @memberof App\r\n     */\r\n    public currentPage(): Page {\r\n        let currentState = this.history.last();\r\n        return this.pages.get(currentState.getURLPathname());\r\n    }\r\n\r\n    /**\r\n     * A shortcut to the App EventEmitter on method\r\n     *\r\n     * @param {EventInput} events\r\n     * @param {ListenerCallback} callback\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public on(events: EventInput, callback?: ListenerCallback): App {\r\n        this.emitter.on(events, callback, this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * A shortcut to the App EventEmitter off method\r\n     *\r\n     * @param {EventInput} events\r\n     * @param {ListenerCallback} callback\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public off(events: EventInput, callback?: ListenerCallback): App {\r\n        this.emitter.off(events, callback, this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * A shortcut to the App EventEmitter once method\r\n     *\r\n     * @param {string} events\r\n     * @param {ListenerCallback} callback\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public once(events: string, callback: ListenerCallback): App {\r\n        this.emitter.once(events, callback, this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * A shortcut to the App EventEmitter emit method\r\n     *\r\n     * @param {(string | any[])} events\r\n     * @param {...any} args\r\n     * @returns App\r\n     * @memberof App\r\n     */\r\n    public emit(events: string | any[], ...args: any): App {\r\n        this.emitter.emit(events, ...args);\r\n        return this;\r\n    }\r\n}\r\n","import { State, Trigger, IState, Coords } from \"./history\";\r\nimport { Service } from \"./service\";\r\nimport { Page } from \"./page\";\r\nimport { _URL } from \"./url\";\r\n\r\nexport type LinkEvent = MouseEvent | TouchEvent;\r\nexport type StateEvent = LinkEvent | PopStateEvent;\r\nexport type IgnoreURLsList = Array<RegExp | string>;\r\n\r\n/**\r\n * Creates a Barba JS like PJAX Service, for the Framework\r\n *\r\n * @export\r\n * @class PJAX\r\n * @extends {Service}\r\n */\r\n// Based on Barba JS and StartingBlocks\r\nexport class PJAX extends Service {\r\n    /**\r\n     * URLs to ignore when prefetching\r\n     *\r\n     * @private\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected ignoreURLs: IgnoreURLsList = [];\r\n\r\n    /**\r\n     * Whether or not to disable prefetching\r\n     *\r\n     * @private\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    protected prefetchIgnore: boolean = false;\r\n\r\n    /**\r\n     * Current state or transitions\r\n     *\r\n     * @private\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected isTransitioning: boolean = false;\r\n\r\n    /**\r\n     * Ignore extra clicks of an anchor element if a transition has already started\r\n     *\r\n     * @private\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected stopOnTransitioning: boolean = false;\r\n\r\n    /**\r\n     * On page change (excluding popstate event) keep current scroll position\r\n     *\r\n     * @private\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected stickyScroll: boolean = true;\r\n\r\n    /**\r\n     * Force load a page if an error occurs\r\n     *\r\n     * @private\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected forceOnError: boolean = false;\r\n\r\n    /**\r\n     * Dictates whether to auto scroll if an hash is present in the window URL\r\n     *\r\n     * @protected\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected autoScrollOnHash: boolean = true;\r\n\r\n    /**\r\n     * Sets the transition state, sets isTransitioning to true\r\n     *\r\n     * @private\r\n     * @memberof PJAX\r\n     */\r\n    private transitionStart() {\r\n        this.isTransitioning = true;\r\n    }\r\n\r\n    /**\r\n     * Sets the transition state, sets isTransitioning to false\r\n     *\r\n     * @private\r\n     * @memberof PJAX\r\n     */\r\n    private transitionStop() {\r\n        this.isTransitioning = false;\r\n    }\r\n\r\n    /**\r\n     * Starts the PJAX Service\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public boot() {\r\n        let current = new State();\r\n        this.HistoryManager.add(current);\r\n        this.changeState(\"replace\", current);\r\n    }\r\n\r\n    /**\r\n     * Gets the transition to use for a certain anchor\r\n     *\r\n     * @param {HTMLAnchorElement} el\r\n     * @returns {(string | null)}\r\n     * @memberof PJAX\r\n     */\r\n    public getTransitionName(el: HTMLAnchorElement): string | null {\r\n        if (!el || !el.getAttribute) return null;\r\n        let transitionAttr = el.getAttribute(this.getConfig(\"transitionAttr\", false));\r\n        if (typeof transitionAttr === 'string')\r\n            return transitionAttr;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the anchor is valid\r\n     *\r\n     * @param {HTMLAnchorElement} el\r\n     * @param {(LinkEvent | KeyboardEvent)} event\r\n     * @param {string} href\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public validLink(el: HTMLAnchorElement, event: LinkEvent | KeyboardEvent, href: string): boolean {\r\n        let pushStateSupport = !window.history.pushState;\r\n        let exists = !el || !href;\r\n        let eventMutate =\r\n            (event as KeyboardEvent).which > 1 ||\r\n            (event as KeyboardEvent).metaKey ||\r\n            (event as KeyboardEvent).ctrlKey ||\r\n            (event as KeyboardEvent).shiftKey ||\r\n            (event as KeyboardEvent).altKey;\r\n        let newTab = el.hasAttribute('target') && (el as HTMLAnchorElement).target === '_blank';\r\n        let crossOrigin =\r\n            ((el as HTMLAnchorElement).protocol !== location.protocol) ||\r\n            ((el as HTMLAnchorElement).hostname !== location.hostname);\r\n        let download = typeof el.getAttribute('download') === 'string';\r\n        let preventSelf = el.hasAttribute(this.getConfig(\"preventSelfAttr\", false));\r\n        let preventAll = Boolean(\r\n            el.closest(this.getConfig(\"preventAllAttr\"))\r\n        );\r\n        let prevent = preventSelf && preventAll;\r\n        let sameURL = new _URL().getFullPath() === new _URL(href).getFullPath();\r\n        return !(exists || pushStateSupport || eventMutate || newTab || crossOrigin || download || prevent || sameURL);\r\n    }\r\n\r\n    /**\r\n     * Returns the href or an Anchor element\r\n     *\r\n     * @param {HTMLAnchorElement} el\r\n     * @returns {(string | null)}\r\n     * @memberof PJAX\r\n     */\r\n    public getHref(el: HTMLAnchorElement): string | null {\r\n        if (el && el.tagName && el.tagName.toLowerCase() === 'a' && typeof el.href === 'string')\r\n            return el.href;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Check if event target is a valid anchor with an href, if so, return the link\r\n     *\r\n     * @param {LinkEvent} event\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public getLink(event: LinkEvent): HTMLAnchorElement {\r\n        let el = event.target as HTMLAnchorElement;\r\n        let href: string = this.getHref(el);\r\n\r\n        while (el && !href) {\r\n            el = (el as HTMLElement).parentNode as HTMLAnchorElement;\r\n            href = this.getHref(el);\r\n        }\r\n\r\n        // Check for a valid link\r\n        if (!el || !this.validLink(el, event, href)) return;\r\n        return el;\r\n    }\r\n\r\n    /**\r\n     * When an element is clicked.\r\n     *\r\n     * Get valid anchor element.\r\n     * Go for a transition.\r\n     *\r\n     * @param {LinkEvent} event\r\n     * @returns\r\n     * @memberof PJAX\r\n     */\r\n    public onClick(event: LinkEvent) {\r\n        let el = this.getLink(event);\r\n        if (!el) return;\r\n\r\n        if (this.isTransitioning && this.stopOnTransitioning) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        let href = this.getHref(el);\r\n        this.EventEmitter.emit(\"ANCHOR-CLICK CLICK click\", event);\r\n        this.go({ href, trigger: el, event });\r\n    }\r\n\r\n    /**\r\n     * Returns the direction of the State change as a String, either the Back button or the Forward button\r\n     *\r\n     * @param {number} value\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public getDirection(value: number): Trigger {\r\n        if (Math.abs(value) > 1) {\r\n            // Ex 6-0 > 0 -> forward, 0-6 < 0 -> back\r\n            return value > 0 ? 'forward' : 'back';\r\n        } else {\r\n            if (value === 0) {\r\n                return 'popstate';\r\n            } else {\r\n                // Ex 6-5 > 0 -> back, 5-6 < 0 -> forward\r\n                return value > 0 ? 'back' : 'forward';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Force a page to go to a certain URL\r\n     *\r\n     * @param {string} href\r\n     * @memberof PJAX\r\n     */\r\n    public force(href: string): void {\r\n        window.location.assign(href);\r\n    }\r\n\r\n    /**\r\n     * If transition is running force load page.\r\n     * Stop if currentURL is the same as new url.\r\n     * On state change, change the current state history,\r\n     * to reflect the direction of said state change\r\n     * Load page and page transition.\r\n     *\r\n     * @param {string} href\r\n     * @param {Trigger} [trigger='HistoryManager']\r\n     * @param {StateEvent} [event]\r\n     * @memberof PJAX\r\n     */\r\n    public go({ href, trigger = 'HistoryManager', event }: { href: string; trigger?: Trigger; event?: StateEvent; }): Promise<void> {\r\n        // If transition is already running and the go method is called again, force load page\r\n        if (this.isTransitioning && this.stopOnTransitioning) {\r\n            this.force(href);\r\n            return;\r\n        }\r\n\r\n        let url = new _URL(href);\r\n        let currentState = this.HistoryManager.last();\r\n        let currentURL = currentState.getURL();\r\n        if (currentURL.equalTo(url)) {\r\n            this.hashAction(url.hash);\r\n            return;\r\n        }\r\n\r\n        let transitionName: string;\r\n        if (event && (event as PopStateEvent).state) {\r\n            this.EventEmitter.emit(\"POPSTATE\", event);\r\n\r\n            // If popstate, get back/forward direction.\r\n            let { state }: { state: IState } = event as PopStateEvent;\r\n            let { index, transition, data } = state;\r\n            let currentIndex = currentState.getIndex();\r\n            let difference = currentIndex - index;\r\n\r\n            trigger = this.getDirection(difference);\r\n            transitionName = transition;\r\n\r\n            // If page remains the same on state change DO NOT run this, it's pointless\r\n            if (trigger !== \"popstate\") {\r\n                // Keep scroll position\r\n                let { x, y } = data.scroll;\r\n                window.scroll({\r\n                    top: y, left: x,\r\n                    behavior: 'smooth'  // 👈 \r\n                });\r\n            }\r\n\r\n            // Based on the direction of the state change either remove or add a state\r\n            if (trigger === \"back\") {\r\n                this.HistoryManager.delete(currentIndex);\r\n                this.EventEmitter.emit(`POPSTATE-BACK`, event);\r\n            } else if (trigger === \"forward\") {\r\n                this.HistoryManager.addState({ url, transition, data });\r\n                this.EventEmitter.emit(`POPSTATE-FORWARD`, event);\r\n            }\r\n        } else {\r\n            // Add new state\r\n            transitionName = this.getTransitionName(trigger as HTMLAnchorElement) || \"default\";\r\n            const scroll = new Coords();\r\n            const index = this.HistoryManager.size;\r\n            const state = new State({\r\n                url, index,\r\n                transition: transitionName,\r\n                data: { scroll }\r\n            });\r\n\r\n            if (this.stickyScroll) {\r\n                // Keep scroll position\r\n                let { x, y } = scroll;\r\n                window.scroll({\r\n                    top: y, left: x,\r\n                    behavior: 'smooth'  // 👈 \r\n                });\r\n            } else {\r\n                window.scroll({\r\n                    top: 0, left: 0,\r\n                    behavior: 'smooth'  // 👈 \r\n                });\r\n            }\r\n\r\n            this.HistoryManager.add(state);\r\n            this.changeState(\"push\", state);\r\n            this.EventEmitter.emit(\"HISTORY-NEW-ITEM\", event);\r\n        }\r\n\r\n        if (event) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.EventEmitter.emit(\"GO go\", event);\r\n        return this.load({ oldHref: currentURL.getPathname(), href, trigger, transitionName });\r\n    }\r\n\r\n    /**\r\n     * Either push or replace history state\r\n     *\r\n     * @param {(\"push\" | \"replace\")} action\r\n     * @param {IState} state\r\n     * @param {_URL} url\r\n     * @memberof PJAX\r\n     */\r\n    public changeState(action: \"push\" | \"replace\", state: State) {\r\n        let url = state.getURL();\r\n        let href = url.getFullPath();\r\n        let json = state.toJSON();\r\n        let args = [json, '', href];\r\n        if (window.history) {\r\n            switch (action) {\r\n                case 'push':\r\n                    window.history.pushState.apply(window.history, args);\r\n                    break;\r\n                case 'replace':\r\n                    window.history.replaceState.apply(window.history, args);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load the new Page as well as a Transition; run the Transition\r\n     *\r\n     * @param {string} oldHref\r\n     * @param {string} href\r\n     * @param {Trigger} trigger\r\n     * @param {string} [transitionName=\"default\"]\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public async load({ oldHref, href, trigger, transitionName = \"default\" }: { oldHref: string; href: string; trigger: Trigger; transitionName?: string; }): Promise<any> {\r\n        try {\r\n            let oldPage = this.PageManager.get(oldHref);\r\n            let newPage: Page;\r\n\r\n            this.EventEmitter.emit(\"PAGE-LOADING\", { href, oldPage, trigger });\r\n            try {\r\n                try {\r\n                    newPage = await this.PageManager.load(href);\r\n                    this.transitionStart();\r\n                    this.EventEmitter.emit(\"PAGE-LOAD-COMPLETE\", { newPage, oldPage, trigger });\r\n                } catch (err) {\r\n                    throw `[PJAX] Page load error: ${err}`;\r\n                }\r\n\r\n                // --\r\n                // --\r\n\r\n                this.EventEmitter.emit(\"NAVIGATION-START\", { oldPage, newPage, trigger, transitionName });\r\n                try {\r\n                    this.EventEmitter.emit(\"TRANSITION-START\", transitionName);\r\n                    let transition = await this.TransitionManager.boot({\r\n                        name: transitionName,\r\n                        oldPage,\r\n                        newPage,\r\n                        trigger\r\n                    });\r\n\r\n                    this.EventEmitter.emit(\"TRANSITION-END\", { transition });\r\n                } catch (err) {\r\n                    throw `[PJAX] Transition error: ${err}`;\r\n                }\r\n\r\n                this.EventEmitter.emit(\"NAVIGATION-END\", { oldPage, newPage, trigger, transitionName });\r\n                this.hashAction();\r\n            } catch (err) {\r\n                this.transitionStop();\r\n                throw err;\r\n            }\r\n\r\n            this.transitionStop(); // Sets isTransitioning to false\r\n        } catch (err) {\r\n            if (this.forceOnError) this.force(href);\r\n            else console.error(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Auto scrolls to an elements position if the element has an hash\r\n     *\r\n     * @param {string} [hash=window.location.hash]\r\n     * @memberof PJAX\r\n     */\r\n    public hashAction(hash: string = window.location.hash) {\r\n        if (this.autoScrollOnHash) {\r\n            let hashID = hash.slice(1);\r\n\r\n            if (hashID.length) {\r\n                let el = document.getElementById(hashID);\r\n\r\n                if (el) {\r\n                    if (el.scrollIntoView) {\r\n                        el.scrollIntoView({ behavior: 'smooth' });\r\n                    } else {\r\n                        let { left, top } = el.getBoundingClientRect();\r\n                        window.scroll({ left, top, behavior: 'smooth' });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check to see if the URL is to be ignored, uses either RegExp of Strings to check\r\n     *\r\n     * @param {_URL} { pathname }\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public ignoredURL({ pathname }: _URL): boolean {\r\n        return this.ignoreURLs.length && this.ignoreURLs.some(url => {\r\n            return typeof url === \"string\" ? url === pathname : (url as RegExp).exec(pathname) !== null;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * When you hover over an anchor, prefetch the event target's href\r\n     *\r\n     * @param {LinkEvent} event\r\n     * @memberof PJAX\r\n     */\r\n    public onHover(event: LinkEvent): Promise<void> {\r\n        let el = this.getLink(event);\r\n        if (!el) return;\r\n\r\n        const url = new _URL(this.getHref(el));\r\n        const urlString: string = url.getPathname();\r\n        // If Url is ignored or already in cache, don't do any think\r\n        if (this.ignoredURL(url) || this.PageManager.has(urlString)) return;\r\n\r\n        this.EventEmitter.emit(\"ANCHOR-HOVER HOVER hover\", event);\r\n\r\n        (async () => {\r\n            try {\r\n                await this.PageManager.load(url);\r\n            } catch (err) {\r\n                console.warn(\"[PJAX] Prefetch error: \", err);\r\n            }\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * When History state changes.\r\n     *\r\n     * Get url from State\r\n     * Go for a Barba transition.\r\n     *\r\n     * @param {PopStateEvent} event\r\n     * @memberof PJAX\r\n     */\r\n    public onStateChange(event: PopStateEvent): void {\r\n        this.go({ href: window.location.href, trigger: 'popstate', event });\r\n    }\r\n\r\n    /**\r\n     * Bind the event listeners to the PJAX class\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public bindEvents() {\r\n        this.onHover = this.onHover.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Initialize DOM Events\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public initEvents() {\r\n        this.bindEvents();\r\n\r\n        if (this.prefetchIgnore !== true) {\r\n            document.addEventListener('mouseover', this.onHover);\r\n            document.addEventListener('touchstart', this.onHover);\r\n        }\r\n\r\n        document.addEventListener('click', this.onClick);\r\n        window.addEventListener('popstate', this.onStateChange);\r\n    }\r\n\r\n    /**\r\n     * Stop DOM Events\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public stopEvents() {\r\n        if (this.prefetchIgnore !== true) {\r\n            document.removeEventListener('mouseover', this.onHover);\r\n            document.removeEventListener('touchstart', this.onHover);\r\n        }\r\n\r\n        document.removeEventListener('click', this.onClick);\r\n        window.removeEventListener('popstate', this.onStateChange);\r\n    }\r\n}","import { Service } from \"./service\";\r\nimport { Manager } from \"./manager\";\r\n\r\nexport type RouteMethod = (...args: any) => any;\r\nexport type RouteStyle = string | RegExp;\r\nexport interface IRouteToFrom {\r\n    to: RouteStyle,\r\n    from: RouteStyle\r\n}\r\nexport type RoutePath = IRouteToFrom | RouteStyle;\r\nexport interface IRoute {\r\n    path: RoutePath,\r\n    method: RouteMethod\r\n}\r\n\r\n/**\r\n * Controls what happens when certain url paths match a set of criteria\r\n *\r\n * @export\r\n * @class Router\r\n * @extends {Service}\r\n */\r\nexport class Router extends Service {\r\n    /**\r\n     * List of routes inputted\r\n     *\r\n     * @protected\r\n     * @type {Manager<IRouteToFrom, RouteMethod>}\r\n     * @memberof Router\r\n     */\r\n    protected routes: Manager<IRouteToFrom, RouteMethod>;\r\n\r\n    /**\r\n     * Creates an instance of Router.\r\n     * \r\n     * @param {Array<IRoute>} [routes=[]]\r\n     * @memberof Router\r\n     */\r\n    constructor(routes: IRoute[] = []) {\r\n        super();\r\n        this.routes = new Manager();\r\n        for (const route of routes) {\r\n            this.add(route);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a new route to watch for\r\n     *\r\n     * @param {IRoute} { path, method }\r\n     * @returns {Router}\r\n     * @memberof Router\r\n     */\r\n    public add({ path, method }: IRoute): Router {\r\n        const key = this.parse(path);\r\n        this.routes.set(key, method);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Convert strings into path match functions\r\n     *\r\n     * @param {RouteStyle} path\r\n     * @returns {RegExp}\r\n     * @memberof Router\r\n     */\r\n    public parsePath(path: RouteStyle): RegExp {\r\n        if (typeof path === \"string\")\r\n            return new RegExp(path, \"i\");\r\n        else if (path instanceof RegExp)\r\n            return path;\r\n        throw \"[Router] only regular expressions and strings are accepted as paths.\";\r\n    }\r\n\r\n    /**\r\n     * Determines if a strings counts has a path\r\n     *\r\n     * @param {RouteStyle} input\r\n     * @returns boolean\r\n     * @memberof Router\r\n     */\r\n    public isPath(input: RouteStyle): boolean {\r\n        return typeof input === \"string\" || input instanceof RegExp;\r\n    }\r\n\r\n    /**\r\n     * Parse the multiple different formats for paths, into a { from, to } object\r\n     *\r\n     * @param {RouteStyle} input\r\n     * @returns {IRouteToFrom}\r\n     * @memberof Router\r\n     */\r\n    public parse(input: RoutePath): IRouteToFrom {\r\n        let route = (input as IRouteToFrom);\r\n        let toFromPath: IRouteToFrom = {\r\n            from: /(.*)/g,\r\n            to: /(.*)/g\r\n        };\r\n\r\n        if (this.isPath(input as RouteStyle))\r\n            toFromPath = {\r\n                from: input as RouteStyle,\r\n                to: /(.*)/g\r\n            };\r\n        else if (this.isPath(route.from) && this.isPath(route.to))\r\n            toFromPath = route;\r\n        else\r\n            throw \"[Router] path is neither a string, regular expression, or a { from, to } object.\";\r\n\r\n        let { from, to } = toFromPath;\r\n        return {\r\n            from: this.parsePath(from),\r\n            to: this.parsePath(to)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test if route paths are true, if so run their methods\r\n     *\r\n     * @memberof Router\r\n     */\r\n    public route() {\r\n        let from: string = this.HistoryManager.last().getURLPathname();\r\n        let to: string = window.location.pathname;\r\n\r\n        this.routes.forEach((method: RouteMethod, path: IRouteToFrom) => {\r\n            let fromRegExp = (path.from as RegExp);\r\n            let toRegExp = (path.to as RegExp);\r\n\r\n            if (fromRegExp.test(from) && toRegExp.test(to)) {\r\n                let fromExec = fromRegExp.exec(from);\r\n                let toExec = toRegExp.exec(to);\r\n\r\n                method({ from: fromExec, to: toExec });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add listeners for PJAX Events\r\n     *\r\n     * @memberof Router\r\n     */\r\n    public initEvents() {\r\n        this.route = this.route.bind(this);\r\n        this.EventEmitter.on(\"READY\", this.route);\r\n        this.EventEmitter.on(\"PAGE-LOADING\", this.route);\r\n    }\r\n}","import { EventEmitter, EventInput, ListenerCallback } from \"@okikio/event-emitter/src/api\";\r\n\r\n// DOM\r\nexport type AnimationTarget = string | Node | NodeList | HTMLCollection | HTMLElement[] | any[];\r\nexport const getElements = (selector: string | Node): Node[] => {\r\n    return typeof selector === \"string\" ? Array.from(document.querySelectorAll(selector as string)) : [selector];\r\n};\r\n\r\nexport const getTargets = (targets: AnimationTarget): Node[] => {\r\n    if (Array.isArray(targets)) return targets;\r\n    if (typeof targets == \"string\" || targets instanceof Node)\r\n        return getElements(targets);\r\n    if (targets instanceof NodeList || targets instanceof HTMLCollection)\r\n        return Array.from(targets);\r\n    return [];\r\n};\r\n\r\n// VALUES\r\nexport type closureArgs = [number, number, HTMLElement];\r\nexport type closure = ((index?: number, total?: number, element?: HTMLElement) => any) | any;\r\nexport const computeValue = (value: closure, args: closureArgs) => {\r\n    if (typeof value === \"function\") {\r\n        return value(...args);\r\n    } else { return value; }\r\n};\r\n\r\nexport const mapObject = (obj: object, args: closureArgs): any => {\r\n    let key, value, result = {};\r\n    let keys = Object.keys(obj);\r\n    for (let i = 0, len = keys.length; i < len; i++) {\r\n        key = keys[i];\r\n        value = obj[key];\r\n        result[key] = computeValue(value, args);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n// From: [https://easings.net]\r\nexport const easings = {\r\n    \"ease\": \"ease\",\r\n    \"in\": \"ease-in\",\r\n    \"out\": \"ease-out\",\r\n    \"in-out\": \"ease-in-out\",\r\n\r\n    // Sine\r\n    \"in-sine\": \"cubic-bezier(0.47, 0, 0.745, 0.715)\",\r\n    \"out-sine\": \"cubic-bezier(0.39, 0.575, 0.565, 1)\",\r\n    \"in-out-sine\": \"cubic-bezier(0.445, 0.05, 0.55, 0.95)\",\r\n\r\n    // Quad\r\n    \"in-quad\": \"cubic-bezier(0.55, 0.085, 0.68, 0.53)\",\r\n    \"out-quad\": \"cubic-bezier(0.25, 0.46, 0.45, 0.94)\",\r\n    \"in-out-quad\": \"cubic-bezier(0.455, 0.03, 0.515, 0.955)\",\r\n\r\n    // Cubic\r\n    \"in-cubic\": \"cubic-bezier(0.55, 0.055, 0.675, 0.19)\",\r\n    \"out-cubic\": \"cubic-bezier(0.215, 0.61, 0.355, 1)\",\r\n    \"in-out-cubic\": \"cubic-bezier(0.645, 0.045, 0.355, 1)\",\r\n\r\n    // Quart\r\n    \"in-quart\": \"cubic-bezier(0.895, 0.03, 0.685, 0.22)\",\r\n    \"out-quart\": \"cubic-bezier(0.165, 0.84, 0.44, 1)\",\r\n    \"in-out-quart\": \"cubic-bezier(0.77, 0, 0.175, 1)\",\r\n\r\n    // Quint\r\n    \"in-quint\": \"cubic-bezier(0.755, 0.05, 0.855, 0.06)\",\r\n    \"out-quint\": \"cubic-bezier(0.23, 1, 0.32, 1)\",\r\n    \"in-out-quint\": \"cubic-bezier(0.86, 0, 0.07, 1)\",\r\n\r\n    // Expo\r\n    \"in-expo\": \"cubic-bezier(0.95, 0.05, 0.795, 0.035)\",\r\n    \"out-expo\": \"cubic-bezier(0.19, 1, 0.22, 1)\",\r\n    \"in-out-expo\": \"cubic-bezier(1, 0, 0, 1)\",\r\n\r\n    // Circ\r\n    \"in-circ\": \"cubic-bezier(0.6, 0.04, 0.98, 0.335)\",\r\n    \"out-circ\": \"cubic-bezier(0.075, 0.82, 0.165, 1)\",\r\n    \"in-out-circ\": \"cubic-bezier(0.785, 0.135, 0.15, 0.86)\",\r\n\r\n    // Back\r\n    \"in-back\": \"cubic-bezier(0.6, -0.28, 0.735, 0.045)\",\r\n    \"out-back\": \"cubic-bezier(0.175, 0.885, 0.32, 1.275)\",\r\n    \"in-out-back\": \"cubic-bezier(0.68, -0.55, 0.265, 1.55)\"\r\n};\r\nexport const getEase = (ease: string) => {\r\n    return /^(ease|in|out)/.test(ease) ? easings[ease] : ease;\r\n};\r\n\r\nexport interface AnimationOptions {\r\n    target?: AnimationTarget,\r\n\r\n    speed?: number | closure,\r\n    delay?: number | closure,\r\n    easing?: string | closure,\r\n    endDelay?: number | closure,\r\n    duration?: number | closure,\r\n    autoplay?: boolean | closure,\r\n    keyframes?: object[] | closure,\r\n    loop?: number | boolean | closure, // iterations: number,\r\n    options?: AnimationOptions | closure,\r\n    onfinish?: (element?: HTMLElement, index?: number, total?: number) => any,\r\n    fillMode?: \"none\" | \"forwards\" | \"backwards\" | \"both\" | \"auto\" | closure,\r\n    direction?: \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\" | closure,\r\n    [property: string]: boolean | object | string | string[] | number | null | (number | null)[] | closure | undefined;\r\n};\r\n\r\nexport const DefaultAnimationOptions: AnimationOptions = {\r\n    keyframes: [],\r\n\r\n    loop: 1, // iterations: number,\r\n    delay: 0,\r\n    speed: 1,\r\n    endDelay: 0,\r\n    easing: \"ease\",\r\n    autoplay: true,\r\n    duration: 1000,\r\n    onfinish() { },\r\n    fillMode: \"auto\",\r\n    direction: \"normal\",\r\n};\r\n\r\n// You can check it out here: https://codepen.io/okikio/pen/qBbdGaW?editors=0011\r\nexport class Animate {\r\n    /**\r\n     * Stores the options for the current animation\r\n     *\r\n     * @protected\r\n     * @type AnimationOptions\r\n     * @memberof Animate\r\n     */\r\n    protected options: AnimationOptions = {};\r\n\r\n    /**\r\n     * The Array of Elements to Animate\r\n     *\r\n     * @protected\r\n     * @type {Node[]}\r\n     * @memberof Animate\r\n     */\r\n    protected targets: Node[] = [];\r\n\r\n    /**\r\n     * The properties to animate\r\n     *\r\n     * @protected\r\n     * @type {object}\r\n     * @memberof Animate\r\n     */\r\n    protected properties: object = {};\r\n\r\n    /**\r\n     * A Set of Animations\r\n     *\r\n     * @protected\r\n     * @type {Map<HTMLElement, Animation>}\r\n     * @memberof Animate\r\n     */\r\n    protected animations: Map<HTMLElement, Animation> = new Map();\r\n\r\n    /**\r\n     * The total duration of all Animation's\r\n     *\r\n     * @protected\r\n     * @type {number}\r\n     * @memberof Animate\r\n     */\r\n    protected duration: number = 0;\r\n\r\n    /**\r\n     * The Element the main animation uses\r\n     *\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     * @memberof Animate\r\n     */\r\n    protected mainElement: HTMLElement;\r\n\r\n    /**\r\n     * Stores an animation that runs on the total duration of the all other Animations, and as such it's the main Animation\r\n     *\r\n     * @protected\r\n     * @type {Animation}\r\n     * @memberof Animate\r\n     */\r\n    protected mainAnimation: Animation;\r\n\r\n    /**\r\n     * Stores request frame calls\r\n     *\r\n     * @protected\r\n     * @type {number}\r\n     * @memberof Animate\r\n     */\r\n    protected animationFrame: number;\r\n\r\n    /**\r\n     * An event emitter\r\n     *\r\n     * @protected\r\n     * @type {EventEmitter}\r\n     * @memberof Animate\r\n     */\r\n    protected emitter: EventEmitter = new EventEmitter();\r\n\r\n    /**\r\n     * The finish method, is called when the main animation has finished\r\n     *\r\n     * @protected\r\n     * @type {*}\r\n     * @memberof Animate\r\n     */\r\n    protected finish: any;\r\n\r\n    /**\r\n     * Returns a promise that is fulfilled when the mainAnimation is finished\r\n     *\r\n     * @protected\r\n     * @type {Promise<AnimationOptions>}\r\n     * @memberof Animate\r\n     */\r\n    protected promise: Promise<AnimationOptions>;\r\n\r\n    /**\r\n     * Creates an instance of Animate.\r\n     * \r\n     * @param {AnimationOptions} options\r\n     * @memberof Animate\r\n     */\r\n    constructor(options: AnimationOptions = {}) {\r\n        let { options: animation, ...rest } = options;\r\n        this.options = Object.assign({}, DefaultAnimationOptions, animation, rest);\r\n\r\n        let {\r\n            loop,\r\n            delay,\r\n            speed,\r\n            easing,\r\n            endDelay,\r\n            duration,\r\n            direction,\r\n            fillMode,\r\n            onfinish,\r\n            target,\r\n            keyframes,\r\n            autoplay,\r\n            ...properties\r\n        } = this.options;\r\n\r\n        this.mainElement = document.createElement(\"span\");\r\n        this.targets = getTargets(target);\r\n        this.properties = properties;\r\n\r\n        let animationKeyframe: Keyframe[] | PropertyIndexedKeyframes;\r\n        for (let i = 0, len = this.targets.length; i < len; i++) {\r\n            let target = this.targets[i] as HTMLElement;\r\n            let animationOptions = {\r\n                easing: getEase(easing),\r\n                iterations: loop === true ? Infinity : (loop as number),\r\n                direction,\r\n                endDelay,\r\n                duration,\r\n                delay,\r\n                fill: fillMode,\r\n            };\r\n\r\n            // Accept keyframes as a keyframes Object, or a method, \r\n            // if there are no animations in the keyframes array,\r\n            // uses css properties from the options object\r\n            let arrKeyframes = computeValue((keyframes as Keyframe[]), [i, len, target]);\r\n            animationKeyframe = arrKeyframes.length ? arrKeyframes :\r\n                (this.properties as PropertyIndexedKeyframes);\r\n\r\n            // Allows the use of functions as the values, for both the keyframes and the animation object\r\n            // It adds the capability of advanced stagger animation, similar to the anime js stagger functions\r\n            animationOptions = mapObject(animationOptions, [i, len, target]);\r\n            if (!(arrKeyframes.length > 0))\r\n                animationKeyframe = mapObject(animationKeyframe, [i, len, target]);\r\n\r\n            // Set the Animate classes duration to be the Animation with the largest totalDuration\r\n            let tempDuration: number =\r\n                animationOptions.delay +\r\n                (animationOptions.duration * animationOptions.iterations) +\r\n                animationOptions.endDelay;\r\n            if (this.duration < tempDuration) this.duration = tempDuration;\r\n\r\n            // Add animation to the Animations Set\r\n            let animation = target.animate(animationKeyframe, animationOptions);\r\n            animation.onfinish = () => {\r\n                onfinish(target, i, len);\r\n            };\r\n            this.animations.set(target, animation);\r\n        }\r\n\r\n        this.mainAnimation = this.mainElement.animate([\r\n            { opacity: \"0\" },\r\n            { opacity: \"1\" }\r\n        ], {\r\n            duration: this.duration,\r\n            easing: \"linear\"\r\n        });\r\n\r\n        this.setSpeed(speed);\r\n        if (autoplay) this.play();\r\n        else this.pause();\r\n\r\n        this.promise = this.newPromise();\r\n        this.mainAnimation.onfinish = () => {\r\n            this.finish(this.options);\r\n            window.cancelAnimationFrame(this.animationFrame);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns a new Promise that is resolve when this.finish is called\r\n     *\r\n     * @protected\r\n     * @returns {Promise<AnimationOptions>}\r\n     * @memberof Animate\r\n     */\r\n    protected newPromise(): Promise<AnimationOptions> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.finish = (options: AnimationOptions) => {\r\n                    this.emit(\"finish\", options);\r\n                    return resolve(options);\r\n                };\r\n            } catch (err) { reject(err); }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fulfills the this.promise Promise\r\n     *\r\n     * @param {(value?: any) => any} [onFulfilled]\r\n     * @param {(reason?: any) => any} [onRejected]\r\n     * @returns {Promise<AnimationOptions>}\r\n     * @memberof Animate\r\n     */\r\n    public then(\r\n        onFulfilled?: (value?: any) => any,\r\n        onRejected?: (reason?: any) => any\r\n    ): Promise<AnimationOptions> {\r\n        return this.promise.then(onFulfilled, onRejected);\r\n    }\r\n\r\n    /**\r\n     * Catches error that occur in the this.promise Promise\r\n     *\r\n     * @param {(reason?: any) => any} onRejected\r\n     * @returns {Promise<AnimationOptions>}\r\n     * @memberof Animate\r\n     */\r\n    public catch(onRejected: (reason?: any) => any): Promise<AnimationOptions> {\r\n        return this.promise.catch(onRejected);\r\n    }\r\n\r\n    /**\r\n     * If you don't care if the this.promise Promise has either been rejected or resolved  \r\n     *\r\n     * @param {() => any} onFinally\r\n     * @returns {Promise<AnimationOptions>}\r\n     * @memberof Animate\r\n     */\r\n    public finally(onFinally: () => any): Promise<AnimationOptions> {\r\n        return this.promise.finally(onFinally);\r\n    }\r\n\r\n    /**\r\n     * Represents an Animation Frame Loop\r\n     *\r\n     * @private\r\n     * @memberof Animate\r\n     */\r\n    protected loop(): void {\r\n        this.animationFrame = window.requestAnimationFrame(this.loop.bind(this));\r\n        this.emit(\"tick change\", this.getCurrentTime());\r\n    }\r\n\r\n    /**\r\n     * Adds a listener for a given event\r\n     *\r\n     * @param {EventInput} events\r\n     * @param {ListenerCallback} [callback]\r\n     * @param {object} [scope]\r\n     * @returns {Animate}\r\n     * @memberof Animate\r\n     */\r\n    public on(events: EventInput, callback?: ListenerCallback, scope?: object): Animate {\r\n        this.emitter.on(events, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Removes a listener from an event\r\n     *\r\n     * @param {EventInput} events\r\n     * @param {ListenerCallback} [callback]\r\n     * @param {object} [scope]\r\n     * @returns {Animate}\r\n     * @memberof Animate\r\n     */\r\n    public off(events: EventInput, callback?: ListenerCallback, scope?: object): Animate {\r\n        this.emitter.off(events, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Call all listeners within an event\r\n     *\r\n     * @param {(string | any[])} events\r\n     * @param {...any} args\r\n     * @returns {Animate}\r\n     * @memberof Animate\r\n     */\r\n    public emit(events: string | any[], ...args: any): Animate {\r\n        this.emitter.emit(events, ...args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get a specific Animation from an Animate instance\r\n     *\r\n     * @param {HTMLElement} element\r\n     * @returns {Animation}\r\n     * @memberof Animate\r\n     */\r\n    public getAnimation(element: HTMLElement): Animation {\r\n        return this.animations.get(element);\r\n    }\r\n\r\n    /**\r\n     * Play Animation's\r\n     *\r\n     * @returns {Animate}\r\n     * @memberof Animate\r\n     */\r\n    public play(): Animate {\r\n        // Once the animation is done, it's done, it can only be paused by the reset method\r\n        if (this.mainAnimation.playState !== \"finished\") {\r\n            this.mainAnimation.play();\r\n            this.animationFrame = requestAnimationFrame(this.loop.bind(this));\r\n            this.animations.forEach(animation => {\r\n                if (animation.playState !== \"finished\") animation.play();\r\n            });\r\n            this.emit(\"play\");\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Pause Animation's\r\n     *\r\n     * @returns {Animate}\r\n     * @memberof Animate\r\n     */\r\n    public pause(): Animate {\r\n        // Once the animation is done, it's done, it can only be reset by the reset method\r\n        if (this.mainAnimation.playState !== \"finished\") {\r\n            this.mainAnimation.pause();\r\n            window.cancelAnimationFrame(this.animationFrame);\r\n            this.animations.forEach(animation => {\r\n                if (animation.playState !== \"finished\") animation.pause();\r\n            });\r\n            this.emit(\"pause\");\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the total duration of all Animations\r\n     *\r\n     * @returns {number}\r\n     * @memberof Animate\r\n     */\r\n    public getDuration(): number {\r\n        return this.duration;\r\n    }\r\n\r\n    /**\r\n     * Returns the current time of the Main Animation\r\n     *\r\n     * @returns {number}\r\n     * @memberof Animate\r\n     */\r\n    public getCurrentTime(): number {\r\n        return this.mainAnimation.currentTime;\r\n    }\r\n\r\n    /**\r\n     * Set the current time of the Main Animation\r\n     *\r\n     * @param {number} time\r\n     * @returns {Animate}\r\n     * @memberof Animate\r\n     */\r\n    public setCurrentTime(time: number): Animate {\r\n        this.mainAnimation.currentTime = time;\r\n        this.animations.forEach(animation => {\r\n            animation.currentTime = time;\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the Animation progress as a fraction of the current time / duration\r\n     *\r\n     * @returns\r\n     * @memberof Animate\r\n     */\r\n    public getProgress() {\r\n        return this.getCurrentTime() / this.duration;\r\n    }\r\n\r\n    /**\r\n     * Set the Animation progress as a fraction of the current time / duration\r\n     *\r\n     * @param {number} percent\r\n     * @returns {Animate}\r\n     * @memberof Animate\r\n     */\r\n    public setProgress(percent: number): Animate {\r\n        this.mainAnimation.currentTime = percent * this.duration;\r\n        this.animations.forEach(animation => {\r\n            animation.currentTime = percent * this.duration;\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return the playback speed of the animation\r\n     *\r\n     * @returns {number}\r\n     * @memberof Animate\r\n     */\r\n    public getSpeed(): number {\r\n        return this.mainAnimation.playbackRate;\r\n    }\r\n    /**\r\n     * Set the playback speed of an Animation\r\n     *\r\n     * @param {number} [speed=1]\r\n     * @returns {Animate}\r\n     * @memberof Animate\r\n     */\r\n    public setSpeed(speed: number = 1): Animate {\r\n        this.mainAnimation.playbackRate = speed;\r\n        this.animations.forEach(animation => {\r\n            animation.playbackRate = speed;\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Reset all Animations\r\n     *\r\n     * @memberof Animate\r\n     */\r\n    public reset() {\r\n        this.setCurrentTime(0);\r\n        this.promise = this.newPromise();\r\n\r\n        if (this.options.autoplay) this.play();\r\n        else this.pause();\r\n    }\r\n\r\n    /**\r\n     * Returns the current playing state\r\n     *\r\n     * @returns {(\"idle\" | \"running\" | \"paused\" | \"finished\")}\r\n     * @memberof Animate\r\n     */\r\n    public getPlayState(): \"idle\" | \"running\" | \"paused\" | \"finished\" {\r\n        return this.mainAnimation.playState;\r\n    }\r\n\r\n    /**\r\n     * Get the options of an Animate instance\r\n     *\r\n     * @returns {AnimationOptions}\r\n     * @memberof Animate\r\n     */\r\n    public getOptions(): AnimationOptions {\r\n        return this.options;\r\n    }\r\n\r\n    // Returns the Animate options, as JSON\r\n    public toJSON(): AnimationOptions {\r\n        return this.getOptions();\r\n    }\r\n}\r\n\r\n// Creates a new Animate instance\r\nexport const animate = (options: AnimationOptions = {}): Animate => {\r\n    return new Animate(options);\r\n};","import { Block } from \"../../src/api\";\r\nimport { animate } from \"walijs/src/api\";\r\n\r\n//== Blocks\r\nexport class InViewBlock extends Block {\r\n    protected observer: IntersectionObserver;\r\n    protected observerOptions: { root: any; rootMargin: string; threshold: number; };\r\n    protected imgs: HTMLElement[];\r\n    protected direction: string;\r\n    protected xPercent: number;\r\n    protected inView: boolean = false;\r\n\r\n    public boot() {\r\n        // Values\r\n        this.observerOptions = {\r\n            root: null,\r\n            rootMargin: '0px',\r\n            threshold: 0.1\r\n        };\r\n\r\n        // Create observer\r\n        this.observer = new IntersectionObserver(entries => {\r\n            this.onIntersectionCallback(entries);\r\n        }, this.observerOptions);\r\n\r\n        // Prepare values\r\n        this.imgs = [];\r\n        this.direction = \"right\";\r\n        this.xPercent = 30;\r\n\r\n        if (this.rootElement.hasAttribute('data-direction')) {\r\n            this.direction = this.rootElement.getAttribute('data-direction');\r\n        }\r\n\r\n        if (this.direction === 'left') {\r\n            this.xPercent = -this.xPercent;\r\n        }\r\n\r\n        // Find elements\r\n        this.imgs = [...this.rootElement.querySelectorAll('img')];\r\n\r\n        // Add block rootElement in the observer\r\n        this.observe();\r\n    }\r\n\r\n    protected observe() {\r\n        this.observer.observe(this.rootElement);\r\n    }\r\n\r\n    protected unobserve() {\r\n        this.observer.unobserve(this.rootElement);\r\n    }\r\n\r\n    protected onScreen() {\r\n        animate({\r\n            target: this.rootElement,\r\n            transform: [`translateX(${this.xPercent}%)`, \"translateX(0%)\"],\r\n            opacity: [0, 1],\r\n            duration: 1500,\r\n            delay: 0.15,\r\n            easing: \"out-quint\",\r\n            onfinish(el) {\r\n                el.style.transform = \"translateX(0%)\";\r\n                el.style.opacity = \"1\";\r\n            },\r\n        });\r\n    }\r\n\r\n    protected offScreen() {\r\n        this.rootElement.style.transform = `translateX(${this.xPercent}%)`;\r\n        this.rootElement.style.opacity = \"0\";\r\n    }\r\n\r\n    public onIntersectionCallback(entries) {\r\n        if (!this.inView) {\r\n            for (let entry of entries) {\r\n                if (entry.intersectionRatio > 0) {\r\n                    this.onScreen();\r\n                    this.inView = true;\r\n                } else {\r\n                    this.offScreen();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public stopEvents() {\r\n        this.unobserve();\r\n    }\r\n}\r\n","// Based on [joshwcomeau.com/gatsby/dark-mode/]\r\nexport const getTheme = (): string | null => {\r\n    const theme = window.localStorage.getItem('theme');\r\n    // If the user has explicitly chosen light or dark,\r\n    // let's use it. Otherwise, this value will be null.\r\n    if (typeof theme === 'string') return theme;\r\n\r\n    // If they are using a browser/OS that doesn't support\r\n    // color themes, let's default to 'light'.\r\n    return null;\r\n};\r\n\r\nexport const setTheme = (theme: string): void => {\r\n    // If the user has explicitly chosen light or dark, store the default theme\r\n    if (typeof theme === 'string') window.localStorage.setItem('theme', theme);\r\n};\r\n\r\nexport const mediaTheme = (): string | null => {\r\n    // If they haven't been explicitly set, let's check the media query\r\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const hasMediaQueryPreference = typeof mql.matches === 'boolean';\r\n    if (hasMediaQueryPreference) return mql.matches ? 'dark' : 'light';\r\n    return null;\r\n};","import { Service } from \"../../src/api\";\r\nimport { animate } from \"walijs/src/api\";\r\n\r\nexport class Splashscreen extends Service {\r\n    protected rootElement: HTMLElement;\r\n    protected innerEl: HTMLElement;\r\n    protected bgEl: HTMLElement;\r\n    protected minimalDuration: number = 1000; // ms\r\n\r\n    public boot() {\r\n        // Elements\r\n        this.rootElement = document.getElementById('splashscreen');\r\n        if (this.rootElement) {\r\n            this.innerEl = this.rootElement.querySelector('.splashscreen-inner');\r\n            this.bgEl = this.rootElement.querySelector('.splashscreen-bg');\r\n        }\r\n\r\n        this.rootElement.style.visibility = \"visible\";\r\n        this.rootElement.style.pointerEvents = \"auto\";\r\n    }\r\n\r\n    public initEvents() {\r\n        if (this.rootElement) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    public async hide() {\r\n        await new Promise(resolve => {\r\n            window.setTimeout(() => {\r\n                this.EventEmitter.emit(\"BEFORE_SPLASHSCREEN_HIDE\");\r\n                resolve();\r\n            }, this.minimalDuration);\r\n        });\r\n\r\n        await new Promise(async resolve => {\r\n            animate({\r\n                target: this.innerEl,\r\n                opacity: [1, 0],\r\n                autoplay: true,\r\n                duration: 500,\r\n                onfinish(el) {\r\n                    el.style.opacity = \"0\";\r\n                }\r\n            });\r\n\r\n            this.EventEmitter.emit(\"START_SPLASHSCREEN_HIDE\");\r\n\r\n            await animate({\r\n                target: this.rootElement,\r\n                transform: [\"translateY(0%)\", \"translateY(100%)\"],\r\n                duration: 1200,\r\n                easing: \"in-out-cubic\" // in-out-cubic\r\n            });\r\n\r\n            this.rootElement.style.transform = \"translateY(100%)\";\r\n            this.rootElement.style.visibility = \"hidden\";\r\n            this.rootElement.style.pointerEvents = \"none\";\r\n            this.EventEmitter.emit(\"AFTER_SPLASHSCREEN_HIDE\");\r\n\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\nexport class IntroAnimation extends Service {\r\n    protected elements: Array<Element>;\r\n    protected rootElement: HTMLElement;\r\n\r\n    public boot() {\r\n        // Elements\r\n        this.elements = [...document.querySelectorAll('[data-block=\"IntroBlock\"]')];\r\n\r\n        // Bind methods\r\n        this.prepareToShow = this.prepareToShow.bind(this);\r\n        this.show = this.show.bind(this);\r\n    }\r\n\r\n    public initEvents() {\r\n        this.EventEmitter.on(\"BEFORE_SPLASHSCREEN_HIDE\", this.prepareToShow);\r\n        this.EventEmitter.on(\"START_SPLASHSCREEN_HIDE\", this.show);\r\n    }\r\n\r\n    public stopEvents() {\r\n        this.EventEmitter.off(\"BEFORE_SPLASHSCREEN_HIDE\", this.prepareToShow);\r\n        this.EventEmitter.off(\"START_SPLASHSCREEN_HIDE\", this.show);\r\n    }\r\n\r\n    public prepareToShow() {\r\n        for (let el of this.elements) {\r\n            (el as HTMLElement).style.transform = \"translateY(200px)\";\r\n            (el as HTMLElement).style.opacity = '0';\r\n        }\r\n    }\r\n\r\n    public show() {\r\n        animate({\r\n            target: (this.elements as HTMLElement[]),\r\n            keyframes: [\r\n                { transform: \"translateY(200px)\", opacity: 0 },\r\n                { transform: \"translateY(0px)\", opacity: 1 },\r\n            ],\r\n            // @ts-ignore\r\n            delay(i: number) {\r\n                return 200 * (i + 1);\r\n            },\r\n            onfinish(el: { style: { transform: string; opacity: string; }; }) {\r\n                el.style.transform = \"translateY(0px)\";\r\n                el.style.opacity = \"1\";\r\n            },\r\n            easing: \"out-cubic\",\r\n            duration: 500\r\n        });\r\n    }\r\n}","import { Transition, ITransitionData } from \"../../src/api\";\r\nimport { animate } from \"walijs/src/api\";\r\n\r\n//== Transitions\r\nexport class Fade extends Transition {\r\n    protected name = \"default\";\r\n    protected duration = 500;\r\n\r\n    out({ from }: ITransitionData) {\r\n        let { duration } = this;\r\n        let fromWrapper = from.getWrapper();\r\n        window.scroll({\r\n            top: 0,\r\n            behavior: 'smooth'  // 👈 \r\n        });\r\n\r\n        return new Promise(async resolve => {\r\n            await animate({\r\n                target: fromWrapper,\r\n                opacity: [1, 0],\r\n                duration,\r\n                onfinish(el: { style: { opacity: string; }; }) {\r\n                    el.style.opacity = '0';\r\n                }\r\n            });\r\n\r\n            window.scrollTo(0, 0);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    in({ to }: ITransitionData) {\r\n        let { duration } = this;\r\n        let toWrapper = to.getWrapper();\r\n        toWrapper.style.transform = \"translateX(0%)\";\r\n        return animate({\r\n            target: toWrapper,\r\n            opacity: [0, 1],\r\n            duration,\r\n            onfinish(el: { style: { opacity: string; }; }) {\r\n                el.style.opacity = '1';\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class Slide extends Transition {\r\n    protected name = \"slide\";\r\n    protected duration = 500;\r\n    protected direction: string = \"right\";\r\n\r\n    out({ from }: ITransitionData) {\r\n        let { duration, direction } = this;\r\n        let fromWrapper = from.getWrapper();\r\n        window.scroll({\r\n            top: 0,\r\n            behavior: 'smooth'  // 👈 \r\n        });\r\n        return animate({\r\n            target: fromWrapper,\r\n            keyframes: [\r\n                { transform: \"translateX(0%)\", opacity: 1 },\r\n                { transform: `translateX(${direction === \"left\" ? \"-\" : \"\"}25%)`, opacity: 0 },\r\n            ],\r\n            duration,\r\n            easing: \"in-quint\",\r\n            onfinish: (el: { style: { opacity: string; transform: string; }; }) => {\r\n                el.style.opacity = '0';\r\n                el.style.transform = `translateX(${direction === \"left\" ? \"-\" : \"\"}25%)`;\r\n            }\r\n        });\r\n    }\r\n\r\n    in({ to }: ITransitionData) {\r\n        let { duration } = this;\r\n        let toWrapper = to.getWrapper();\r\n        return animate({\r\n            target: toWrapper,\r\n            keyframes: [\r\n                { transform: `translateX(${this.direction === \"right\" ? \"-\" : \"\"}25%)`, opacity: 0 },\r\n                { transform: \"translateX(0%)\", opacity: 1 },\r\n            ],\r\n            duration,\r\n            easing: \"out-quint\",\r\n            onfinish(el: { style: { opacity: string; transform: string; }; }) {\r\n                el.style.opacity = '1';\r\n                el.style.transform = `translateX(0%)`;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class SlideLeft extends Slide {\r\n    protected name = \"slide-left\";\r\n    protected duration = 500;\r\n    protected direction: string = \"left\";\r\n}\r\n\r\nexport class SlideRight extends Slide {\r\n    protected name = \"slide-right\";\r\n    protected duration = 500;\r\n    protected direction: string = \"right\";\r\n}\r\n\r\nexport class BigTransition extends Transition {\r\n    protected name = \"big\";\r\n    protected delay = 200;\r\n    protected durationPerAnimation = 700;\r\n    protected mainElement: HTMLElement;\r\n    protected verticalElements: HTMLDivElement[];\r\n    protected horizontalElements: HTMLDivElement[];\r\n    protected maxLength: number;\r\n    protected spinnerElement: HTMLElement;\r\n\r\n    public boot() {\r\n        this.mainElement = document.getElementById('big-transition');\r\n        this.spinnerElement = this.mainElement.querySelector('.spinner');\r\n        this.horizontalElements = [...this.mainElement.querySelector('#big-transition-horizontal').querySelectorAll('div')];\r\n        this.maxLength = this.horizontalElements.length;\r\n    }\r\n\r\n    out({ from }: ITransitionData) {\r\n        let { durationPerAnimation: duration, delay } = this;\r\n        let fromWrapper = from.getWrapper();\r\n        window.scroll({\r\n            top: 0,\r\n            behavior: 'smooth'  // 👈 \r\n        });\r\n\r\n        return new Promise(async resolve => {\r\n            animate({\r\n                target: fromWrapper,\r\n                opacity: [1, 0],\r\n                duration,\r\n                onfinish(el: { style: { opacity: string; }; }) {\r\n                    el.style.opacity = '0';\r\n                }\r\n            });\r\n\r\n            this.mainElement.style.opacity = \"1\";\r\n            this.mainElement.style.visibility = \"visible\";\r\n\r\n            await animate({\r\n                target: this.horizontalElements,\r\n                keyframes: [\r\n                    { transform: \"scaleX(0)\" },\r\n                    { transform: \"scaleX(1)\" },\r\n                ],\r\n                // @ts-ignore\r\n                delay(i: number) {\r\n                    return delay * (i + 1);\r\n                },\r\n                onfinish(el: { style: { transform: string; }; }) {\r\n                    el.style.transform = `scaleX(1)`;\r\n                },\r\n                easing: \"out-cubic\",\r\n                duration: 500\r\n            });\r\n\r\n            let loaderDuration = 500;\r\n            this.spinnerElement.style.visibility = \"visible\";\r\n\r\n            let options = await animate({\r\n                target: this.spinnerElement,\r\n                opacity: [0, 1],\r\n                duration: loaderDuration,\r\n                onfinish(el: { style: { opacity: string; }; }) {\r\n                    el.style.opacity = `1`;\r\n                },\r\n            });\r\n\r\n            await animate({\r\n                options,\r\n                opacity: [1, 0],\r\n                onfinish(el: { style: { opacity: string; }; }) {\r\n                    el.style.opacity = `0`;\r\n                },\r\n                delay: 1500\r\n            });\r\n\r\n            this.spinnerElement.style.visibility = \"hidden\";\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    in({ to }: ITransitionData) {\r\n        let { durationPerAnimation: duration, delay } = this;\r\n        let toWrapper = to.getWrapper();\r\n        toWrapper.style.transform = \"translateX(0%)\";\r\n        return new Promise(async resolve => {\r\n            animate({\r\n                target: toWrapper,\r\n                opacity: [0, 1],\r\n                onfinish(el: { style: { opacity: string; }; }) {\r\n                    el.style.opacity = `1`;\r\n                },\r\n                duration\r\n            });\r\n\r\n            await animate({\r\n                target: this.horizontalElements,\r\n                keyframes: [\r\n                    { transform: \"scaleX(1)\" },\r\n                    { transform: \"scaleX(0)\" },\r\n                ],\r\n                // @ts-ignore\r\n                delay(i: number) {\r\n                    return delay * (i + 1);\r\n                },\r\n                onfinish(el: { style: { transform: string; }; }) {\r\n                    el.style.transform = `scaleX(0)`;\r\n                },\r\n                easing: \"out-cubic\",\r\n                duration: 500\r\n            });\r\n\r\n            this.mainElement.style.opacity = \"0\";\r\n            this.mainElement.style.visibility = \"hidden\";\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\n","import { InViewBlock } from \"./blocks\";\r\nimport { getTheme, setTheme, mediaTheme } from \"./theme\";\r\nimport { Splashscreen, IntroAnimation } from \"./services\";\r\nimport { PJAX, App, _URL, BlockIntent, Router } from \"../../src/api\";\r\nimport { Fade, Slide, SlideLeft, SlideRight, BigTransition } from \"./transitions\";\r\n\r\nconst html = document.querySelector(\"html\");\r\ntry {\r\n    let theme = getTheme();\r\n    if (theme === null) theme = mediaTheme();\r\n    theme && html.setAttribute(\"theme\", theme);\r\n} catch (e) {\r\n    console.warn(\"Theming isn't available on this browser.\");\r\n}\r\n\r\n// Get theme from html tag, if it has a theme or get it from localStorage\r\nlet themeGet = () => {\r\n    let themeAttr = html.getAttribute(\"theme\");\r\n    if (themeAttr && themeAttr.length) {\r\n        return themeAttr;\r\n    }\r\n\r\n    return getTheme();\r\n};\r\n\r\n// Set theme in localStorage, as well as in the html tag\r\nlet themeSet = (theme: string) => {\r\n    html.setAttribute(\"theme\", theme);\r\n    setTheme(theme);\r\n};\r\n\r\n// On theme switcher button click (mouseup is a tiny bit more efficient) toggle the theme between dark and light mode\r\n// on(_themeSwitcher, \"mouseup\", () => {\r\n//     themeSet(themeGet() === \"dark\" ? \"light\" : \"dark\");\r\n// });\r\n\r\nwindow.matchMedia('(prefers-color-scheme: dark)').addListener(e => {\r\n    themeSet(e.matches ? \"dark\" : \"light\");\r\n});\r\n\r\nconst app = new App();\r\nconst router = new Router();\r\napp\r\n    .add(\"service\", new PJAX())\r\n    .add(\"service\", new Splashscreen())\r\n    .add(\"service\", new IntroAnimation())\r\n    .add(\"service\", router)\r\n\r\n    .add(\"transition\", new Fade())\r\n    .add(\"transition\", new BigTransition())\r\n    .add(\"transition\", new Slide())\r\n    .add(\"transition\", new SlideLeft())\r\n    .add(\"transition\", new SlideRight())\r\n\r\n    .add(\"block\", new BlockIntent(\"InViewBlock\", InViewBlock));\r\n\r\n(async () => {\r\n\r\n    try {\r\n        await app.boot();\r\n    } catch (err) {\r\n        console.warn(\"App boot failed\", err);\r\n    }\r\n\r\n    let navLink = document.querySelectorAll(\".navbar .nav-link\");\r\n    for (let item of navLink) {\r\n        let navItem = (item as HTMLAnchorElement);\r\n        router.add({\r\n            path: navItem.getAttribute(\"data-path\") || navItem.pathname,\r\n            method() {\r\n                let isActive = navItem.classList.contains(\"active\");\r\n                if (!isActive) navItem.classList.add(\"active\");\r\n                for (let nav of navLink) {\r\n                    if (nav !== navItem)\r\n                        nav.classList.remove(\"active\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n})();"],"names":[],"mappings":"AAcO,MAAM,eAAe,GAAY;IACpC,WAAW,EAAE,SAAS;IACtB,cAAc,EAAE,cAAc;IAC9B,cAAc,EAAE,aAAa;IAC7B,OAAO,EAAE;QACL,CAAC,WAAW,EAAE,MAAM,CAAC;KACxB;IACD,eAAe,EAAE,gBAAgB;IACjC,cAAc,EAAE,eAAe;IAC/B,cAAc,EAAE,YAAY;IAC5B,SAAS,EAAE,OAAO;IAClB,OAAO,EAAE,KAAK;CACjB,CAAC;AAIF;;;;;;MAMa,MAAM;;;;;;;IAgBf,YAAY,MAAe;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,eAAe,EAAE,EAAE,MAAM,CAAC,CAAC;KAC/D;;;;;;;;;IAUM,MAAM,CAAC,KAAa,EAAE,WAAoB,IAAI;QACjD,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,IAAI,IAAI,GAAG,OAAO,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,EAAE,IAAI,KAAK,EAAE,CAAC;QACxD,OAAO,QAAQ,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC;KACxC;;;;;;;;;IAUM,SAAS,CAAC,KAAkB,EAAE,WAAoB,IAAI;QACzD,IAAI,OAAO,KAAK,KAAK,QAAQ;YACzB,OAAO,IAAI,CAAC,MAAM,CAAC;QAEvB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,OAAO,MAAM,KAAK,QAAQ;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACzC,OAAO,MAAM,CAAC;KACjB;;;ACrFL;;;;;;;;MAQa,OAAO;;;;;;;IAgBnB,YAAY,KAAqB;QAChC,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;KAC1B;;;;;;;IAQM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;KAChB;;;;;;;;IASM,GAAG,CAAC,GAAM;QAChB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACzB;;;;;;;IAQM,IAAI;QACV,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;KAC5B;;;;;;;IAQM,MAAM;QACZ,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;KAC9B;;;;;;;;;IAUM,GAAG,CAAC,GAAM,EAAE,KAAQ;QAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC;KACZ;;;;;;;;IASM,GAAG,CAAC,KAAQ;;QAElB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAS,EAAE,KAAK,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;KACZ;;;;;;;IAQD,IAAW,IAAI;QACd,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;KACrB;;;;;;;;IASM,IAAI,CAAC,WAAmB,CAAC;QAC/B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACrB;;;;;;;IAQM,IAAI;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACpB;;;;;;;;IASM,MAAM,CAAC,GAAM;QACnB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC;KACZ;;;;;;;IAQM,KAAK;QACX,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACjB,OAAO,IAAI,CAAC;KACZ;;;;;;;;IASM,GAAG,CAAC,GAAM;QAChB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACzB;;;;;;;IAQM,OAAO;QACb,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;KAC1B;;;;;;;;;IAUM,OAAO,CACb,WAAgB,CAAC,GAAG,IAAS,QAAc,EAC3C,OAAgB;QAEhB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC;KACZ;;;;;;;IAQM,CAAC,MAAM,CAAC,QAAQ,CAAC;QACvB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;KACtB;;;;;;;;;IAUM,UAAU,CAAC,MAAc,EAAE,GAAG,IAAS;QAC7C,IAAI,CAAC,OAAO,CAAC,CAAC,IAAO;YACpB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;SACtB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACZ;;;;;;;;;IAUM,MAAM,eAAe,CAAC,MAAc,EAAE,GAAG,IAAS;QACxD,WAAW,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE;YACpC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC;KACZ;;;AC5NF;;;;;;MAMa,WAAW;;;;;;IAepB,iBAAiB;;;;;;;;;IAUP,SAAS,CAAC,KAAkB,EAAE,QAAkB;QACtD,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;KAClD;;;;;;;;IAQM,OAAO,MAAW;;;;;;;;IASlB,QAAQ,CAAC,OAAyB;QACrC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;KACf;CACJ;AAED;;;;;;;;;MASa,eAA0C,SAAQ,OAAa;;;;;;;IAgBxE,YAAY,GAAQ;QAChB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAClB;;;;;;;;;IAUM,GAAG,CAAC,GAAM,EAAE,KAAQ;QACvB,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACtB,OAAO,KAAK,CAAC,QAAQ,KAAK,UAAU,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC;KACf;;;;;;;IAQM,MAAM;QACT,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB;;;;;;;;IASM,SAAS,CAAC,GAAG,IAAS;QACzB,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC;KACtC;;;AC9HL;;;;;;;;;MASa,IAAK,SAAQ,GAAG;;;;;;;;IAQzB,YAAY,MAAW,MAAM,CAAC,QAAQ,CAAC,IAAI;QACvC,KAAK,CAAC,GAAG,YAAY,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACtE;;;;;;;IAQM,WAAW;QACd,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;KACzC;;;;;;;IAQM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC7B;;;;;;;IAQM,KAAK;QACR,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;KACzD;;;;;;;IAQM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;;;;;IASM,OAAO,CAAC,GAAS;QACpB,OAAO,IAAI,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;KACtC;;;;;;;;;;IAWD,OAAO,KAAK,CAAC,CAAgB,EAAE,CAAgB;QAC3C,IAAI,IAAI,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,IAAI,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC7B;CACJ;AAED;;;AAGO,MAAM,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;AAC1B,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,EAAE;;ACtE7C;;;;;;;MAOa,MAAM;;;;;;;;IAWlB,YAAY,IAAY,MAAM,CAAC,OAAO,EAAE,IAAY,MAAM,CAAC,OAAO;QACjE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KACX;CACD;AAED;;;;;;MAMa,KAAK;;;;;;;;;;;;;;IAuBjB,YAAY,QAAgB;QAC3B,GAAG,EAAE,IAAI,IAAI,EAAE;QACf,KAAK,EAAE,CAAC;QACR,UAAU,EAAE,SAAS;QACrB,IAAI,EAAE;YACL,MAAM,EAAE,IAAI,MAAM,EAAE;YACpB,OAAO,EAAE,gBAAgB;SACzB;KACD;QACA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;KACxB;;;;;;;;IASM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACzB,OAAO,IAAI,CAAC;KACZ;;;;;;;IAQM,MAAM;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;KACtB;;;;;;;IAQM,cAAc;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;KACpC;;;;;;;IAQM,aAAa;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;KAC7B;;;;;;;IAQM,OAAO;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;KACvB;;;;;;;IAQM,MAAM;QACZ,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,GAAW,IAAI,CAAC,KAAK,CAAC;QAC5D,OAAO;YACN,GAAG,EAAE,GAAG,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI;SAC/C,CAAC;KACF;CACD;AAED;;;;;;;MAOa,cAAe,SAAQ,OAAsB;;;;;;;IAOzD;QACC,KAAK,EAAE,CAAC;KACR;;;;;;;;IASM,GAAG,CAAC,KAAY;QACtB,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjB,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC;KACZ;;;;;;;;IASM,QAAQ,CAAC,KAAqB;QACpC,IAAI,KAAK,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9D,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAChB,OAAO,IAAI,CAAC;KACZ;;;AC3MF;;;AAGO,MAAM,MAAM,GAAc,IAAI,SAAS,EAAE,CAAC;AAEjD;;;;;;MAMa,IAAK,SAAQ,WAAW;;;;;;;;IA8DjC,YAAY,MAAY,IAAI,IAAI,EAAE,EAAE,MAAyB,QAAQ;QACjE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACzB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;SACvD;;YAAM,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,QAAQ,CAAC;QAElC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;;;;;;;IAQM,OAAO;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;KACzE;;;;;;;IAQM,MAAM;QACT,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB;;;;;;;IAQM,WAAW;QACd,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;KAC5B;;;;;;;IAQM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;;;;IAQM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;;;;;;IAQM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;;;;;;IAQM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;;;IAQM,MAAM;QACT,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB;CACJ;AAED;;;;;;;MAOa,WAAY,SAAQ,eAA6B;;;;;;;IAgB1D,YAAY,GAAQ;QAChB,KAAK,CAAC,GAAG,CAAC,CAAC;;;;;;;;QATL,YAAO,GAAqC,IAAI,OAAO,EAAE,CAAC;QAUhE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;KACnC;;;;;;;IAQM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;;;;IASM,MAAM,IAAI,CAAC,OAAsB,IAAI,IAAI,EAAE;QAC9C,IAAI,GAAG,GAAS,IAAI,YAAY,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,SAAS,GAAW,GAAG,CAAC,WAAW,EAAE,CAAC;QAC1C,IAAI,IAAU,EAAE,OAAwB,CAAC;QACzC,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YACrB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAC3B,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YAC9B,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SACxC;;YAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAE7C,IAAI,QAAQ,GAAG,MAAM,OAAO,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAE/B,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC;KACf;;;;;;;;IASM,MAAM,OAAO,CAAC,GAAW;QAC5B,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC;YAC9B,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAC7B,MAAM,oBAAoB,CAAC;SAC9B,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QAE9B,IAAI;YACA,IAAI,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;gBAC5B,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE,KAAK;gBACb,OAAO,EAAE,OAAO;gBAChB,KAAK,EAAE,SAAS;gBAChB,WAAW,EAAE,aAAa;aAC7B,CAAC,CAAC;YAEH,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAC7B,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,EAAE;gBACjD,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;aAChC;YAED,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,IAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;YACnE,MAAM,GAAG,CAAC;SACb;QAAC,OAAO,GAAG,EAAE;YACV,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAC7B,MAAM,GAAG,CAAC;SACb;KACJ;;;ACvQL;;;;;;MAMa,QAAQ;;;;;;;IAgBjB,YAAY,EACR,QAAQ,GAAG,SAAS,EACpB,KAAK,GAAG,IAAI,EACZ,IAAI,GAAG,OAAO,GACN;QACR,IAAI,CAAC,QAAQ,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KAC7C;;;;;;;IAQM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;KACjC;;;;;;;IAQM,QAAQ;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;KAC9B;;;;;;;IAQM,YAAY;QACf,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;KAC7B;;;;;;;IAQM,MAAM;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;CACJ;AAED;;;;;;;MAOa,KAAM,SAAQ,OAAyB;;;;;;;IAgBhD,YAAY,OAAe,OAAO;QAC9B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;CACJ;AAID;;;;;;;MAOa,YAAa,SAAQ,OAAsB;;;;;;IAMpD;QACI,KAAK,EAAE,CAAC;KACX;;;;;;;;IASM,QAAQ,CAAC,IAAY;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YAChC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACzB;QAED,OAAO,KAAK,CAAC;KAChB;;;;;;;;;;IAUM,WAAW,CACd,IAAY,EACZ,QAA0B,EAC1B,KAAa;QAEb,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAChC,KAAK,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACnD,OAAO,KAAK,CAAC;KAChB;;;;;;;;;;IAWM,EAAE,CACL,MAAkB,EAClB,QAA2B,EAC3B,KAAc;;QAGd,IAAI,OAAO,MAAM,IAAI,WAAW;YAAE,OAAO,IAAI,CAAC;;QAG9C,IAAI,OAAO,MAAM,IAAI,QAAQ;YAAE,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE5D,IAAI,KAAa,CAAC;QAClB,IAAI,SAA2B,CAAC;QAChC,IAAI,MAAc,CAAC;;QAGnB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG;;;;YAK3B,IAAI,OAAO,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACrD,KAAK,GAAG,GAAG,CAAC;gBACZ,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;gBACxB,MAAM,GAAG,QAAQ,CAAC;aACrB;iBAAM;gBACH,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;gBACpB,SAAS,GAAG,QAAQ,CAAC;gBACrB,MAAM,GAAG,KAAK,CAAC;aAClB;YAED,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;SAC9C,EAAE,IAAI,CAAC,CAAC;QACT,OAAO,IAAI,CAAC;KACf;;;;;;;;;;IAWM,cAAc,CACjB,IAAY,EACZ,QAA0B,EAC1B,KAAa;QAEb,IAAI,KAAK,GAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEvC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,GAAG,CAAC,EACL,GAAG,GAAW,KAAK,CAAC,IAAI,EACxB,KAAe,CAAC;YACpB,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YACvD,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACjB,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IACI,KAAK,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,WAAW,EAAE;oBAC9C,KAAK,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC,QAAQ,EAAE;oBAExC,MAAM;aACb;YAED,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACnB;QACD,OAAO,KAAK,CAAC;KAChB;;;;;;;;;;IAWM,GAAG,CACN,MAAkB,EAClB,QAA2B,EAC3B,KAAc;;QAGd,IAAI,OAAO,MAAM,IAAI,WAAW;YAAE,OAAO,IAAI,CAAC;;QAG9C,IAAI,OAAO,MAAM,IAAI,QAAQ;YAAE,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE5D,IAAI,KAAa,CAAC;QAClB,IAAI,SAA2B,CAAC;QAChC,IAAI,MAAc,CAAC;;QAGnB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG;;;;YAK5B,IAAI,OAAO,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACrD,KAAK,GAAG,GAAG,CAAC;gBACZ,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;gBACxB,MAAM,GAAG,QAAQ,CAAC;aACrB;iBAAM;gBACH,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;gBACpB,SAAS,GAAG,QAAQ,CAAC;gBACrB,MAAM,GAAG,KAAK,CAAC;aAClB;YAED,IAAI,SAAS,EAAE;gBACX,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;aACjD;;gBAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC7B,EAAE,IAAI,CAAC,CAAC;QACT,OAAO,IAAI,CAAC;KACf;;;;;;;;;;IAWM,IAAI,CACP,MAAkB,EAClB,QAA0B,EAC1B,KAAa;;QAGb,IAAI,OAAO,MAAM,IAAI,WAAW;YAAE,OAAO,IAAI,CAAC;;QAG9C,IAAI,OAAO,MAAM,IAAI,QAAQ;YAAE,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE5D,IAAI,MAAM,GAAqB,CAAC,GAAG,IAAI;YACnC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;YAChC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAC/B,CAAC;QAEF,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC;KACf;;;;;;;;;IAUM,IAAI,CACP,MAA2B,EAC3B,GAAG,IAAS;;QAGZ,IAAI,OAAO,MAAM,IAAI,WAAW;YAAE,OAAO,IAAI,CAAC;;QAG9C,IAAI,OAAO,MAAM,IAAI,QAAQ;YAAE,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;QAG5D,MAAM,CAAC,OAAO,CAAC,CAAC,KAAa;YACzB,IAAI,SAAS,GAAU,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAE5C,MAAM,WAAW,GAAqB,IAAI,WAAW,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAA;YAC9E,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YAElC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAkB;gBACjC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAc,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACvD,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN,EAAE,IAAI,CAAC,CAAC;QACT,OAAO,IAAI,CAAC;KACf;;;ACxVL;;;;;;MAMa,OAAQ,SAAQ,WAAW;;;;;;IAmDhC,OAAO;QACb,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;QACrC,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;QACvC,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,cAAc,EAAE,CAAC;KAC9C;;IAGM,IAAI,MAAY;;IAGhB,UAAU,MAAY;;IAGtB,UAAU,MAAY;;IAGtB,IAAI;QACV,IAAI,CAAC,UAAU,EAAE,CAAC;KAClB;CACD;AAED;;;;;;;MAOa,cAAe,SAAQ,eAAgC;;;;;;;IAOnE,YAAY,GAAQ;QACnB,KAAK,CAAC,GAAG,CAAC,CAAC;KACX;;;;;;;IAQM,MAAM,IAAI;QAChB,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;KACnC;;;;;;;IAQM,UAAU;QAChB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;KACZ;;;;;;;IAQM,UAAU;QAChB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;KACZ;;;;;;;IAQM,IAAI;QACV,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;KACZ;;;AC7HF;;;;;;MAMa,UAAW,SAAQ,WAAW;;;;;;IA0CvC;QAAgB,KAAK,EAAE,CAAC;;;;;;;;QAlCd,SAAI,GAAW,YAAY,CAAC;KAkCZ;;;;;;;;;;;;IAanB,IAAI,CAAC,EACR,OAAO,EACP,OAAO,EACP,OAAO,EACG;QACV,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,OAAO,IAAI,CAAC;KACf;;IAGM,IAAI,MAAY;;IAGhB,UAAU,MAAY;;IAGtB,UAAU,MAAY;;IAGtB,IAAI;QACP,IAAI,CAAC,UAAU,EAAE,CAAC;KACrB;;;;;;;IAQM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;;;;;;IAQM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;;;IAQM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;;;IAQM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;;;;IASM,GAAG,CAAC,EAAE,IAAI,EAAmB;QAChC,IAAI,EAAE,CAAC;KACV;;;;;;;IAQM,EAAE,CAAC,EAAE,IAAI,EAAmB;QAC/B,IAAI,EAAE,CAAC;KACV;;;;;;;IAQM,MAAM,KAAK,CAAC,YAA0B;QACzC,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAC5C,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAC1C,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEzC,OAAO,IAAI,OAAO,CAAC,OAAM,MAAM;YAC3B,YAAY,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YAC3C,MAAM,IAAI,OAAO,CAAC,IAAI;gBAClB,IAAI,SAAS,GAAiB,IAAI,CAAC,GAAG,CAAC;oBACnC,IAAI,EAAE,IAAI,CAAC,OAAO;oBAClB,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,IAAI;iBACP,CAAC,CAAC;gBAEH,IAAI,SAAS,CAAC,IAAI;oBACd,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC5B,CAAC,CAAC;YAEH,YAAY,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YAE1C,MAAM,IAAI,OAAO,CAAC,IAAI;gBAClB,WAAW,CAAC,qBAAqB,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;gBAC5D,WAAW,CAAC,MAAM,EAAE,CAAC;gBACrB,IAAI,EAAE,CAAC;aACV,CAAC,CAAC;YAEH,YAAY,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YAE1C,MAAM,IAAI,OAAO,CAAC,IAAI;gBAClB,IAAI,QAAQ,GAAiB,IAAI,CAAC,EAAE,CAAC;oBACjC,IAAI,EAAE,IAAI,CAAC,OAAO;oBAClB,EAAE,EAAE,IAAI,CAAC,OAAO;oBAChB,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,IAAI;iBACP,CAAC,CAAC;gBAEH,IAAI,QAAQ,CAAC,IAAI;oBACb,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B,CAAC,CAAC;YAEH,YAAY,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACzC,MAAM,EAAE,CAAC;SACZ,CAAC,CAAC;KACN;CACJ;AAED;;;;;;;MAOa,iBAAkB,SAAQ,eAAmC;;;;;;;IAOtE,YAAY,GAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;;;;;;;;IAS9B,GAAG,CAAC,KAAiB;QACxB,IAAI,IAAI,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC;KACf;;;;;;;;IASM,MAAM,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAoE;QACnH,IAAI,UAAU,GAAe,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5C,UAAU,CAAC,IAAI,CAAC;YACZ,OAAO;YACP,OAAO;YACP,OAAO;SACV,CAAC,CAAC;QAEH,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,CAAC;QAC9C,OAAO,MAAM,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;KAC/C;;;;;;;IAQM,UAAU;QACb,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;KACf;;;;;;;IAQM,UAAU;QACb,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;KACf;;;AC9RL;;;;;;;MAOa,KAAM,SAAQ,OAAO;;;;;;;;;;IA8CvB,IAAI,CAAC,IAAa,EAAE,WAAyB,EAAE,QAAiB,EAAE,KAAc;QACnF,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;;;;IAQM,cAAc;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;;;IAQM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;;;;IAQM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;;;;IAQM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;CACJ;AAED;;;;;;;MAOa,WAAY,SAAQ,WAAW;;;;;;;;IA0BxC,YAAY,IAAY,EAAE,KAAmB;QACzC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;;;;IAQM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;;;;;;IAQM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;CACJ;AAED;;;;;;;MAOa,YAAa,SAAQ,eAAoC;;;;;;;IAgBlE,YAAY,GAAQ;QAChB,KAAK,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,YAAY,GAAG,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC;KAChD;;;;;;IAOM,IAAI;QACP,IAAI,CAAC,OAAO,CAAC,CAAC,MAAmB;YAC7B,IAAI,IAAI,GAAW,MAAM,CAAC,OAAO,EAAE,CAAC;YACpC,IAAI,KAAK,GAAiB,MAAM,CAAC,QAAQ,EAAE,CAAC;YAC5C,IAAI,QAAQ,GAAW,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC;YAC3E,IAAI,YAAY,GAAW,CAAC,GAAG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAI,WAAW,GAAU,IAAI,KAAK,EAAE,CAAC;gBACrC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAgB,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;aACzC;SACJ,CAAC,CAAC;KACN;;;;;;;IAQM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC5B;;;;;;;IAQM,MAAM,IAAI;QACb,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;KACnD;;;;;;IAOM,OAAO;QACV,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,CAAC;QAChD,YAAY,CAAC,EAAE,CAAC,uBAAuB,EAAE;YACrC,IAAI,CAAC,IAAI,EAAE,CAAC;SACf,CAAC,CAAC;QAEH,YAAY,CAAC,EAAE,CAAC,qBAAqB,EAAE;YACnC,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,IAAI,EAAE,CAAC;;SAEf,CAAC,CAAC;KACN;;;;;;;IAQM,UAAU;QACb,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;KACf;;;;;;;IAQM,UAAU;QACb,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC;KACf;;;;;;;IAQM,IAAI;QACP,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC;KACf;;;ACpRL;;;;;;MAMa,GAAG;;;;;;;IAsEZ,YAAY,SAAiB,EAAE;QAC3B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACzB;;;;;;;;IASM,QAAQ,CAAC,SAA2B,EAAE;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,YAAY,MAAM,GAAG,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;QACrE,IAAI,CAAC,WAAW,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,IAAI,OAAO,GAAG,CAAC;YACX,QAAQ,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;YAC1D,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACpC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAEd,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;QACvD,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC;KACf;;;;;;;;IASM,SAAS,CAAC,GAAG,IAAS;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC;KACzC;;;;;;;IAQM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;;;IAQM,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;;;;;;IAQM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;;;;IAQM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;;;;IAQM,cAAc;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;;;IAQM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;;;;IASM,QAAQ,CAAC,GAAW;QACvB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC/B;;;;;;;;IASM,cAAc,CAAC,GAAW;QAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACjD;;;;;;;;IASM,UAAU,CAAC,GAAW;QACzB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACjC;;;;;;;;IASM,aAAa,CAAC,GAAW;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACpC;;;;;;;;IASM,QAAQ,CAAC,GAAW;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAChC;;;;;;;;;IAUM,GAAG,CAAC,IAA2D,EAAE,GAAQ;QAC5E,QAAQ,IAAI,CAAC,WAAW,EAAE;YACtB,KAAK,SAAS;gBACV,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACrB,MAAM;YACV,KAAK,YAAY;gBACb,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACxB,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;gBACzB,MAAM;YACV;gBACI,MAAM,0BAA0B,IAAI,6DAA6D,CAAC;SACzG;QACD,OAAO,IAAI,CAAC;KACf;;;;;;;;IASM,MAAM,QAAQ,CAAC,GAAW;QAC7B,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACrC;;;;;;;;;IAUM,MAAM,IAAI,CAAC,IAAqB,EAAE,GAAQ;QAC7C,QAAQ,IAAI,CAAC,WAAW,EAAE;YACtB,KAAK,MAAM;gBACP,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACpC;gBACI,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;SACnD;KACJ;;;;;;;;IASM,QAAQ,CAAC,WAAwB;QACpC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;KACf;;;;;;;;IASM,UAAU,CAAC,OAAgB;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;KACf;;;;;;;;IASM,aAAa,CAAC,UAAsB;QACvC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACf;;;;;;;;IASM,QAAQ,CAAC,KAAqB;QACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;KACf;;;;;;;;;IAUM,GAAG,CAAC,IAAkD,EAAE,KAAU;QACrE,QAAQ,IAAI,CAAC,WAAW,EAAE;YACtB,KAAK,SAAS;gBACV,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACvB,MAAM;YACV,KAAK,YAAY;gBACb,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC1B,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACrB,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACrB,MAAM;YACV;gBACI,MAAM,0BAA0B,IAAI,6DAA6D,CAAC;SACzG;QACD,OAAO,IAAI,CAAC;KACf;;;;;;;IAQM,MAAM,IAAI;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACnB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC3B,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QAC9B,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;;;IAQM,IAAI;QACP,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QAC9B,OAAO,IAAI,CAAC;KACf;;;;;;;IAQM,WAAW;QACd,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC;KACxD;;;;;;;;;IAUM,EAAE,CAAC,MAAkB,EAAE,QAA2B;QACrD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;KACf;;;;;;;;;IAUM,GAAG,CAAC,MAAkB,EAAE,QAA2B;QACtD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC;KACf;;;;;;;;;IAUM,IAAI,CAAC,MAAc,EAAE,QAA0B;QAClD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC;KACf;;;;;;;;;IAUM,IAAI,CAAC,MAAsB,EAAE,GAAG,IAAS;QAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;KACf;;;ACtcL;;;;;;;AAOA;MACa,IAAK,SAAQ,OAAO;IAAjC;;;;;;;;;QAQc,eAAU,GAAmB,EAAE,CAAC;;;;;;;;QAShC,mBAAc,GAAY,KAAK,CAAC;;;;;;;;QAShC,oBAAe,GAAY,KAAK,CAAC;;;;;;;;QASjC,wBAAmB,GAAY,KAAK,CAAC;;;;;;;;QASrC,iBAAY,GAAY,IAAI,CAAC;;;;;;;;QAS7B,iBAAY,GAAY,KAAK,CAAC;;;;;;;;QAS9B,qBAAgB,GAAY,IAAI,CAAC;KAod9C;;;;;;;IA5cW,eAAe;QACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;KAC/B;;;;;;;IAQO,cAAc;QAClB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;KAChC;;;;;;IAOM,IAAI;QACP,IAAI,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACxC;;;;;;;;IASM,iBAAiB,CAAC,EAAqB;QAC1C,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,YAAY;YAAE,OAAO,IAAI,CAAC;QACzC,IAAI,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;QAC9E,IAAI,OAAO,cAAc,KAAK,QAAQ;YAClC,OAAO,cAAc,CAAC;QAC1B,OAAO,IAAI,CAAC;KACf;;;;;;;;;;IAWM,SAAS,CAAC,EAAqB,EAAE,KAAgC,EAAE,IAAY;QAClF,IAAI,gBAAgB,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QACjD,IAAI,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,WAAW,GACV,KAAuB,CAAC,KAAK,GAAG,CAAC;YACjC,KAAuB,CAAC,OAAO;YAC/B,KAAuB,CAAC,OAAO;YAC/B,KAAuB,CAAC,QAAQ;YAChC,KAAuB,CAAC,MAAM,CAAC;QACpC,IAAI,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAK,EAAwB,CAAC,MAAM,KAAK,QAAQ,CAAC;QACxF,IAAI,WAAW,GACX,CAAE,EAAwB,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ;aACvD,EAAwB,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,QAAQ,GAAG,OAAO,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,QAAQ,CAAC;QAC/D,IAAI,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;QAC5E,IAAI,UAAU,GAAG,OAAO,CACpB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAC/C,CAAC;QACF,IAAI,OAAO,GAAG,WAAW,IAAI,UAAU,CAAC;QACxC,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;QACxE,OAAO,EAAE,MAAM,IAAI,gBAAgB,IAAI,WAAW,IAAI,MAAM,IAAI,WAAW,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC;KAClH;;;;;;;;IASM,OAAO,CAAC,EAAqB;QAChC,IAAI,EAAE,IAAI,EAAE,CAAC,OAAO,IAAI,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC,IAAI,KAAK,QAAQ;YACnF,OAAO,EAAE,CAAC,IAAI,CAAC;QACnB,OAAO,IAAI,CAAC;KACf;;;;;;;;IASM,OAAO,CAAC,KAAgB;QAC3B,IAAI,EAAE,GAAG,KAAK,CAAC,MAA2B,CAAC;QAC3C,IAAI,IAAI,GAAW,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAEpC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE;YAChB,EAAE,GAAI,EAAkB,CAAC,UAA+B,CAAC;YACzD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SAC3B;;QAGD,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC;YAAE,OAAO;QACpD,OAAO,EAAE,CAAC;KACb;;;;;;;;;;;IAYM,OAAO,CAAC,KAAgB;QAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,EAAE;YAAE,OAAO;QAEhB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAClD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,OAAO;SACV;QAED,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;KACzC;;;;;;;;IASM,YAAY,CAAC,KAAa;QAC7B,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;;YAErB,OAAO,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC;SACzC;aAAM;YACH,IAAI,KAAK,KAAK,CAAC,EAAE;gBACb,OAAO,UAAU,CAAC;aACrB;iBAAM;;gBAEH,OAAO,KAAK,GAAG,CAAC,GAAG,MAAM,GAAG,SAAS,CAAC;aACzC;SACJ;KACJ;;;;;;;IAQM,KAAK,CAAC,IAAY;QACrB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;;;;;;;;;IAcM,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,GAAG,gBAAgB,EAAE,KAAK,EAA4D;;QAE3G,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAClD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjB,OAAO;SACV;QAED,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC9C,IAAI,UAAU,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC;QACvC,IAAI,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACzB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1B,OAAO;SACV;QAED,IAAI,cAAsB,CAAC;QAC3B,IAAI,KAAK,IAAK,KAAuB,CAAC,KAAK,EAAE;YACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;;YAG1C,IAAI,EAAE,KAAK,EAAE,GAAsB,KAAsB,CAAC;YAC1D,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;YACxC,IAAI,YAAY,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;YAC3C,IAAI,UAAU,GAAG,YAAY,GAAG,KAAK,CAAC;YAEtC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YACxC,cAAc,GAAG,UAAU,CAAC;;YAG5B,IAAI,OAAO,KAAK,UAAU,EAAE;;gBAExB,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,MAAM,CAAC,MAAM,CAAC;oBACV,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;oBACf,QAAQ,EAAE,QAAQ;iBACrB,CAAC,CAAC;aACN;;YAGD,IAAI,OAAO,KAAK,MAAM,EAAE;gBACpB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;aAClD;iBAAM,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;gBACxD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;aACrD;SACJ;aAAM;;YAEH,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAA4B,CAAC,IAAI,SAAS,CAAC;YACnF,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;YAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC;gBACpB,GAAG,EAAE,KAAK;gBACV,UAAU,EAAE,cAAc;gBAC1B,IAAI,EAAE,EAAE,MAAM,EAAE;aACnB,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,YAAY,EAAE;;gBAEnB,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC;gBACtB,MAAM,CAAC,MAAM,CAAC;oBACV,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;oBACf,QAAQ,EAAE,QAAQ;iBACrB,CAAC,CAAC;aACN;iBAAM;gBACH,MAAM,CAAC,MAAM,CAAC;oBACV,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;oBACf,QAAQ,EAAE,QAAQ;iBACrB,CAAC,CAAC;aACN;YAED,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;SACrD;QAED,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;KAC1F;;;;;;;;;IAUM,WAAW,CAAC,MAA0B,EAAE,KAAY;QACvD,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QACzB,IAAI,IAAI,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC5B,IAAI,MAAM,CAAC,OAAO,EAAE;YAChB,QAAQ,MAAM;gBACV,KAAK,MAAM;oBACP,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBACrD,MAAM;gBACV,KAAK,SAAS;oBACV,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBACxD,MAAM;aACb;SACJ;KACJ;;;;;;;;;;;IAYM,MAAM,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,GAAG,SAAS,EAAiF;QACnJ,IAAI;YACA,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,OAAa,CAAC;YAElB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;YACnE,IAAI;gBACA,IAAI;oBACA,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC5C,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;iBAC/E;gBAAC,OAAO,GAAG,EAAE;oBACV,MAAM,2BAA2B,GAAG,EAAE,CAAC;iBAC1C;;;gBAKD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;gBAC1F,IAAI;oBACA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC;oBAC3D,IAAI,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;wBAC/C,IAAI,EAAE,cAAc;wBACpB,OAAO;wBACP,OAAO;wBACP,OAAO;qBACV,CAAC,CAAC;oBAEH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;iBAC5D;gBAAC,OAAO,GAAG,EAAE;oBACV,MAAM,4BAA4B,GAAG,EAAE,CAAC;iBAC3C;gBAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;gBACxF,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;YAAC,OAAO,GAAG,EAAE;gBACV,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM,GAAG,CAAC;aACb;YAED,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;QAAC,OAAO,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,YAAY;gBAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;gBACnC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC3B;KACJ;;;;;;;IAQM,UAAU,CAAC,OAAe,MAAM,CAAC,QAAQ,CAAC,IAAI;QACjD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAE3B,IAAI,MAAM,CAAC,MAAM,EAAE;gBACf,IAAI,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBAEzC,IAAI,EAAE,EAAE;oBACJ,IAAI,EAAE,CAAC,cAAc,EAAE;wBACnB,EAAE,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;qBAC7C;yBAAM;wBACH,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,qBAAqB,EAAE,CAAC;wBAC/C,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;qBACpD;iBACJ;aACJ;SACJ;KACJ;;;;;;;;IASM,UAAU,CAAC,EAAE,QAAQ,EAAQ;QAChC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG;YACrD,OAAO,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,KAAK,QAAQ,GAAI,GAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC;SAC/F,CAAC,CAAC;KACN;;;;;;;IAQM,OAAO,CAAC,KAAgB;QAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,EAAE;YAAE,OAAO;QAEhB,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,MAAM,SAAS,GAAW,GAAG,CAAC,WAAW,EAAE,CAAC;;QAE5C,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC;YAAE,OAAO;QAEpE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;QAE1D,CAAC;YACG,IAAI;gBACA,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACpC;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;aAChD;SACJ,GAAG,CAAC;KACR;;;;;;;;;;IAWM,aAAa,CAAC,KAAoB;QACrC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;KACvE;;;;;;IAOM,UAAU;QACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACtD;;;;;;IAOM,UAAU;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;YAC9B,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACrD,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACzD;QAED,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KAC3D;;;;;;IAOM,UAAU;QACb,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;YAC9B,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACxD,QAAQ,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5D;QAED,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACpD,MAAM,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KAC9D;;;ACnhBL;;;;;;;MAOa,MAAO,SAAQ,OAAO;;;;;;;IAgB/B,YAAY,SAAmB,EAAE;QAC7B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YACxB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACnB;KACJ;;;;;;;;IASM,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAU;QAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;KACf;;;;;;;;IASM,SAAS,CAAC,IAAgB;QAC7B,IAAI,OAAO,IAAI,KAAK,QAAQ;YACxB,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;aAC5B,IAAI,IAAI,YAAY,MAAM;YAC3B,OAAO,IAAI,CAAC;QAChB,MAAM,sEAAsE,CAAC;KAChF;;;;;;;;IASM,MAAM,CAAC,KAAiB;QAC3B,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,MAAM,CAAC;KAC/D;;;;;;;;IASM,KAAK,CAAC,KAAgB;QACzB,IAAI,KAAK,GAAI,KAAsB,CAAC;QACpC,IAAI,UAAU,GAAiB;YAC3B,IAAI,EAAE,OAAO;YACb,EAAE,EAAE,OAAO;SACd,CAAC;QAEF,IAAI,IAAI,CAAC,MAAM,CAAC,KAAmB,CAAC;YAChC,UAAU,GAAG;gBACT,IAAI,EAAE,KAAmB;gBACzB,EAAE,EAAE,OAAO;aACd,CAAC;aACD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;YACrD,UAAU,GAAG,KAAK,CAAC;;YAEnB,MAAM,kFAAkF,CAAC;QAE7F,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,UAAU,CAAC;QAC9B,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAC1B,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;SACzB,CAAA;KACJ;;;;;;IAOM,KAAK;QACR,IAAI,IAAI,GAAW,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC;QAC/D,IAAI,EAAE,GAAW,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAE1C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAmB,EAAE,IAAkB;YACxD,IAAI,UAAU,GAAI,IAAI,CAAC,IAAe,CAAC;YACvC,IAAI,QAAQ,GAAI,IAAI,CAAC,EAAa,CAAC;YAEnC,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAC5C,IAAI,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAE/B,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;aAC1C;SACJ,CAAC,CAAC;KACN;;;;;;IAOM,UAAU;QACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACpD;;;AC/IE,MAAM,WAAW,GAAG,CAAC,QAAuB;IAC/C,OAAO,OAAO,QAAQ,KAAK,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAkB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACjH,CAAC,CAAC;AAEK,MAAM,UAAU,GAAG,CAAC,OAAwB;IAC/C,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;QAAE,OAAO,OAAO,CAAC;IAC3C,IAAI,OAAO,OAAO,IAAI,QAAQ,IAAI,OAAO,YAAY,IAAI;QACrD,OAAO,WAAW,CAAC,OAAO,CAAC,CAAC;IAChC,IAAI,OAAO,YAAY,QAAQ,IAAI,OAAO,YAAY,cAAc;QAChE,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,OAAO,EAAE,CAAC;AACd,CAAC,CAAC;AAKK,MAAM,YAAY,GAAG,CAAC,KAAc,EAAE,IAAiB;IAC1D,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;QAC7B,OAAO,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;KACzB;SAAM;QAAE,OAAO,KAAK,CAAC;KAAE;AAC5B,CAAC,CAAC;AAEK,MAAM,SAAS,GAAG,CAAC,GAAW,EAAE,IAAiB;IACpD,IAAI,GAAG,EAAE,KAAK,EAAE,MAAM,GAAG,EAAE,CAAC;IAC5B,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC7C,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KAC3C;IAED,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC;AAEF;AACO,MAAM,OAAO,GAAG;IACnB,MAAM,EAAE,MAAM;IACd,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,UAAU;IACjB,QAAQ,EAAE,aAAa;;IAGvB,SAAS,EAAE,qCAAqC;IAChD,UAAU,EAAE,qCAAqC;IACjD,aAAa,EAAE,uCAAuC;;IAGtD,SAAS,EAAE,uCAAuC;IAClD,UAAU,EAAE,sCAAsC;IAClD,aAAa,EAAE,yCAAyC;;IAGxD,UAAU,EAAE,wCAAwC;IACpD,WAAW,EAAE,qCAAqC;IAClD,cAAc,EAAE,sCAAsC;;IAGtD,UAAU,EAAE,wCAAwC;IACpD,WAAW,EAAE,oCAAoC;IACjD,cAAc,EAAE,iCAAiC;;IAGjD,UAAU,EAAE,wCAAwC;IACpD,WAAW,EAAE,gCAAgC;IAC7C,cAAc,EAAE,gCAAgC;;IAGhD,SAAS,EAAE,wCAAwC;IACnD,UAAU,EAAE,gCAAgC;IAC5C,aAAa,EAAE,0BAA0B;;IAGzC,SAAS,EAAE,sCAAsC;IACjD,UAAU,EAAE,qCAAqC;IACjD,aAAa,EAAE,wCAAwC;;IAGvD,SAAS,EAAE,wCAAwC;IACnD,UAAU,EAAE,yCAAyC;IACrD,aAAa,EAAE,wCAAwC;CAC1D,CAAC;AACK,MAAM,OAAO,GAAG,CAAC,IAAY;IAChC,OAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AAC9D,CAAC,CAAC;AAoBK,MAAM,uBAAuB,GAAqB;IACrD,SAAS,EAAE,EAAE;IAEb,IAAI,EAAE,CAAC;IACP,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,QAAQ,EAAE,CAAC;IACX,MAAM,EAAE,MAAM;IACd,QAAQ,EAAE,IAAI;IACd,QAAQ,EAAE,IAAI;IACd,QAAQ,MAAM;IACd,QAAQ,EAAE,MAAM;IAChB,SAAS,EAAE,QAAQ;CACtB,CAAC;AAEF;MACa,OAAO;;;;;;;IA0GhB,YAAY,UAA4B,EAAE;;;;;;;;QAlGhC,YAAO,GAAqB,EAAE,CAAC;;;;;;;;QAS/B,YAAO,GAAW,EAAE,CAAC;;;;;;;;QASrB,eAAU,GAAW,EAAE,CAAC;;;;;;;;QASxB,eAAU,GAAgC,IAAI,GAAG,EAAE,CAAC;;;;;;;;QASpD,aAAQ,GAAW,CAAC,CAAC;;;;;;;;QAoCrB,YAAO,GAAiB,IAAI,YAAY,EAAE,CAAC;QA2BjD,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,EAAE,GAAG,OAAO,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,uBAAuB,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAE3E,IAAI,EACA,IAAI,EACJ,KAAK,EACL,KAAK,EACL,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,SAAS,EACT,QAAQ,EACR,GAAG,UAAU,EAChB,GAAG,IAAI,CAAC,OAAO,CAAC;QAEjB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,IAAI,iBAAwD,CAAC;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACrD,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAgB,CAAC;YAC5C,IAAI,gBAAgB,GAAG;gBACnB,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC;gBACvB,UAAU,EAAE,IAAI,KAAK,IAAI,GAAG,QAAQ,GAAI,IAAe;gBACvD,SAAS;gBACT,QAAQ;gBACR,QAAQ;gBACR,KAAK;gBACL,IAAI,EAAE,QAAQ;aACjB,CAAC;;;;YAKF,IAAI,YAAY,GAAG,YAAY,CAAE,SAAwB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;YAC7E,iBAAiB,GAAG,YAAY,CAAC,MAAM,GAAG,YAAY;gBACjD,IAAI,CAAC,UAAuC,CAAC;;;YAIlD,gBAAgB,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;YACjE,IAAI,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;gBAC1B,iBAAiB,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;;YAGvE,IAAI,YAAY,GACZ,gBAAgB,CAAC,KAAK;iBACrB,gBAAgB,CAAC,QAAQ,GAAG,gBAAgB,CAAC,UAAU,CAAC;gBACzD,gBAAgB,CAAC,QAAQ,CAAC;YAC9B,IAAI,IAAI,CAAC,QAAQ,GAAG,YAAY;gBAAE,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;;YAG/D,IAAI,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;YACpE,SAAS,CAAC,QAAQ,GAAG;gBACjB,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;aAC5B,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YAC1C,EAAE,OAAO,EAAE,GAAG,EAAE;YAChB,EAAE,OAAO,EAAE,GAAG,EAAE;SACnB,EAAE;YACC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,QAAQ;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,QAAQ;YAAE,IAAI,CAAC,IAAI,EAAE,CAAC;;YACrB,IAAI,CAAC,KAAK,EAAE,CAAC;QAElB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG;YAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACpD,CAAC;KACL;;;;;;;;IASS,UAAU;QAChB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;YAC/B,IAAI;gBACA,IAAI,CAAC,MAAM,GAAG,CAAC,OAAyB;oBACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;oBAC7B,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC;iBAC3B,CAAC;aACL;YAAC,OAAO,GAAG,EAAE;gBAAE,MAAM,CAAC,GAAG,CAAC,CAAC;aAAE;SACjC,CAAC,CAAC;KACN;;;;;;;;;IAUM,IAAI,CACP,WAAkC,EAClC,UAAkC;QAElC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;KACrD;;;;;;;;IASM,KAAK,CAAC,UAAiC;QAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KACzC;;;;;;;;IASM,OAAO,CAAC,SAAoB;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KAC1C;;;;;;;IAQS,IAAI;QACV,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;KACnD;;;;;;;;;;IAWM,EAAE,CAAC,MAAkB,EAAE,QAA2B,EAAE,KAAc;QACrE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC;KACf;;;;;;;;;;IAWM,GAAG,CAAC,MAAkB,EAAE,QAA2B,EAAE,KAAc;QACtE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC;KACf;;;;;;;;;IAUM,IAAI,CAAC,MAAsB,EAAE,GAAG,IAAS;QAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;KACf;;;;;;;;IASM,YAAY,CAAC,OAAoB;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KACvC;;;;;;;IAQM,IAAI;;QAEP,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,UAAU,EAAE;YAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS;gBAC7B,IAAI,SAAS,CAAC,SAAS,KAAK,UAAU;oBAAE,SAAS,CAAC,IAAI,EAAE,CAAC;aAC5D,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;KACf;;;;;;;IAQM,KAAK;;QAER,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,UAAU,EAAE;YAC7C,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC3B,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACjD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS;gBAC7B,IAAI,SAAS,CAAC,SAAS,KAAK,UAAU;oBAAE,SAAS,CAAC,KAAK,EAAE,CAAC;aAC7D,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACtB;QACD,OAAO,IAAI,CAAC;KACf;;;;;;;IAQM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;;;;IAQM,cAAc;QACjB,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;KACzC;;;;;;;;IASM,cAAc,CAAC,IAAY;QAC9B,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS;YAC7B,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;SAChC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACf;;;;;;;IAQM,WAAW;QACd,OAAO,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;KAChD;;;;;;;;IASM,WAAW,CAAC,OAAe;QAC9B,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS;YAC7B,SAAS,CAAC,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACf;;;;;;;IAQM,QAAQ;QACX,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;KAC1C;;;;;;;;IAQM,QAAQ,CAAC,QAAgB,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS;YAC7B,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;SAClC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACf;;;;;;IAOM,KAAK;QACR,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAEjC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ;YAAE,IAAI,CAAC,IAAI,EAAE,CAAC;;YAClC,IAAI,CAAC,KAAK,EAAE,CAAC;KACrB;;;;;;;IAQM,YAAY;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;KACvC;;;;;;;IAQM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;IAGM,MAAM;QACT,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC5B;CACJ;AAED;AACO,MAAM,OAAO,GAAG,CAAC,UAA4B,EAAE;IAClD,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;AAChC,CAAC;;AChlBD;MACa,WAAY,SAAQ,KAAK;IAAtC;;QAMc,WAAM,GAAY,KAAK,CAAC;KA+ErC;IA7EU,IAAI;;QAEP,IAAI,CAAC,eAAe,GAAG;YACnB,IAAI,EAAE,IAAI;YACV,UAAU,EAAE,KAAK;YACjB,SAAS,EAAE,GAAG;SACjB,CAAC;;QAGF,IAAI,CAAC,QAAQ,GAAG,IAAI,oBAAoB,CAAC,OAAO;YAC5C,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;SACxC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;;QAGzB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE;YACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;SACpE;QAED,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,EAAE;YAC3B,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;SAClC;;QAGD,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;;QAG1D,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;IAES,OAAO;QACb,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC3C;IAES,SAAS;QACf,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC7C;IAES,QAAQ;QACd,OAAO,CAAC;YACJ,MAAM,EAAE,IAAI,CAAC,WAAW;YACxB,SAAS,EAAE,CAAC,cAAc,IAAI,CAAC,QAAQ,IAAI,EAAE,gBAAgB,CAAC;YAC9D,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACf,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,WAAW;YACnB,QAAQ,CAAC,EAAE;gBACP,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,gBAAgB,CAAC;gBACtC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;aAC1B;SACJ,CAAC,CAAC;KACN;IAES,SAAS;QACf,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,cAAc,IAAI,CAAC,QAAQ,IAAI,CAAC;QACnE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;KACxC;IAEM,sBAAsB,CAAC,OAAO;QACjC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE;gBACvB,IAAI,KAAK,CAAC,iBAAiB,GAAG,CAAC,EAAE;oBAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;iBACtB;qBAAM;oBACH,IAAI,CAAC,SAAS,EAAE,CAAC;iBACpB;aACJ;SACJ;KACJ;IAEM,UAAU;QACb,IAAI,CAAC,SAAS,EAAE,CAAC;KACpB;;;ACxFL;AACO,MAAM,QAAQ,GAAG;IACpB,MAAM,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;;;IAGnD,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,OAAO,KAAK,CAAC;;;IAI5C,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AAEK,MAAM,QAAQ,GAAG,CAAC,KAAa;;IAElC,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC/E,CAAC,CAAC;AAEK,MAAM,UAAU,GAAG;;IAEtB,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC;IAC9D,MAAM,uBAAuB,GAAG,OAAO,GAAG,CAAC,OAAO,KAAK,SAAS,CAAC;IACjE,IAAI,uBAAuB;QAAE,OAAO,GAAG,CAAC,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;IACnE,OAAO,IAAI,CAAC;AAChB,CAAC;;MCpBY,YAAa,SAAQ,OAAO;IAAzC;;QAIc,oBAAe,GAAW,IAAI,CAAC;KAwD5C;IAtDU,IAAI;;QAEP,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC3D,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;SAClE;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;KACjD;IAEM,UAAU;QACb,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;KACJ;IAEM,MAAM,IAAI;QACb,MAAM,IAAI,OAAO,CAAC,OAAO;YACrB,MAAM,CAAC,UAAU,CAAC;gBACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;gBACnD,OAAO,EAAE,CAAC;aACb,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SAC5B,CAAC,CAAC;QAEH,MAAM,IAAI,OAAO,CAAC,OAAM,OAAO;YAC3B,OAAO,CAAC;gBACJ,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACf,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,GAAG;gBACb,QAAQ,CAAC,EAAE;oBACP,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;iBAC1B;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAElD,MAAM,OAAO,CAAC;gBACV,MAAM,EAAE,IAAI,CAAC,WAAW;gBACxB,SAAS,EAAE,CAAC,gBAAgB,EAAE,kBAAkB,CAAC;gBACjD,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,cAAc;aACzB,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,kBAAkB,CAAC;YACtD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAElD,OAAO,EAAE,CAAC;SACb,CAAC,CAAC;KACN;CACJ;MAEY,cAAe,SAAQ,OAAO;IAIhC,IAAI;;QAEP,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,QAAQ,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,CAAC,CAAC;;QAG5E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACpC;IAEM,UAAU;QACb,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,0BAA0B,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACrE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,yBAAyB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9D;IAEM,UAAU;QACb,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACtE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/D;IAEM,aAAa;QAChB,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;YACzB,EAAkB,CAAC,KAAK,CAAC,SAAS,GAAG,mBAAmB,CAAC;YACzD,EAAkB,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;SAC3C;KACJ;IAEM,IAAI;QACP,OAAO,CAAC;YACJ,MAAM,EAAG,IAAI,CAAC,QAA0B;YACxC,SAAS,EAAE;gBACP,EAAE,SAAS,EAAE,mBAAmB,EAAE,OAAO,EAAE,CAAC,EAAE;gBAC9C,EAAE,SAAS,EAAE,iBAAiB,EAAE,OAAO,EAAE,CAAC,EAAE;aAC/C;;YAED,KAAK,CAAC,CAAS;gBACX,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aACxB;YACD,QAAQ,CAAC,EAAuD;gBAC5D,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,iBAAiB,CAAC;gBACvC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;aAC1B;YACD,MAAM,EAAE,WAAW;YACnB,QAAQ,EAAE,GAAG;SAChB,CAAC,CAAC;KACN;;;AC9GL;MACa,IAAK,SAAQ,UAAU;IAApC;;QACc,SAAI,GAAG,SAAS,CAAC;QACjB,aAAQ,GAAG,GAAG,CAAC;KAsC5B;IApCG,GAAG,CAAC,EAAE,IAAI,EAAmB;QACzB,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QACxB,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACpC,MAAM,CAAC,MAAM,CAAC;YACV,GAAG,EAAE,CAAC;YACN,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC;QAEH,OAAO,IAAI,OAAO,CAAC,OAAM,OAAO;YAC5B,MAAM,OAAO,CAAC;gBACV,MAAM,EAAE,WAAW;gBACnB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACf,QAAQ;gBACR,QAAQ,CAAC,EAAoC;oBACzC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;iBAC1B;aACJ,CAAC,CAAC;YAEH,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtB,OAAO,EAAE,CAAC;SACb,CAAC,CAAC;KACN;IAED,EAAE,CAAC,EAAE,EAAE,EAAmB;QACtB,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QACxB,IAAI,SAAS,GAAG,EAAE,CAAC,UAAU,EAAE,CAAC;QAChC,SAAS,CAAC,KAAK,CAAC,SAAS,GAAG,gBAAgB,CAAC;QAC7C,OAAO,OAAO,CAAC;YACX,MAAM,EAAE,SAAS;YACjB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACf,QAAQ;YACR,QAAQ,CAAC,EAAoC;gBACzC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;aAC1B;SACJ,CAAC,CAAC;KACN;CACJ;MAEY,KAAM,SAAQ,UAAU;IAArC;;QACc,SAAI,GAAG,OAAO,CAAC;QACf,aAAQ,GAAG,GAAG,CAAC;QACf,cAAS,GAAW,OAAO,CAAC;KAyCzC;IAvCG,GAAG,CAAC,EAAE,IAAI,EAAmB;QACzB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QACnC,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACpC,MAAM,CAAC,MAAM,CAAC;YACV,GAAG,EAAE,CAAC;YACN,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;YACX,MAAM,EAAE,WAAW;YACnB,SAAS,EAAE;gBACP,EAAE,SAAS,EAAE,gBAAgB,EAAE,OAAO,EAAE,CAAC,EAAE;gBAC3C,EAAE,SAAS,EAAE,cAAc,SAAS,KAAK,MAAM,GAAG,GAAG,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE;aACjF;YACD,QAAQ;YACR,MAAM,EAAE,UAAU;YAClB,QAAQ,EAAE,CAAC,EAAuD;gBAC9D,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;gBACvB,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,cAAc,SAAS,KAAK,MAAM,GAAG,GAAG,GAAG,EAAE,MAAM,CAAC;aAC5E;SACJ,CAAC,CAAC;KACN;IAED,EAAE,CAAC,EAAE,EAAE,EAAmB;QACtB,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QACxB,IAAI,SAAS,GAAG,EAAE,CAAC,UAAU,EAAE,CAAC;QAChC,OAAO,OAAO,CAAC;YACX,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE;gBACP,EAAE,SAAS,EAAE,cAAc,IAAI,CAAC,SAAS,KAAK,OAAO,GAAG,GAAG,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE;gBACpF,EAAE,SAAS,EAAE,gBAAgB,EAAE,OAAO,EAAE,CAAC,EAAE;aAC9C;YACD,QAAQ;YACR,MAAM,EAAE,WAAW;YACnB,QAAQ,CAAC,EAAuD;gBAC5D,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;gBACvB,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,gBAAgB,CAAC;aACzC;SACJ,CAAC,CAAC;KACN;CACJ;MAEY,SAAU,SAAQ,KAAK;IAApC;;QACc,SAAI,GAAG,YAAY,CAAC;QACpB,aAAQ,GAAG,GAAG,CAAC;QACf,cAAS,GAAW,MAAM,CAAC;KACxC;CAAA;MAEY,UAAW,SAAQ,KAAK;IAArC;;QACc,SAAI,GAAG,aAAa,CAAC;QACrB,aAAQ,GAAG,GAAG,CAAC;QACf,cAAS,GAAW,OAAO,CAAC;KACzC;CAAA;MAEY,aAAc,SAAQ,UAAU;IAA7C;;QACc,SAAI,GAAG,KAAK,CAAC;QACb,UAAK,GAAG,GAAG,CAAC;QACZ,yBAAoB,GAAG,GAAG,CAAC;KAkHxC;IA3GU,IAAI;QACP,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACjE,IAAI,CAAC,kBAAkB,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,4BAA4B,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;QACpH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;KACnD;IAED,GAAG,CAAC,EAAE,IAAI,EAAmB;QACzB,IAAI,EAAE,oBAAoB,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QACrD,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACpC,MAAM,CAAC,MAAM,CAAC;YACV,GAAG,EAAE,CAAC;YACN,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC;QAEH,OAAO,IAAI,OAAO,CAAC,OAAM,OAAO;YAC5B,OAAO,CAAC;gBACJ,MAAM,EAAE,WAAW;gBACnB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACf,QAAQ;gBACR,QAAQ,CAAC,EAAoC;oBACzC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;iBAC1B;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;YAE9C,MAAM,OAAO,CAAC;gBACV,MAAM,EAAE,IAAI,CAAC,kBAAkB;gBAC/B,SAAS,EAAE;oBACP,EAAE,SAAS,EAAE,WAAW,EAAE;oBAC1B,EAAE,SAAS,EAAE,WAAW,EAAE;iBAC7B;;gBAED,KAAK,CAAC,CAAS;oBACX,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC1B;gBACD,QAAQ,CAAC,EAAsC;oBAC3C,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,WAAW,CAAC;iBACpC;gBACD,MAAM,EAAE,WAAW;gBACnB,QAAQ,EAAE,GAAG;aAChB,CAAC,CAAC;YAEH,IAAI,cAAc,GAAG,GAAG,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;YAEjD,IAAI,OAAO,GAAG,MAAM,OAAO,CAAC;gBACxB,MAAM,EAAE,IAAI,CAAC,cAAc;gBAC3B,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACf,QAAQ,EAAE,cAAc;gBACxB,QAAQ,CAAC,EAAoC;oBACzC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;iBAC1B;aACJ,CAAC,CAAC;YAEH,MAAM,OAAO,CAAC;gBACV,OAAO;gBACP,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACf,QAAQ,CAAC,EAAoC;oBACzC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;iBAC1B;gBACD,KAAK,EAAE,IAAI;aACd,CAAC,CAAC;YAEH,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;YAChD,OAAO,EAAE,CAAC;SACb,CAAC,CAAC;KACN;IAED,EAAE,CAAC,EAAE,EAAE,EAAmB;QACtB,IAAI,EAAE,oBAAoB,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QACrD,IAAI,SAAS,GAAG,EAAE,CAAC,UAAU,EAAE,CAAC;QAChC,SAAS,CAAC,KAAK,CAAC,SAAS,GAAG,gBAAgB,CAAC;QAC7C,OAAO,IAAI,OAAO,CAAC,OAAM,OAAO;YAC5B,OAAO,CAAC;gBACJ,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACf,QAAQ,CAAC,EAAoC;oBACzC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;iBAC1B;gBACD,QAAQ;aACX,CAAC,CAAC;YAEH,MAAM,OAAO,CAAC;gBACV,MAAM,EAAE,IAAI,CAAC,kBAAkB;gBAC/B,SAAS,EAAE;oBACP,EAAE,SAAS,EAAE,WAAW,EAAE;oBAC1B,EAAE,SAAS,EAAE,WAAW,EAAE;iBAC7B;;gBAED,KAAK,CAAC,CAAS;oBACX,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC1B;gBACD,QAAQ,CAAC,EAAsC;oBAC3C,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,WAAW,CAAC;iBACpC;gBACD,MAAM,EAAE,WAAW;gBACnB,QAAQ,EAAE,GAAG;aAChB,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC7C,OAAO,EAAE,CAAC;SACb,CAAC,CAAC;KACN;;;ACtNL,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI;IACA,IAAI,KAAK,GAAG,QAAQ,EAAE,CAAC;IACvB,IAAI,KAAK,KAAK,IAAI;QAAE,KAAK,GAAG,UAAU,EAAE,CAAC;IACzC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;CAC9C;AAAC,OAAO,CAAC,EAAE;IACR,OAAO,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;CAC5D;AAYD;AACA,IAAI,QAAQ,GAAG,CAAC,KAAa;IACzB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAClC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpB,CAAC,CAAC;AAEF;AACA;AACA;AACA;AAEA,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC,WAAW,CAAC,CAAC;IAC3D,QAAQ,CAAC,CAAC,CAAC,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC;AAEH,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;AACtB,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAC5B,GAAG;KACE,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC;KAC1B,GAAG,CAAC,SAAS,EAAE,IAAI,YAAY,EAAE,CAAC;KAClC,GAAG,CAAC,SAAS,EAAE,IAAI,cAAc,EAAE,CAAC;KACpC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC;KAEtB,GAAG,CAAC,YAAY,EAAE,IAAI,IAAI,EAAE,CAAC;KAC7B,GAAG,CAAC,YAAY,EAAE,IAAI,aAAa,EAAE,CAAC;KACtC,GAAG,CAAC,YAAY,EAAE,IAAI,KAAK,EAAE,CAAC;KAC9B,GAAG,CAAC,YAAY,EAAE,IAAI,SAAS,EAAE,CAAC;KAClC,GAAG,CAAC,YAAY,EAAE,IAAI,UAAU,EAAE,CAAC;KAEnC,GAAG,CAAC,OAAO,EAAE,IAAI,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC,CAAC;AAE/D,CAAC;IAEG,IAAI;QACA,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;KACpB;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;KACxC;IAED,IAAI,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;IAC7D,KAAK,IAAI,IAAI,IAAI,OAAO,EAAE;QACtB,IAAI,OAAO,GAAI,IAA0B,CAAC;QAC1C,MAAM,CAAC,GAAG,CAAC;YACP,IAAI,EAAE,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,QAAQ;YAC3D,MAAM;gBACF,IAAI,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACpD,IAAI,CAAC,QAAQ;oBAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC/C,KAAK,IAAI,GAAG,IAAI,OAAO,EAAE;oBACrB,IAAI,GAAG,KAAK,OAAO;wBACf,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBACtC;aACJ;SACJ,CAAC,CAAC;KACN;AACL,CAAC,GAAG"}